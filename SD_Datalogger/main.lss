
main.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00002de2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000020  00800060  00002de2  00002e76  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          000002c3  00800080  00800080  00002e96  2**0
                  ALLOC
  3 .stab         00001674  00000000  00000000  00002e98  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000253  00000000  00000000  0000450c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      00000011  00000000  00000000  0000475f  2**0
                  CONTENTS, READONLY
  6 .debug_aranges 00000100  00000000  00000000  00004770  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_pubnames 000006ec  00000000  00000000  00004870  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_info   00002b19  00000000  00000000  00004f5c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_abbrev 00000a27  00000000  00000000  00007a75  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_line   00001ae6  00000000  00000000  0000849c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_frame  00000434  00000000  00000000  00009f84  2**2
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_str    00000a9a  00000000  00000000  0000a3b8  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_loc    00001f3b  00000000  00000000  0000ae52  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_ranges 00000150  00000000  00000000  0000cd8d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 8b 02 	jmp	0x516	; 0x516 <__ctors_end>
       4:	0c 94 a8 02 	jmp	0x550	; 0x550 <__bad_interrupt>
       8:	0c 94 a8 02 	jmp	0x550	; 0x550 <__bad_interrupt>
       c:	0c 94 a8 02 	jmp	0x550	; 0x550 <__bad_interrupt>
      10:	0c 94 a8 02 	jmp	0x550	; 0x550 <__bad_interrupt>
      14:	0c 94 a8 02 	jmp	0x550	; 0x550 <__bad_interrupt>
      18:	0c 94 a8 02 	jmp	0x550	; 0x550 <__bad_interrupt>
      1c:	0c 94 a8 02 	jmp	0x550	; 0x550 <__bad_interrupt>
      20:	0c 94 a8 02 	jmp	0x550	; 0x550 <__bad_interrupt>
      24:	0c 94 a8 02 	jmp	0x550	; 0x550 <__bad_interrupt>
      28:	0c 94 a8 02 	jmp	0x550	; 0x550 <__bad_interrupt>
      2c:	0c 94 a8 02 	jmp	0x550	; 0x550 <__bad_interrupt>
      30:	0c 94 a8 02 	jmp	0x550	; 0x550 <__bad_interrupt>
      34:	0c 94 a8 02 	jmp	0x550	; 0x550 <__bad_interrupt>
      38:	0c 94 a8 02 	jmp	0x550	; 0x550 <__bad_interrupt>
      3c:	0c 94 a8 02 	jmp	0x550	; 0x550 <__bad_interrupt>
      40:	0c 94 a8 02 	jmp	0x550	; 0x550 <__bad_interrupt>
      44:	0c 94 a8 02 	jmp	0x550	; 0x550 <__bad_interrupt>
      48:	0c 94 a8 02 	jmp	0x550	; 0x550 <__bad_interrupt>
      4c:	0c 94 a8 02 	jmp	0x550	; 0x550 <__bad_interrupt>
      50:	0c 94 a8 02 	jmp	0x550	; 0x550 <__bad_interrupt>
      54:	d7 10       	cpse	r13, r7
      56:	da 10       	cpse	r13, r10
      58:	dd 10       	cpse	r13, r13
      5a:	e0 10       	cpse	r14, r0
      5c:	e3 10       	cpse	r14, r3
      5e:	e6 10       	cpse	r14, r6
      60:	e9 10       	cpse	r14, r9

00000062 <__c.1673>:
      62:	0a 0d 0a 0d 20 49 6e 76 61 6c 69 64 20 6f 70 74     .... Invalid opt
      72:	69 6f 6e 21 0a 0d 00                                ion!...

00000079 <__c.1670>:
      79:	46 69 6c 65 20 64 6f 65 73 20 6e 6f 74 20 65 78     File does not ex
      89:	69 73 74 2e 2e 00                                   ist...

0000008f <__c.1667>:
      8f:	20 66 69 6c 65 20 6e 61 6d 65 20 74 6f 6f 20 6c      file name too l
      9f:	6f 6e 67 2e 2e 00                                   ong...

000000a5 <__c.1660>:
      a5:	0a 0d 45 6e 74 65 72 20 66 69 6c 65 20 6e 61 6d     ..Enter file nam
      b5:	65 3a 20 00                                         e: .

000000b9 <__c.1650>:
      b9:	0a 0d 4e 6f 72 6d 61 6c 20 6f 70 65 72 61 74 69     ..Normal operati
      c9:	6f 6e 20 73 74 61 72 74 65 64 2e 2e 00              on started...

000000d6 <__c.1647>:
      d6:	0a 0d 0a 0d 3e 20 45 6e 74 65 72 20 74 68 65 20     ....> Enter the 
      e6:	6f 70 74 69 6f 6e 3a 00                             option:.

000000ee <__c.1645>:
      ee:	0a 0d 3e 20 36 20 3a 20 44 65 6c 65 74 65 20 46     ..> 6 : Delete F
      fe:	69 6c 65 00                                         ile.

00000102 <__c.1643>:
     102:	0a 0d 3e 20 35 20 3a 20 52 65 61 64 20 46 69 6c     ..> 5 : Read Fil
     112:	65 00                                               e.

00000114 <__c.1641>:
     114:	0a 0d 3e 20 34 20 3a 20 47 65 74 20 66 69 6c 65     ..> 4 : Get file
     124:	20 6c 69 73 74 00                                    list.

0000012a <__c.1639>:
     12a:	0a 0d 3e 20 33 20 3a 20 55 70 64 61 74 65 20 54     ..> 3 : Update T
     13a:	69 6d 65 00                                         ime.

0000013e <__c.1637>:
     13e:	0a 0d 3e 20 32 20 3a 20 55 70 64 61 74 65 20 44     ..> 2 : Update D
     14e:	61 74 65 00                                         ate.

00000152 <__c.1635>:
     152:	0a 0d 3e 20 31 20 3a 20 44 69 73 70 6c 61 79 20     ..> 1 : Display 
     162:	63 75 72 72 65 6e 74 20 44 61 74 65 2f 54 69 6d     current Date/Tim
     172:	65 00                                               e.

00000174 <__c.1633>:
     174:	0a 0d 0a 0d 3e 20 30 20 3a 20 45 78 69 74 20 74     ....> 0 : Exit t
     184:	68 65 20 4d 65 6e 75 00                             he Menu.

0000018c <__c.1631>:
     18c:	0a 0d 46 41 54 33 32 20 6e 6f 74 20 66 6f 75 6e     ..FAT32 not foun
     19c:	64 21 00                                            d!.

0000019f <__c.1629>:
     19f:	55 6e 6b 6e 6f 77 6e 20 53 44 20 43 61 72 64 20     Unknown SD Card 
     1af:	44 65 74 65 63 74 65 64 21 00                       Detected!.

000001b9 <__c.1626>:
     1b9:	53 74 61 6e 64 61 72 64 20 43 61 70 61 63 69 74     Standard Capacit
     1c9:	79 20 43 61 72 64 20 28 56 65 72 20 32 2e 78 29     y Card (Ver 2.x)
     1d9:	20 44 65 74 65 63 74 65 64 21 00                     Detected!.

000001e4 <__c.1623>:
     1e4:	48 69 67 68 20 43 61 70 61 63 69 74 79 20 43 61     High Capacity Ca
     1f4:	72 64 20 44 65 74 65 63 74 65 64 21 00              rd Detected!.

00000201 <__c.1619>:
     201:	53 74 61 6e 64 61 72 64 20 43 61 70 61 63 69 74     Standard Capacit
     211:	79 20 43 61 72 64 20 28 56 65 72 20 31 2e 78 29     y Card (Ver 1.x)
     221:	20 44 65 74 65 63 74 65 64 21 00                     Detected!.

0000022c <__c.1616>:
     22c:	43 61 72 64 20 49 6e 69 74 69 61 6c 69 7a 61 74     Card Initializat
     23c:	69 6f 6e 20 66 61 69 6c 65 64 2e 2e 00              ion failed...

00000249 <__c.1614>:
     249:	53 44 20 63 61 72 64 20 6e 6f 74 20 64 65 74 65     SD card not dete
     259:	63 74 65 64 2e 2e 00                                cted...

00000260 <__c.1609>:
     260:	0a 0d 2a 2a 2a 2a 2a 2a 2a 2a 2a 2a 2a 2a 2a 2a     ..**************
     270:	2a 2a 2a 2a 2a 2a 2a 2a 2a 2a 2a 2a 2a 2a 2a 2a     ****************
     280:	2a 2a 2a 2a 2a 2a 2a 2a 2a 2a 2a 2a 2a 2a 2a 2a     ****************
     290:	2a 2a 2a 2a 2a 2a 0a 0d 00                          ******...

00000299 <__c.1607>:
     299:	0a 0d 20 20 20 20 20 20 20 20 20 6d 69 63 72 6f     ..         micro
     2a9:	53 44 20 44 61 74 61 6c 6f 67 67 65 72 20 2d 20     SD Datalogger - 
     2b9:	62 79 20 43 43 20 44 68 61 72 6d 61 6e 69 20 00     by CC Dharmani .

000002c9 <__c.1605>:
     2c9:	0a 0d 0a 0d 2a 2a 2a 2a 2a 2a 2a 2a 2a 2a 2a 2a     ....************
     2d9:	2a 2a 2a 2a 2a 2a 2a 2a 2a 2a 2a 2a 2a 2a 2a 2a     ****************
     2e9:	2a 2a 2a 2a 2a 2a 2a 2a 2a 2a 2a 2a 2a 2a 2a 2a     ****************
     2f9:	2a 2a 2a 2a 2a 2a 2a 2a 00                          ********.

00000302 <__c.1789>:
     302:	45 72 72 6f 72 20 69 6e 20 67 65 74 74 69 6e 67     Error in getting
     312:	20 63 6c 75 73 74 65 72 00                           cluster.

0000031b <__c.1787>:
     31b:	45 6e 64 20 6f 66 20 43 6c 75 73 74 65 72 20 43     End of Cluster C
     32b:	68 61 69 6e 00                                      hain.

00000330 <__c.1775>:
     330:	20 4e 6f 20 66 72 65 65 20 63 6c 75 73 74 65 72      No free cluster
     340:	21 00                                               !.

00000342 <__c.1767>:
     342:	20 4e 6f 20 66 72 65 65 20 63 6c 75 73 74 65 72      No free cluster
     352:	21 00                                               !.

00000354 <__c.1712>:
     354:	49 6e 76 61 6c 69 64 20 66 69 6c 65 4e 61 6d 65     Invalid fileName
     364:	2e 2e 00                                            ...

00000367 <__c.1683>:
     367:	45 72 72 6f 72 20 69 6e 20 67 65 74 74 69 6e 67     Error in getting
     377:	20 63 6c 75 73 74 65 72 00                           cluster.

00000380 <__c.1633>:
     380:	45 72 72 6f 72 20 69 6e 20 67 65 74 74 69 6e 67     Error in getting
     390:	20 63 6c 75 73 74 65 72 00                           cluster.

00000399 <__c.1625>:
     399:	52 4f 4f 54 00                                      ROOT.

0000039e <__c.1623>:
     39e:	44 49 52 00                                         DIR.

000003a2 <__c.1621>:
     3a2:	20 20 20 00                                            .

000003a6 <__c.1619>:
     3a6:	46 49 4c 45 00                                      FILE.

000003ab <__c.1617>:
     3ab:	20 20 20 00                                            .

000003af <__c.1611>:
     3af:	46 69 6c 65 20 64 65 6c 65 74 65 64 21 00           File deleted!.

000003bd <__c.1609>:
     3bd:	44 65 6c 65 74 69 6e 67 2e 2e 00                    Deleting...

000003c8 <__c.1604>:
     3c8:	46 69 6c 65 20 64 6f 65 73 20 6e 6f 74 20 65 78     File does not ex
     3d8:	69 73 74 21 00                                      ist!.

000003dd <__c.1824>:
     3dd:	49 6e 76 61 6c 69 64 20 45 6e 74 72 79 2e 2e 00     Invalid Entry...

000003ed <__c.1822>:
     3ed:	44 61 74 65 20 55 70 64 61 74 65 20 46 61 69 6c     Date Update Fail
     3fd:	65 64 2e 2e 00                                      ed...

00000402 <__c.1820>:
     402:	44 61 74 65 20 55 70 64 61 74 65 64 20 73 75 63     Date Updated suc
     412:	65 73 73 66 75 6c 6c 79 21 00                       essfully!.

0000041c <__c.1818>:
     41c:	45 6e 74 65 72 20 44 61 79 20 28 53 75 6e 64 61     Enter Day (Sunda
     42c:	79 3a 30 2c 20 4d 6f 6e 64 61 79 3a 31 2e 2e 2e     y:0, Monday:1...
     43c:	29 20 28 30 2d 36 29 3a 00                          ) (0-6):.

00000445 <__c.1815>:
     445:	45 6e 74 65 72 20 44 61 74 65 20 28 64 64 2f 6d     Enter Date (dd/m
     455:	6d 2f 79 79 29 3a 00                                m/yy):.

0000045c <__c.1809>:
     45c:	49 6e 76 61 6c 69 64 20 45 6e 74 72 79 2e 2e 00     Invalid Entry...

0000046c <__c.1807>:
     46c:	54 69 6d 65 20 55 70 64 61 74 65 20 46 61 69 6c     Time Update Fail
     47c:	65 64 2e 2e 00                                      ed...

00000481 <__c.1805>:
     481:	54 69 6d 65 20 55 70 64 61 74 65 64 20 73 75 63     Time Updated suc
     491:	65 73 73 66 75 6c 6c 79 21 00                       essfully!.

0000049b <__c.1802>:
     49b:	45 6e 74 65 72 20 54 69 6d 65 20 69 6e 20 32 34     Enter Time in 24
     4ab:	68 20 66 6f 72 6d 61 74 28 68 68 3a 6d 6d 3a 73     h format(hh:mm:s
     4bb:	73 29 3a 00                                         s):.

000004bf <__c.1777>:
     4bf:	55 6e 6b 6e 6f 77 6e 00                             Unknown.

000004c7 <__c.1774>:
     4c7:	53 61 74 75 72 64 61 79 00                          Saturday.

000004d0 <__c.1771>:
     4d0:	46 72 69 64 61 79 00                                Friday.

000004d7 <__c.1768>:
     4d7:	54 68 75 72 73 64 61 79 00                          Thursday.

000004e0 <__c.1765>:
     4e0:	57 65 64 6e 65 73 64 61 79 00                       Wednesday.

000004ea <__c.1762>:
     4ea:	54 75 65 73 64 61 79 00                             Tuesday.

000004f2 <__c.1759>:
     4f2:	4d 6f 6e 64 61 79 00                                Monday.

000004f9 <__c.1755>:
     4f9:	53 75 6e 64 61 79 00                                Sunday.

00000500 <__c.1752>:
     500:	20 20 20 20 44 61 79 3a 20 00                           Day: .

0000050a <__c.1747>:
     50a:	44 61 74 65 3a 00                                   Date:.

00000510 <__c.1741>:
     510:	54 69 6d 65 3a 00                                   Time:.

00000516 <__ctors_end>:
     516:	11 24       	eor	r1, r1
     518:	1f be       	out	0x3f, r1	; 63
     51a:	cf e5       	ldi	r28, 0x5F	; 95
     51c:	d8 e0       	ldi	r29, 0x08	; 8
     51e:	de bf       	out	0x3e, r29	; 62
     520:	cd bf       	out	0x3d, r28	; 61

00000522 <__do_copy_data>:
     522:	10 e0       	ldi	r17, 0x00	; 0
     524:	a0 e6       	ldi	r26, 0x60	; 96
     526:	b0 e0       	ldi	r27, 0x00	; 0
     528:	e2 ee       	ldi	r30, 0xE2	; 226
     52a:	fd e2       	ldi	r31, 0x2D	; 45
     52c:	02 c0       	rjmp	.+4      	; 0x532 <__do_copy_data+0x10>
     52e:	05 90       	lpm	r0, Z+
     530:	0d 92       	st	X+, r0
     532:	a0 38       	cpi	r26, 0x80	; 128
     534:	b1 07       	cpc	r27, r17
     536:	d9 f7       	brne	.-10     	; 0x52e <__do_copy_data+0xc>

00000538 <__do_clear_bss>:
     538:	13 e0       	ldi	r17, 0x03	; 3
     53a:	a0 e8       	ldi	r26, 0x80	; 128
     53c:	b0 e0       	ldi	r27, 0x00	; 0
     53e:	01 c0       	rjmp	.+2      	; 0x542 <.do_clear_bss_start>

00000540 <.do_clear_bss_loop>:
     540:	1d 92       	st	X+, r1

00000542 <.do_clear_bss_start>:
     542:	a3 34       	cpi	r26, 0x43	; 67
     544:	b1 07       	cpc	r27, r17
     546:	e1 f7       	brne	.-8      	; 0x540 <.do_clear_bss_loop>
     548:	0e 94 d8 02 	call	0x5b0	; 0x5b0 <main>
     54c:	0c 94 ef 16 	jmp	0x2dde	; 0x2dde <_exit>

00000550 <__bad_interrupt>:
     550:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000554 <port_init>:
     554:	1b ba       	out	0x1b, r1	; 27
     556:	1a ba       	out	0x1a, r1	; 26
     558:	18 ba       	out	0x18, r1	; 24
     55a:	8f eb       	ldi	r24, 0xBF	; 191
     55c:	87 bb       	out	0x17, r24	; 23
     55e:	80 e8       	ldi	r24, 0x80	; 128
     560:	85 bb       	out	0x15, r24	; 21
     562:	80 e2       	ldi	r24, 0x20	; 32
     564:	84 bb       	out	0x14, r24	; 20
     566:	12 ba       	out	0x12, r1	; 18
     568:	11 ba       	out	0x11, r1	; 17
     56a:	08 95       	ret

0000056c <blinkRedLED>:
     56c:	28 ec       	ldi	r18, 0xC8	; 200
     56e:	30 e0       	ldi	r19, 0x00	; 0
     570:	ae 9a       	sbi	0x15, 6	; 21
     572:	80 ea       	ldi	r24, 0xA0	; 160
     574:	9f e0       	ldi	r25, 0x0F	; 15
     576:	f9 01       	movw	r30, r18
     578:	31 97       	sbiw	r30, 0x01	; 1
     57a:	f1 f7       	brne	.-4      	; 0x578 <blinkRedLED+0xc>
     57c:	01 97       	sbiw	r24, 0x01	; 1
     57e:	d9 f7       	brne	.-10     	; 0x576 <blinkRedLED+0xa>
     580:	ae 98       	cbi	0x15, 6	; 21
     582:	80 ea       	ldi	r24, 0xA0	; 160
     584:	9f e0       	ldi	r25, 0x0F	; 15
     586:	f9 01       	movw	r30, r18
     588:	31 97       	sbiw	r30, 0x01	; 1
     58a:	f1 f7       	brne	.-4      	; 0x588 <blinkRedLED+0x1c>
     58c:	01 97       	sbiw	r24, 0x01	; 1
     58e:	d9 f7       	brne	.-10     	; 0x586 <blinkRedLED+0x1a>
     590:	ef cf       	rjmp	.-34     	; 0x570 <blinkRedLED+0x4>

00000592 <init_devices>:
     592:	f8 94       	cli
     594:	0e 94 aa 02 	call	0x554	; 0x554 <port_init>
     598:	0e 94 f2 14 	call	0x29e4	; 0x29e4 <spi_init>
     59c:	0e 94 94 0f 	call	0x1f28	; 0x1f28 <twi_init>
     5a0:	0e 94 01 15 	call	0x2a02	; 0x2a02 <uart0_init>
     5a4:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <ADC_init>
     5a8:	15 be       	out	0x35, r1	; 53
     5aa:	1b be       	out	0x3b, r1	; 59
     5ac:	19 be       	out	0x39, r1	; 57
     5ae:	08 95       	ret

000005b0 <main>:
     5b0:	2f 92       	push	r2
     5b2:	3f 92       	push	r3
     5b4:	4f 92       	push	r4
     5b6:	5f 92       	push	r5
     5b8:	6f 92       	push	r6
     5ba:	7f 92       	push	r7
     5bc:	8f 92       	push	r8
     5be:	9f 92       	push	r9
     5c0:	af 92       	push	r10
     5c2:	bf 92       	push	r11
     5c4:	cf 92       	push	r12
     5c6:	df 92       	push	r13
     5c8:	ef 92       	push	r14
     5ca:	ff 92       	push	r15
     5cc:	0f 93       	push	r16
     5ce:	1f 93       	push	r17
     5d0:	df 93       	push	r29
     5d2:	cf 93       	push	r28
     5d4:	cd b7       	in	r28, 0x3d	; 61
     5d6:	de b7       	in	r29, 0x3e	; 62
     5d8:	2e 97       	sbiw	r28, 0x0e	; 14
     5da:	0f b6       	in	r0, 0x3f	; 63
     5dc:	f8 94       	cli
     5de:	de bf       	out	0x3e, r29	; 62
     5e0:	0f be       	out	0x3f, r0	; 63
     5e2:	cd bf       	out	0x3d, r28	; 61
     5e4:	88 ee       	ldi	r24, 0xE8	; 232
     5e6:	93 e0       	ldi	r25, 0x03	; 3
     5e8:	28 ec       	ldi	r18, 0xC8	; 200
     5ea:	30 e0       	ldi	r19, 0x00	; 0
     5ec:	f9 01       	movw	r30, r18
     5ee:	31 97       	sbiw	r30, 0x01	; 1
     5f0:	f1 f7       	brne	.-4      	; 0x5ee <main+0x3e>
     5f2:	01 97       	sbiw	r24, 0x01	; 1
     5f4:	d9 f7       	brne	.-10     	; 0x5ec <main+0x3c>
     5f6:	0e 94 c9 02 	call	0x592	; 0x592 <init_devices>
     5fa:	ae 98       	cbi	0x15, 6	; 21
     5fc:	89 ec       	ldi	r24, 0xC9	; 201
     5fe:	92 e0       	ldi	r25, 0x02	; 2
     600:	0e 94 14 15 	call	0x2a28	; 0x2a28 <transmitString_F>
     604:	89 e9       	ldi	r24, 0x99	; 153
     606:	92 e0       	ldi	r25, 0x02	; 2
     608:	0e 94 14 15 	call	0x2a28	; 0x2a28 <transmitString_F>
     60c:	80 e6       	ldi	r24, 0x60	; 96
     60e:	92 e0       	ldi	r25, 0x02	; 2
     610:	0e 94 14 15 	call	0x2a28	; 0x2a28 <transmitString_F>
     614:	10 92 31 03 	sts	0x0331, r1
     618:	10 e0       	ldi	r17, 0x00	; 0
     61a:	0e 94 6c 14 	call	0x28d8	; 0x28d8 <SD_init>
     61e:	88 23       	and	r24, r24
     620:	81 f0       	breq	.+32     	; 0x642 <main+0x92>
     622:	1f 5f       	subi	r17, 0xFF	; 255
     624:	1a 30       	cpi	r17, 0x0A	; 10
     626:	c9 f7       	brne	.-14     	; 0x61a <main+0x6a>
     628:	81 30       	cpi	r24, 0x01	; 1
     62a:	19 f4       	brne	.+6      	; 0x632 <main+0x82>
     62c:	89 e4       	ldi	r24, 0x49	; 73
     62e:	92 e0       	ldi	r25, 0x02	; 2
     630:	04 c0       	rjmp	.+8      	; 0x63a <main+0x8a>
     632:	82 30       	cpi	r24, 0x02	; 2
     634:	21 f4       	brne	.+8      	; 0x63e <main+0x8e>
     636:	8c e2       	ldi	r24, 0x2C	; 44
     638:	92 e0       	ldi	r25, 0x02	; 2
     63a:	0e 94 14 15 	call	0x2a28	; 0x2a28 <transmitString_F>
     63e:	0e 94 b6 02 	call	0x56c	; 0x56c <blinkRedLED>
     642:	80 91 31 03 	lds	r24, 0x0331
     646:	82 30       	cpi	r24, 0x02	; 2
     648:	39 f0       	breq	.+14     	; 0x658 <main+0xa8>
     64a:	83 30       	cpi	r24, 0x03	; 3
     64c:	41 f0       	breq	.+16     	; 0x65e <main+0xae>
     64e:	81 30       	cpi	r24, 0x01	; 1
     650:	49 f4       	brne	.+18     	; 0x664 <main+0xb4>
     652:	81 e0       	ldi	r24, 0x01	; 1
     654:	92 e0       	ldi	r25, 0x02	; 2
     656:	08 c0       	rjmp	.+16     	; 0x668 <main+0xb8>
     658:	84 ee       	ldi	r24, 0xE4	; 228
     65a:	91 e0       	ldi	r25, 0x01	; 1
     65c:	05 c0       	rjmp	.+10     	; 0x668 <main+0xb8>
     65e:	89 eb       	ldi	r24, 0xB9	; 185
     660:	91 e0       	ldi	r25, 0x01	; 1
     662:	02 c0       	rjmp	.+4      	; 0x668 <main+0xb8>
     664:	8f e9       	ldi	r24, 0x9F	; 159
     666:	91 e0       	ldi	r25, 0x01	; 1
     668:	0e 94 14 15 	call	0x2a28	; 0x2a28 <transmitString_F>
     66c:	0e 94 34 08 	call	0x1068	; 0x1068 <getBootSectorData>
     670:	88 23       	and	r24, r24
     672:	31 f0       	breq	.+12     	; 0x680 <main+0xd0>
     674:	8c e8       	ldi	r24, 0x8C	; 140
     676:	91 e0       	ldi	r25, 0x01	; 1
     678:	0e 94 14 15 	call	0x2a28	; 0x2a28 <transmitString_F>
     67c:	0e 94 b6 02 	call	0x56c	; 0x56c <blinkRedLED>
     680:	80 e5       	ldi	r24, 0x50	; 80
     682:	8d b9       	out	0x0d, r24	; 13
     684:	70 9a       	sbi	0x0e, 0	; 14
     686:	80 ed       	ldi	r24, 0xD0	; 208
     688:	97 e0       	ldi	r25, 0x07	; 7
     68a:	01 97       	sbiw	r24, 0x01	; 1
     68c:	f1 f7       	brne	.-4      	; 0x68a <main+0xda>
     68e:	9f 99       	sbic	0x13, 7	; 19
     690:	ae c0       	rjmp	.+348    	; 0x7ee <main+0x23e>
     692:	6e 01       	movw	r12, r28
     694:	08 94       	sec
     696:	c1 1c       	adc	r12, r1
     698:	d1 1c       	adc	r13, r1
     69a:	ee e0       	ldi	r30, 0x0E	; 14
     69c:	ae 2e       	mov	r10, r30
     69e:	b1 2c       	mov	r11, r1
     6a0:	ac 0e       	add	r10, r28
     6a2:	bd 1e       	adc	r11, r29
     6a4:	84 e7       	ldi	r24, 0x74	; 116
     6a6:	91 e0       	ldi	r25, 0x01	; 1
     6a8:	0e 94 14 15 	call	0x2a28	; 0x2a28 <transmitString_F>
     6ac:	82 e5       	ldi	r24, 0x52	; 82
     6ae:	91 e0       	ldi	r25, 0x01	; 1
     6b0:	0e 94 14 15 	call	0x2a28	; 0x2a28 <transmitString_F>
     6b4:	8e e3       	ldi	r24, 0x3E	; 62
     6b6:	91 e0       	ldi	r25, 0x01	; 1
     6b8:	0e 94 14 15 	call	0x2a28	; 0x2a28 <transmitString_F>
     6bc:	8a e2       	ldi	r24, 0x2A	; 42
     6be:	91 e0       	ldi	r25, 0x01	; 1
     6c0:	0e 94 14 15 	call	0x2a28	; 0x2a28 <transmitString_F>
     6c4:	84 e1       	ldi	r24, 0x14	; 20
     6c6:	91 e0       	ldi	r25, 0x01	; 1
     6c8:	0e 94 14 15 	call	0x2a28	; 0x2a28 <transmitString_F>
     6cc:	82 e0       	ldi	r24, 0x02	; 2
     6ce:	91 e0       	ldi	r25, 0x01	; 1
     6d0:	0e 94 14 15 	call	0x2a28	; 0x2a28 <transmitString_F>
     6d4:	8e ee       	ldi	r24, 0xEE	; 238
     6d6:	90 e0       	ldi	r25, 0x00	; 0
     6d8:	0e 94 14 15 	call	0x2a28	; 0x2a28 <transmitString_F>
     6dc:	86 ed       	ldi	r24, 0xD6	; 214
     6de:	90 e0       	ldi	r25, 0x00	; 0
     6e0:	0e 94 14 15 	call	0x2a28	; 0x2a28 <transmitString_F>
     6e4:	0e 94 0b 15 	call	0x2a16	; 0x2a16 <receiveByte>
     6e8:	f8 2e       	mov	r15, r24
     6ea:	0e 94 10 15 	call	0x2a20	; 0x2a20 <transmitByte>
     6ee:	83 e3       	ldi	r24, 0x33	; 51
     6f0:	f8 16       	cp	r15, r24
     6f2:	09 f1       	breq	.+66     	; 0x736 <main+0x186>
     6f4:	8f 15       	cp	r24, r15
     6f6:	50 f0       	brcs	.+20     	; 0x70c <main+0x15c>
     6f8:	81 e3       	ldi	r24, 0x31	; 49
     6fa:	f8 16       	cp	r15, r24
     6fc:	a1 f0       	breq	.+40     	; 0x726 <main+0x176>
     6fe:	8f 15       	cp	r24, r15
     700:	b8 f0       	brcs	.+46     	; 0x730 <main+0x180>
     702:	80 e3       	ldi	r24, 0x30	; 48
     704:	f8 16       	cp	r15, r24
     706:	09 f0       	breq	.+2      	; 0x70a <main+0x15a>
     708:	6d c0       	rjmp	.+218    	; 0x7e4 <main+0x234>
     70a:	08 c0       	rjmp	.+16     	; 0x71c <main+0x16c>
     70c:	84 e3       	ldi	r24, 0x34	; 52
     70e:	f8 16       	cp	r15, r24
     710:	a9 f0       	breq	.+42     	; 0x73c <main+0x18c>
     712:	86 e3       	ldi	r24, 0x36	; 54
     714:	8f 15       	cp	r24, r15
     716:	08 f4       	brcc	.+2      	; 0x71a <main+0x16a>
     718:	65 c0       	rjmp	.+202    	; 0x7e4 <main+0x234>
     71a:	1c c0       	rjmp	.+56     	; 0x754 <main+0x1a4>
     71c:	89 eb       	ldi	r24, 0xB9	; 185
     71e:	90 e0       	ldi	r25, 0x00	; 0
     720:	0e 94 14 15 	call	0x2a28	; 0x2a28 <transmitString_F>
     724:	3d c1       	rjmp	.+634    	; 0x9a0 <__stack+0x141>
     726:	0e 94 f0 10 	call	0x21e0	; 0x21e0 <RTC_displayDate>
     72a:	0e 94 b2 10 	call	0x2164	; 0x2164 <RTC_displayTime>
     72e:	ba cf       	rjmp	.-140    	; 0x6a4 <main+0xf4>
     730:	0e 94 2e 12 	call	0x245c	; 0x245c <RTC_updateDate>
     734:	b7 cf       	rjmp	.-146    	; 0x6a4 <main+0xf4>
     736:	0e 94 a7 11 	call	0x234e	; 0x234e <RTC_updateTime>
     73a:	b4 cf       	rjmp	.-152    	; 0x6a4 <main+0xf4>
     73c:	8d e0       	ldi	r24, 0x0D	; 13
     73e:	0e 94 10 15 	call	0x2a20	; 0x2a20 <transmitByte>
     742:	8a e0       	ldi	r24, 0x0A	; 10
     744:	0e 94 10 15 	call	0x2a20	; 0x2a20 <transmitByte>
     748:	80 e0       	ldi	r24, 0x00	; 0
     74a:	60 e0       	ldi	r22, 0x00	; 0
     74c:	70 e0       	ldi	r23, 0x00	; 0
     74e:	0e 94 97 09 	call	0x132e	; 0x132e <findFiles>
     752:	a8 cf       	rjmp	.-176    	; 0x6a4 <main+0xf4>
     754:	85 ea       	ldi	r24, 0xA5	; 165
     756:	90 e0       	ldi	r25, 0x00	; 0
     758:	0e 94 14 15 	call	0x2a28	; 0x2a28 <transmitString_F>
     75c:	f6 01       	movw	r30, r12
     75e:	11 92       	st	Z+, r1
     760:	ea 15       	cp	r30, r10
     762:	fb 05       	cpc	r31, r11
     764:	e1 f7       	brne	.-8      	; 0x75e <main+0x1ae>
     766:	00 e0       	ldi	r16, 0x00	; 0
     768:	0e 94 0b 15 	call	0x2a16	; 0x2a16 <receiveByte>
     76c:	18 2f       	mov	r17, r24
     76e:	8d 30       	cpi	r24, 0x0D	; 13
     770:	f9 f0       	breq	.+62     	; 0x7b0 <main+0x200>
     772:	88 30       	cpi	r24, 0x08	; 8
     774:	69 f4       	brne	.+26     	; 0x790 <main+0x1e0>
     776:	00 23       	and	r16, r16
     778:	b9 f3       	breq	.-18     	; 0x768 <main+0x1b8>
     77a:	88 e0       	ldi	r24, 0x08	; 8
     77c:	0e 94 10 15 	call	0x2a20	; 0x2a20 <transmitByte>
     780:	80 e2       	ldi	r24, 0x20	; 32
     782:	0e 94 10 15 	call	0x2a20	; 0x2a20 <transmitByte>
     786:	88 e0       	ldi	r24, 0x08	; 8
     788:	0e 94 10 15 	call	0x2a20	; 0x2a20 <transmitByte>
     78c:	01 50       	subi	r16, 0x01	; 1
     78e:	ec cf       	rjmp	.-40     	; 0x768 <main+0x1b8>
     790:	80 52       	subi	r24, 0x20	; 32
     792:	8f 35       	cpi	r24, 0x5F	; 95
     794:	48 f7       	brcc	.-46     	; 0x768 <main+0x1b8>
     796:	81 2f       	mov	r24, r17
     798:	0e 94 10 15 	call	0x2a20	; 0x2a20 <transmitByte>
     79c:	f6 01       	movw	r30, r12
     79e:	e0 0f       	add	r30, r16
     7a0:	f1 1d       	adc	r31, r1
     7a2:	10 83       	st	Z, r17
     7a4:	0f 5f       	subi	r16, 0xFF	; 255
     7a6:	0d 30       	cpi	r16, 0x0D	; 13
     7a8:	f9 f6       	brne	.-66     	; 0x768 <main+0x1b8>
     7aa:	8f e8       	ldi	r24, 0x8F	; 143
     7ac:	90 e0       	ldi	r25, 0x00	; 0
     7ae:	1c c0       	rjmp	.+56     	; 0x7e8 <main+0x238>
     7b0:	0d 30       	cpi	r16, 0x0D	; 13
     7b2:	08 f0       	brcs	.+2      	; 0x7b6 <main+0x206>
     7b4:	77 cf       	rjmp	.-274    	; 0x6a4 <main+0xf4>
     7b6:	8d e0       	ldi	r24, 0x0D	; 13
     7b8:	0e 94 10 15 	call	0x2a20	; 0x2a20 <transmitByte>
     7bc:	8a e0       	ldi	r24, 0x0A	; 10
     7be:	0e 94 10 15 	call	0x2a20	; 0x2a20 <transmitByte>
     7c2:	85 e3       	ldi	r24, 0x35	; 53
     7c4:	f8 16       	cp	r15, r24
     7c6:	51 f4       	brne	.+20     	; 0x7dc <main+0x22c>
     7c8:	80 e0       	ldi	r24, 0x00	; 0
     7ca:	b6 01       	movw	r22, r12
     7cc:	0e 94 91 0b 	call	0x1722	; 0x1722 <readFile>
     7d0:	81 30       	cpi	r24, 0x01	; 1
     7d2:	09 f0       	breq	.+2      	; 0x7d6 <main+0x226>
     7d4:	67 cf       	rjmp	.-306    	; 0x6a4 <main+0xf4>
     7d6:	89 e7       	ldi	r24, 0x79	; 121
     7d8:	90 e0       	ldi	r25, 0x00	; 0
     7da:	06 c0       	rjmp	.+12     	; 0x7e8 <main+0x238>
     7dc:	c6 01       	movw	r24, r12
     7de:	0e 94 83 0b 	call	0x1706	; 0x1706 <deleteFile>
     7e2:	60 cf       	rjmp	.-320    	; 0x6a4 <main+0xf4>
     7e4:	82 e6       	ldi	r24, 0x62	; 98
     7e6:	90 e0       	ldi	r25, 0x00	; 0
     7e8:	0e 94 14 15 	call	0x2a28	; 0x2a28 <transmitString_F>
     7ec:	5b cf       	rjmp	.-330    	; 0x6a4 <main+0xf4>
     7ee:	28 ec       	ldi	r18, 0xC8	; 200
     7f0:	30 e0       	ldi	r19, 0x00	; 0
     7f2:	9f 99       	sbic	0x13, 7	; 19
     7f4:	fe cf       	rjmp	.-4      	; 0x7f2 <main+0x242>
     7f6:	80 e9       	ldi	r24, 0x90	; 144
     7f8:	91 e0       	ldi	r25, 0x01	; 1
     7fa:	f9 01       	movw	r30, r18
     7fc:	31 97       	sbiw	r30, 0x01	; 1
     7fe:	f1 f7       	brne	.-4      	; 0x7fc <main+0x24c>
     800:	01 97       	sbiw	r24, 0x01	; 1
     802:	d9 f7       	brne	.-10     	; 0x7fa <main+0x24a>
     804:	9f 99       	sbic	0x13, 7	; 19
     806:	f5 cf       	rjmp	.-22     	; 0x7f2 <main+0x242>
     808:	9f 9b       	sbis	0x13, 7	; 19
     80a:	fe cf       	rjmp	.-4      	; 0x808 <main+0x258>
     80c:	80 e9       	ldi	r24, 0x90	; 144
     80e:	91 e0       	ldi	r25, 0x01	; 1
     810:	28 ec       	ldi	r18, 0xC8	; 200
     812:	30 e0       	ldi	r19, 0x00	; 0
     814:	f9 01       	movw	r30, r18
     816:	31 97       	sbiw	r30, 0x01	; 1
     818:	f1 f7       	brne	.-4      	; 0x816 <main+0x266>
     81a:	01 97       	sbiw	r24, 0x01	; 1
     81c:	d9 f7       	brne	.-10     	; 0x814 <main+0x264>
     81e:	ae 9a       	sbi	0x15, 6	; 21
     820:	5e 01       	movw	r10, r28
     822:	08 94       	sec
     824:	a1 1c       	adc	r10, r1
     826:	b1 1c       	adc	r11, r1
     828:	79 e0       	ldi	r23, 0x09	; 9
     82a:	47 2e       	mov	r4, r23
     82c:	51 2c       	mov	r5, r1
     82e:	4c 0e       	add	r4, r28
     830:	5d 1e       	adc	r5, r29
     832:	63 e5       	ldi	r22, 0x53	; 83
     834:	26 2e       	mov	r2, r22
     836:	56 e5       	ldi	r21, 0x56	; 86
     838:	35 2e       	mov	r3, r21
     83a:	4c e2       	ldi	r20, 0x2C	; 44
     83c:	d4 2e       	mov	r13, r20
     83e:	3d e0       	ldi	r19, 0x0D	; 13
     840:	e3 2e       	mov	r14, r19
     842:	2a e0       	ldi	r18, 0x0A	; 10
     844:	c2 2e       	mov	r12, r18
     846:	90 e2       	ldi	r25, 0x20	; 32
     848:	69 2e       	mov	r6, r25
     84a:	9e e4       	ldi	r25, 0x4E	; 78
     84c:	79 2e       	mov	r7, r25
     84e:	88 ec       	ldi	r24, 0xC8	; 200
     850:	88 2e       	mov	r8, r24
     852:	91 2c       	mov	r9, r1
     854:	0e 94 78 10 	call	0x20f0	; 0x20f0 <RTC_getDate>
     858:	88 23       	and	r24, r24
     85a:	11 f0       	breq	.+4      	; 0x860 <__stack+0x1>
     85c:	0e 94 b6 02 	call	0x56c	; 0x56c <blinkRedLED>
     860:	d5 01       	movw	r26, r10
     862:	90 e0       	ldi	r25, 0x00	; 0
     864:	e9 2f       	mov	r30, r25
     866:	f0 e0       	ldi	r31, 0x00	; 0
     868:	ed 5c       	subi	r30, 0xCD	; 205
     86a:	fc 4f       	sbci	r31, 0xFC	; 252
     86c:	80 81       	ld	r24, Z
     86e:	8c 93       	st	X, r24
     870:	9f 5f       	subi	r25, 0xFF	; 255
     872:	92 30       	cpi	r25, 0x02	; 2
     874:	11 f0       	breq	.+4      	; 0x87a <__stack+0x1b>
     876:	95 30       	cpi	r25, 0x05	; 5
     878:	09 f4       	brne	.+2      	; 0x87c <__stack+0x1d>
     87a:	9f 5f       	subi	r25, 0xFF	; 255
     87c:	11 96       	adiw	r26, 0x01	; 1
     87e:	a4 15       	cp	r26, r4
     880:	b5 05       	cpc	r27, r5
     882:	81 f7       	brne	.-32     	; 0x864 <__stack+0x5>
     884:	8e e2       	ldi	r24, 0x2E	; 46
     886:	89 87       	std	Y+9, r24	; 0x09
     888:	83 e4       	ldi	r24, 0x43	; 67
     88a:	8a 87       	std	Y+10, r24	; 0x0a
     88c:	2b 86       	std	Y+11, r2	; 0x0b
     88e:	3c 86       	std	Y+12, r3	; 0x0c
     890:	0e 94 40 10 	call	0x2080	; 0x2080 <RTC_getTime>
     894:	88 23       	and	r24, r24
     896:	11 f0       	breq	.+4      	; 0x89c <__stack+0x3d>
     898:	0e 94 b6 02 	call	0x56c	; 0x56c <blinkRedLED>
     89c:	20 e0       	ldi	r18, 0x00	; 0
     89e:	30 e0       	ldi	r19, 0x00	; 0
     8a0:	f9 01       	movw	r30, r18
     8a2:	ed 5c       	subi	r30, 0xCD	; 205
     8a4:	fc 4f       	sbci	r31, 0xFC	; 252
     8a6:	80 81       	ld	r24, Z
     8a8:	f9 01       	movw	r30, r18
     8aa:	e3 53       	subi	r30, 0x33	; 51
     8ac:	fd 4f       	sbci	r31, 0xFD	; 253
     8ae:	80 83       	st	Z, r24
     8b0:	2f 5f       	subi	r18, 0xFF	; 255
     8b2:	3f 4f       	sbci	r19, 0xFF	; 255
     8b4:	2a 30       	cpi	r18, 0x0A	; 10
     8b6:	31 05       	cpc	r19, r1
     8b8:	99 f7       	brne	.-26     	; 0x8a0 <__stack+0x41>
     8ba:	d0 92 d7 02 	sts	0x02D7, r13
     8be:	2b e0       	ldi	r18, 0x0B	; 11
     8c0:	30 e0       	ldi	r19, 0x00	; 0
     8c2:	f9 01       	movw	r30, r18
     8c4:	eb 54       	subi	r30, 0x4B	; 75
     8c6:	fd 4f       	sbci	r31, 0xFD	; 253
     8c8:	80 81       	ld	r24, Z
     8ca:	f9 01       	movw	r30, r18
     8cc:	e3 53       	subi	r30, 0x33	; 51
     8ce:	fd 4f       	sbci	r31, 0xFD	; 253
     8d0:	80 83       	st	Z, r24
     8d2:	2f 5f       	subi	r18, 0xFF	; 255
     8d4:	3f 4f       	sbci	r19, 0xFF	; 255
     8d6:	23 31       	cpi	r18, 0x13	; 19
     8d8:	31 05       	cpc	r19, r1
     8da:	99 f7       	brne	.-26     	; 0x8c2 <__stack+0x63>
     8dc:	d0 92 e0 02 	sts	0x02E0, r13
     8e0:	80 e0       	ldi	r24, 0x00	; 0
     8e2:	0e 94 fa 04 	call	0x9f4	; 0x9f4 <readTemperature>
     8e6:	24 e1       	ldi	r18, 0x14	; 20
     8e8:	30 e0       	ldi	r19, 0x00	; 0
     8ea:	f9 01       	movw	r30, r18
     8ec:	e9 57       	subi	r30, 0x79	; 121
     8ee:	ff 4f       	sbci	r31, 0xFF	; 255
     8f0:	80 81       	ld	r24, Z
     8f2:	f9 01       	movw	r30, r18
     8f4:	e3 53       	subi	r30, 0x33	; 51
     8f6:	fd 4f       	sbci	r31, 0xFD	; 253
     8f8:	80 83       	st	Z, r24
     8fa:	2f 5f       	subi	r18, 0xFF	; 255
     8fc:	3f 4f       	sbci	r19, 0xFF	; 255
     8fe:	2b 31       	cpi	r18, 0x1B	; 27
     900:	31 05       	cpc	r19, r1
     902:	99 f7       	brne	.-26     	; 0x8ea <__stack+0x8b>
     904:	91 e0       	ldi	r25, 0x01	; 1
     906:	0b e1       	ldi	r16, 0x1B	; 27
     908:	10 e0       	ldi	r17, 0x00	; 0
     90a:	f8 01       	movw	r30, r16
     90c:	e3 53       	subi	r30, 0x33	; 51
     90e:	fd 4f       	sbci	r31, 0xFD	; 253
     910:	d0 82       	st	Z, r13
     912:	f0 2e       	mov	r15, r16
     914:	f3 94       	inc	r15
     916:	89 2f       	mov	r24, r25
     918:	9e 87       	std	Y+14, r25	; 0x0e
     91a:	0e 94 54 05 	call	0xaa8	; 0xaa8 <readVoltage>
     91e:	a8 ea       	ldi	r26, 0xA8	; 168
     920:	b0 e0       	ldi	r27, 0x00	; 0
     922:	9e 85       	ldd	r25, Y+14	; 0x0e
     924:	ef 2d       	mov	r30, r15
     926:	f0 e0       	ldi	r31, 0x00	; 0
     928:	8d 91       	ld	r24, X+
     92a:	e3 53       	subi	r30, 0x33	; 51
     92c:	fd 4f       	sbci	r31, 0xFD	; 253
     92e:	80 83       	st	Z, r24
     930:	f3 94       	inc	r15
     932:	80 e0       	ldi	r24, 0x00	; 0
     934:	af 3a       	cpi	r26, 0xAF	; 175
     936:	b8 07       	cpc	r27, r24
     938:	a9 f7       	brne	.-22     	; 0x924 <__stack+0xc5>
     93a:	9f 5f       	subi	r25, 0xFF	; 255
     93c:	08 5f       	subi	r16, 0xF8	; 248
     93e:	1f 4f       	sbci	r17, 0xFF	; 255
     940:	98 30       	cpi	r25, 0x08	; 8
     942:	19 f7       	brne	.-58     	; 0x90a <__stack+0xab>
     944:	e0 92 20 03 	sts	0x0320, r14
     948:	c0 92 21 03 	sts	0x0321, r12
     94c:	c5 01       	movw	r24, r10
     94e:	0e 94 67 0c 	call	0x18ce	; 0x18ce <writeFile>
     952:	88 23       	and	r24, r24
     954:	11 f0       	breq	.+4      	; 0x95a <__stack+0xfb>
     956:	0e 94 b6 02 	call	0x56c	; 0x56c <blinkRedLED>
     95a:	20 e0       	ldi	r18, 0x00	; 0
     95c:	30 e0       	ldi	r19, 0x00	; 0
     95e:	c3 01       	movw	r24, r6
     960:	01 97       	sbiw	r24, 0x01	; 1
     962:	f1 f7       	brne	.-4      	; 0x960 <__stack+0x101>
     964:	9f 99       	sbic	0x13, 7	; 19
     966:	15 c0       	rjmp	.+42     	; 0x992 <__stack+0x133>
     968:	80 e9       	ldi	r24, 0x90	; 144
     96a:	91 e0       	ldi	r25, 0x01	; 1
     96c:	f4 01       	movw	r30, r8
     96e:	31 97       	sbiw	r30, 0x01	; 1
     970:	f1 f7       	brne	.-4      	; 0x96e <__stack+0x10f>
     972:	01 97       	sbiw	r24, 0x01	; 1
     974:	d9 f7       	brne	.-10     	; 0x96c <__stack+0x10d>
     976:	9f 99       	sbic	0x13, 7	; 19
     978:	0c c0       	rjmp	.+24     	; 0x992 <__stack+0x133>
     97a:	9f 9b       	sbis	0x13, 7	; 19
     97c:	fe cf       	rjmp	.-4      	; 0x97a <__stack+0x11b>
     97e:	80 e9       	ldi	r24, 0x90	; 144
     980:	91 e0       	ldi	r25, 0x01	; 1
     982:	28 ec       	ldi	r18, 0xC8	; 200
     984:	30 e0       	ldi	r19, 0x00	; 0
     986:	f9 01       	movw	r30, r18
     988:	31 97       	sbiw	r30, 0x01	; 1
     98a:	f1 f7       	brne	.-4      	; 0x988 <__stack+0x129>
     98c:	01 97       	sbiw	r24, 0x01	; 1
     98e:	d9 f7       	brne	.-10     	; 0x986 <__stack+0x127>
     990:	07 c0       	rjmp	.+14     	; 0x9a0 <__stack+0x141>
     992:	2f 5f       	subi	r18, 0xFF	; 255
     994:	3f 4f       	sbci	r19, 0xFF	; 255
     996:	24 36       	cpi	r18, 0x64	; 100
     998:	31 05       	cpc	r19, r1
     99a:	09 f4       	brne	.+2      	; 0x99e <__stack+0x13f>
     99c:	5b cf       	rjmp	.-330    	; 0x854 <main+0x2a4>
     99e:	df cf       	rjmp	.-66     	; 0x95e <__stack+0xff>
     9a0:	ae 98       	cbi	0x15, 6	; 21
     9a2:	25 cf       	rjmp	.-438    	; 0x7ee <main+0x23e>

000009a4 <ADC_init>:
     9a4:	16 b8       	out	0x06, r1	; 6
     9a6:	80 e4       	ldi	r24, 0x40	; 64
     9a8:	87 b9       	out	0x07, r24	; 7
     9aa:	82 e8       	ldi	r24, 0x82	; 130
     9ac:	86 b9       	out	0x06, r24	; 6
     9ae:	37 9a       	sbi	0x06, 7	; 6
     9b0:	08 95       	ret

000009b2 <ADC_read>:
     9b2:	60 e0       	ldi	r22, 0x00	; 0
     9b4:	40 e0       	ldi	r20, 0x00	; 0
     9b6:	50 e0       	ldi	r21, 0x00	; 0
     9b8:	36 9a       	sbi	0x06, 6	; 6
     9ba:	34 9b       	sbis	0x06, 4	; 6
     9bc:	fe cf       	rjmp	.-4      	; 0x9ba <ADC_read+0x8>
     9be:	34 9a       	sbi	0x06, 4	; 6
     9c0:	94 b1       	in	r25, 0x04	; 4
     9c2:	85 b1       	in	r24, 0x05	; 5
     9c4:	38 2f       	mov	r19, r24
     9c6:	20 e0       	ldi	r18, 0x00	; 0
     9c8:	f9 01       	movw	r30, r18
     9ca:	e9 0f       	add	r30, r25
     9cc:	f1 1d       	adc	r31, r1
     9ce:	4e 0f       	add	r20, r30
     9d0:	5f 1f       	adc	r21, r31
     9d2:	6f 5f       	subi	r22, 0xFF	; 255
     9d4:	68 30       	cpi	r22, 0x08	; 8
     9d6:	81 f7       	brne	.-32     	; 0x9b8 <ADC_read+0x6>
     9d8:	9a 01       	movw	r18, r20
     9da:	83 e0       	ldi	r24, 0x03	; 3
     9dc:	36 95       	lsr	r19
     9de:	27 95       	ror	r18
     9e0:	8a 95       	dec	r24
     9e2:	e1 f7       	brne	.-8      	; 0x9dc <ADC_read+0x2a>
     9e4:	f4 e0       	ldi	r31, 0x04	; 4
     9e6:	20 30       	cpi	r18, 0x00	; 0
     9e8:	3f 07       	cpc	r19, r31
     9ea:	10 f0       	brcs	.+4      	; 0x9f0 <ADC_read+0x3e>
     9ec:	2f ef       	ldi	r18, 0xFF	; 255
     9ee:	33 e0       	ldi	r19, 0x03	; 3
     9f0:	c9 01       	movw	r24, r18
     9f2:	08 95       	ret

000009f4 <readTemperature>:
     9f4:	0f 93       	push	r16
     9f6:	1f 93       	push	r17
     9f8:	80 64       	ori	r24, 0x40	; 64
     9fa:	87 b9       	out	0x07, r24	; 7
     9fc:	0e 94 d9 04 	call	0x9b2	; 0x9b2 <ADC_read>
     a00:	a0 e0       	ldi	r26, 0x00	; 0
     a02:	b0 e0       	ldi	r27, 0x00	; 0
     a04:	bc 01       	movw	r22, r24
     a06:	cd 01       	movw	r24, r26
     a08:	0e 94 98 15 	call	0x2b30	; 0x2b30 <__floatunsisf>
     a0c:	20 e0       	ldi	r18, 0x00	; 0
     a0e:	30 e0       	ldi	r19, 0x00	; 0
     a10:	40 ea       	ldi	r20, 0xA0	; 160
     a12:	50 e4       	ldi	r21, 0x40	; 64
     a14:	0e 94 fe 15 	call	0x2bfc	; 0x2bfc <__mulsf3>
     a18:	20 e0       	ldi	r18, 0x00	; 0
     a1a:	30 e0       	ldi	r19, 0x00	; 0
     a1c:	40 e8       	ldi	r20, 0x80	; 128
     a1e:	5a e3       	ldi	r21, 0x3A	; 58
     a20:	0e 94 fe 15 	call	0x2bfc	; 0x2bfc <__mulsf3>
     a24:	20 e0       	ldi	r18, 0x00	; 0
     a26:	30 e0       	ldi	r19, 0x00	; 0
     a28:	4a e7       	ldi	r20, 0x7A	; 122
     a2a:	54 e4       	ldi	r21, 0x44	; 68
     a2c:	0e 94 fe 15 	call	0x2bfc	; 0x2bfc <__mulsf3>
     a30:	0e 94 6c 15 	call	0x2ad8	; 0x2ad8 <__fixunssfsi>
     a34:	8b 01       	movw	r16, r22
     a36:	9c 01       	movw	r18, r24
     a38:	83 e4       	ldi	r24, 0x43	; 67
     a3a:	80 93 a1 00 	sts	0x00A1, r24
     a3e:	80 eb       	ldi	r24, 0xB0	; 176
     a40:	80 93 a0 00 	sts	0x00A0, r24
     a44:	c8 01       	movw	r24, r16
     a46:	6a e0       	ldi	r22, 0x0A	; 10
     a48:	70 e0       	ldi	r23, 0x00	; 0
     a4a:	0e 94 99 16 	call	0x2d32	; 0x2d32 <__udivmodhi4>
     a4e:	80 63       	ori	r24, 0x30	; 48
     a50:	80 93 9f 00 	sts	0x009F, r24
     a54:	8e e2       	ldi	r24, 0x2E	; 46
     a56:	80 93 9e 00 	sts	0x009E, r24
     a5a:	c8 01       	movw	r24, r16
     a5c:	6a e0       	ldi	r22, 0x0A	; 10
     a5e:	70 e0       	ldi	r23, 0x00	; 0
     a60:	0e 94 99 16 	call	0x2d32	; 0x2d32 <__udivmodhi4>
     a64:	9b 01       	movw	r18, r22
     a66:	cb 01       	movw	r24, r22
     a68:	6a e0       	ldi	r22, 0x0A	; 10
     a6a:	70 e0       	ldi	r23, 0x00	; 0
     a6c:	0e 94 99 16 	call	0x2d32	; 0x2d32 <__udivmodhi4>
     a70:	80 63       	ori	r24, 0x30	; 48
     a72:	80 93 9d 00 	sts	0x009D, r24
     a76:	c9 01       	movw	r24, r18
     a78:	6a e0       	ldi	r22, 0x0A	; 10
     a7a:	70 e0       	ldi	r23, 0x00	; 0
     a7c:	0e 94 99 16 	call	0x2d32	; 0x2d32 <__udivmodhi4>
     a80:	9b 01       	movw	r18, r22
     a82:	cb 01       	movw	r24, r22
     a84:	6a e0       	ldi	r22, 0x0A	; 10
     a86:	70 e0       	ldi	r23, 0x00	; 0
     a88:	0e 94 99 16 	call	0x2d32	; 0x2d32 <__udivmodhi4>
     a8c:	80 63       	ori	r24, 0x30	; 48
     a8e:	80 93 9c 00 	sts	0x009C, r24
     a92:	c9 01       	movw	r24, r18
     a94:	6a e0       	ldi	r22, 0x0A	; 10
     a96:	70 e0       	ldi	r23, 0x00	; 0
     a98:	0e 94 99 16 	call	0x2d32	; 0x2d32 <__udivmodhi4>
     a9c:	60 63       	ori	r22, 0x30	; 48
     a9e:	60 93 9b 00 	sts	0x009B, r22
     aa2:	1f 91       	pop	r17
     aa4:	0f 91       	pop	r16
     aa6:	08 95       	ret

00000aa8 <readVoltage>:
     aa8:	0f 93       	push	r16
     aaa:	1f 93       	push	r17
     aac:	80 64       	ori	r24, 0x40	; 64
     aae:	87 b9       	out	0x07, r24	; 7
     ab0:	0e 94 d9 04 	call	0x9b2	; 0x9b2 <ADC_read>
     ab4:	a0 e0       	ldi	r26, 0x00	; 0
     ab6:	b0 e0       	ldi	r27, 0x00	; 0
     ab8:	bc 01       	movw	r22, r24
     aba:	cd 01       	movw	r24, r26
     abc:	0e 94 98 15 	call	0x2b30	; 0x2b30 <__floatunsisf>
     ac0:	20 e0       	ldi	r18, 0x00	; 0
     ac2:	30 e0       	ldi	r19, 0x00	; 0
     ac4:	40 ea       	ldi	r20, 0xA0	; 160
     ac6:	50 e4       	ldi	r21, 0x40	; 64
     ac8:	0e 94 fe 15 	call	0x2bfc	; 0x2bfc <__mulsf3>
     acc:	20 e0       	ldi	r18, 0x00	; 0
     ace:	30 e0       	ldi	r19, 0x00	; 0
     ad0:	40 e8       	ldi	r20, 0x80	; 128
     ad2:	5a e3       	ldi	r21, 0x3A	; 58
     ad4:	0e 94 fe 15 	call	0x2bfc	; 0x2bfc <__mulsf3>
     ad8:	20 e0       	ldi	r18, 0x00	; 0
     ada:	30 e0       	ldi	r19, 0x00	; 0
     adc:	4a e7       	ldi	r20, 0x7A	; 122
     ade:	54 e4       	ldi	r21, 0x44	; 68
     ae0:	0e 94 fe 15 	call	0x2bfc	; 0x2bfc <__mulsf3>
     ae4:	0e 94 6c 15 	call	0x2ad8	; 0x2ad8 <__fixunssfsi>
     ae8:	8b 01       	movw	r16, r22
     aea:	9c 01       	movw	r18, r24
     aec:	86 e5       	ldi	r24, 0x56	; 86
     aee:	80 93 ae 00 	sts	0x00AE, r24
     af2:	80 e2       	ldi	r24, 0x20	; 32
     af4:	80 93 ad 00 	sts	0x00AD, r24
     af8:	c8 01       	movw	r24, r16
     afa:	6a e0       	ldi	r22, 0x0A	; 10
     afc:	70 e0       	ldi	r23, 0x00	; 0
     afe:	0e 94 99 16 	call	0x2d32	; 0x2d32 <__udivmodhi4>
     b02:	80 63       	ori	r24, 0x30	; 48
     b04:	80 93 ac 00 	sts	0x00AC, r24
     b08:	c8 01       	movw	r24, r16
     b0a:	6a e0       	ldi	r22, 0x0A	; 10
     b0c:	70 e0       	ldi	r23, 0x00	; 0
     b0e:	0e 94 99 16 	call	0x2d32	; 0x2d32 <__udivmodhi4>
     b12:	9b 01       	movw	r18, r22
     b14:	cb 01       	movw	r24, r22
     b16:	6a e0       	ldi	r22, 0x0A	; 10
     b18:	70 e0       	ldi	r23, 0x00	; 0
     b1a:	0e 94 99 16 	call	0x2d32	; 0x2d32 <__udivmodhi4>
     b1e:	80 63       	ori	r24, 0x30	; 48
     b20:	80 93 ab 00 	sts	0x00AB, r24
     b24:	c9 01       	movw	r24, r18
     b26:	6a e0       	ldi	r22, 0x0A	; 10
     b28:	70 e0       	ldi	r23, 0x00	; 0
     b2a:	0e 94 99 16 	call	0x2d32	; 0x2d32 <__udivmodhi4>
     b2e:	9b 01       	movw	r18, r22
     b30:	cb 01       	movw	r24, r22
     b32:	6a e0       	ldi	r22, 0x0A	; 10
     b34:	70 e0       	ldi	r23, 0x00	; 0
     b36:	0e 94 99 16 	call	0x2d32	; 0x2d32 <__udivmodhi4>
     b3a:	80 63       	ori	r24, 0x30	; 48
     b3c:	80 93 aa 00 	sts	0x00AA, r24
     b40:	8e e2       	ldi	r24, 0x2E	; 46
     b42:	80 93 a9 00 	sts	0x00A9, r24
     b46:	c9 01       	movw	r24, r18
     b48:	6a e0       	ldi	r22, 0x0A	; 10
     b4a:	70 e0       	ldi	r23, 0x00	; 0
     b4c:	0e 94 99 16 	call	0x2d32	; 0x2d32 <__udivmodhi4>
     b50:	60 63       	ori	r22, 0x30	; 48
     b52:	60 93 a8 00 	sts	0x00A8, r22
     b56:	1f 91       	pop	r17
     b58:	0f 91       	pop	r16
     b5a:	08 95       	ret

00000b5c <getFirstSector>:
     b5c:	ef 92       	push	r14
     b5e:	ff 92       	push	r15
     b60:	0f 93       	push	r16
     b62:	1f 93       	push	r17
     b64:	20 91 b3 02 	lds	r18, 0x02B3
     b68:	30 91 b4 02 	lds	r19, 0x02B4
     b6c:	e0 90 8d 00 	lds	r14, 0x008D
     b70:	f0 90 8e 00 	lds	r15, 0x008E
     b74:	00 91 8f 00 	lds	r16, 0x008F
     b78:	10 91 90 00 	lds	r17, 0x0090
     b7c:	62 50       	subi	r22, 0x02	; 2
     b7e:	70 40       	sbci	r23, 0x00	; 0
     b80:	80 40       	sbci	r24, 0x00	; 0
     b82:	90 40       	sbci	r25, 0x00	; 0
     b84:	40 e0       	ldi	r20, 0x00	; 0
     b86:	50 e0       	ldi	r21, 0x00	; 0
     b88:	0e 94 89 16 	call	0x2d12	; 0x2d12 <__mulsi3>
     b8c:	9b 01       	movw	r18, r22
     b8e:	ac 01       	movw	r20, r24
     b90:	2e 0d       	add	r18, r14
     b92:	3f 1d       	adc	r19, r15
     b94:	40 1f       	adc	r20, r16
     b96:	51 1f       	adc	r21, r17
     b98:	b9 01       	movw	r22, r18
     b9a:	ca 01       	movw	r24, r20
     b9c:	1f 91       	pop	r17
     b9e:	0f 91       	pop	r16
     ba0:	ff 90       	pop	r15
     ba2:	ef 90       	pop	r14
     ba4:	08 95       	ret

00000ba6 <displayMemory>:
     ba6:	8f 92       	push	r8
     ba8:	9f 92       	push	r9
     baa:	af 92       	push	r10
     bac:	bf 92       	push	r11
     bae:	cf 92       	push	r12
     bb0:	df 92       	push	r13
     bb2:	ef 92       	push	r14
     bb4:	ff 92       	push	r15
     bb6:	0f 93       	push	r16
     bb8:	df 93       	push	r29
     bba:	cf 93       	push	r28
     bbc:	cd b7       	in	r28, 0x3d	; 61
     bbe:	de b7       	in	r29, 0x3e	; 62
     bc0:	64 97       	sbiw	r28, 0x14	; 20
     bc2:	0f b6       	in	r0, 0x3f	; 63
     bc4:	f8 94       	cli
     bc6:	de bf       	out	0x3e, r29	; 62
     bc8:	0f be       	out	0x3f, r0	; 63
     bca:	cd bf       	out	0x3d, r28	; 61
     bcc:	98 2e       	mov	r9, r24
     bce:	6a 01       	movw	r12, r20
     bd0:	7b 01       	movw	r14, r22
     bd2:	de 01       	movw	r26, r28
     bd4:	11 96       	adiw	r26, 0x01	; 1
     bd6:	e0 e6       	ldi	r30, 0x60	; 96
     bd8:	f0 e0       	ldi	r31, 0x00	; 0
     bda:	84 e1       	ldi	r24, 0x14	; 20
     bdc:	01 90       	ld	r0, Z+
     bde:	0d 92       	st	X+, r0
     be0:	81 50       	subi	r24, 0x01	; 1
     be2:	e1 f7       	brne	.-8      	; 0xbdc <displayMemory+0x36>
     be4:	0c e0       	ldi	r16, 0x0C	; 12
     be6:	8c e2       	ldi	r24, 0x2C	; 44
     be8:	88 2e       	mov	r8, r24
     bea:	05 30       	cpi	r16, 0x05	; 5
     bec:	11 f0       	breq	.+4      	; 0xbf2 <displayMemory+0x4c>
     bee:	09 30       	cpi	r16, 0x09	; 9
     bf0:	29 f4       	brne	.+10     	; 0xbfc <displayMemory+0x56>
     bf2:	fe 01       	movw	r30, r28
     bf4:	e0 0f       	add	r30, r16
     bf6:	f1 1d       	adc	r31, r1
     bf8:	80 82       	st	Z, r8
     bfa:	01 50       	subi	r16, 0x01	; 1
     bfc:	5e 01       	movw	r10, r28
     bfe:	a0 0e       	add	r10, r16
     c00:	b1 1c       	adc	r11, r1
     c02:	c7 01       	movw	r24, r14
     c04:	b6 01       	movw	r22, r12
     c06:	2a e0       	ldi	r18, 0x0A	; 10
     c08:	30 e0       	ldi	r19, 0x00	; 0
     c0a:	40 e0       	ldi	r20, 0x00	; 0
     c0c:	50 e0       	ldi	r21, 0x00	; 0
     c0e:	0e 94 ad 16 	call	0x2d5a	; 0x2d5a <__udivmodsi4>
     c12:	60 63       	ori	r22, 0x30	; 48
     c14:	f5 01       	movw	r30, r10
     c16:	60 83       	st	Z, r22
     c18:	c7 01       	movw	r24, r14
     c1a:	b6 01       	movw	r22, r12
     c1c:	2a e0       	ldi	r18, 0x0A	; 10
     c1e:	30 e0       	ldi	r19, 0x00	; 0
     c20:	40 e0       	ldi	r20, 0x00	; 0
     c22:	50 e0       	ldi	r21, 0x00	; 0
     c24:	0e 94 ad 16 	call	0x2d5a	; 0x2d5a <__udivmodsi4>
     c28:	c9 01       	movw	r24, r18
     c2a:	da 01       	movw	r26, r20
     c2c:	6c 01       	movw	r12, r24
     c2e:	7d 01       	movw	r14, r26
     c30:	c1 14       	cp	r12, r1
     c32:	d1 04       	cpc	r13, r1
     c34:	e1 04       	cpc	r14, r1
     c36:	f1 04       	cpc	r15, r1
     c38:	11 f0       	breq	.+4      	; 0xc3e <displayMemory+0x98>
     c3a:	01 50       	subi	r16, 0x01	; 1
     c3c:	b1 f6       	brne	.-84     	; 0xbea <displayMemory+0x44>
     c3e:	f1 e0       	ldi	r31, 0x01	; 1
     c40:	9f 16       	cp	r9, r31
     c42:	11 f4       	brne	.+4      	; 0xc48 <displayMemory+0xa2>
     c44:	8b e4       	ldi	r24, 0x4B	; 75
     c46:	8e 87       	std	Y+14, r24	; 0x0e
     c48:	ce 01       	movw	r24, r28
     c4a:	01 96       	adiw	r24, 0x01	; 1
     c4c:	0e 94 1e 15 	call	0x2a3c	; 0x2a3c <transmitString>
     c50:	64 96       	adiw	r28, 0x14	; 20
     c52:	0f b6       	in	r0, 0x3f	; 63
     c54:	f8 94       	cli
     c56:	de bf       	out	0x3e, r29	; 62
     c58:	0f be       	out	0x3f, r0	; 63
     c5a:	cd bf       	out	0x3d, r28	; 61
     c5c:	cf 91       	pop	r28
     c5e:	df 91       	pop	r29
     c60:	0f 91       	pop	r16
     c62:	ff 90       	pop	r15
     c64:	ef 90       	pop	r14
     c66:	df 90       	pop	r13
     c68:	cf 90       	pop	r12
     c6a:	bf 90       	pop	r11
     c6c:	af 90       	pop	r10
     c6e:	9f 90       	pop	r9
     c70:	8f 90       	pop	r8
     c72:	08 95       	ret

00000c74 <searchNextFreeCluster>:
     c74:	6f 92       	push	r6
     c76:	7f 92       	push	r7
     c78:	8f 92       	push	r8
     c7a:	9f 92       	push	r9
     c7c:	af 92       	push	r10
     c7e:	bf 92       	push	r11
     c80:	cf 92       	push	r12
     c82:	df 92       	push	r13
     c84:	ef 92       	push	r14
     c86:	ff 92       	push	r15
     c88:	0f 93       	push	r16
     c8a:	1f 93       	push	r17
     c8c:	60 78       	andi	r22, 0x80	; 128
     c8e:	3b 01       	movw	r6, r22
     c90:	4c 01       	movw	r8, r24
     c92:	22 e0       	ldi	r18, 0x02	; 2
     c94:	66 0c       	add	r6, r6
     c96:	77 1c       	adc	r7, r7
     c98:	88 1c       	adc	r8, r8
     c9a:	99 1c       	adc	r9, r9
     c9c:	2a 95       	dec	r18
     c9e:	d1 f7       	brne	.-12     	; 0xc94 <searchNextFreeCluster+0x20>
     ca0:	5b 01       	movw	r10, r22
     ca2:	6c 01       	movw	r12, r24
     ca4:	50 c0       	rjmp	.+160    	; 0xd46 <searchNextFreeCluster+0xd2>
     ca6:	e0 90 be 02 	lds	r14, 0x02BE
     caa:	f0 90 bf 02 	lds	r15, 0x02BF
     cae:	20 91 95 00 	lds	r18, 0x0095
     cb2:	30 91 96 00 	lds	r19, 0x0096
     cb6:	00 e0       	ldi	r16, 0x00	; 0
     cb8:	10 e0       	ldi	r17, 0x00	; 0
     cba:	80 91 b5 02 	lds	r24, 0x02B5
     cbe:	90 91 b6 02 	lds	r25, 0x02B6
     cc2:	a0 91 b7 02 	lds	r26, 0x02B7
     cc6:	b0 91 b8 02 	lds	r27, 0x02B8
     cca:	e8 0e       	add	r14, r24
     ccc:	f9 1e       	adc	r15, r25
     cce:	0a 1f       	adc	r16, r26
     cd0:	1b 1f       	adc	r17, r27
     cd2:	40 e0       	ldi	r20, 0x00	; 0
     cd4:	50 e0       	ldi	r21, 0x00	; 0
     cd6:	c4 01       	movw	r24, r8
     cd8:	b3 01       	movw	r22, r6
     cda:	0e 94 ad 16 	call	0x2d5a	; 0x2d5a <__udivmodsi4>
     cde:	e2 0e       	add	r14, r18
     ce0:	f3 1e       	adc	r15, r19
     ce2:	04 1f       	adc	r16, r20
     ce4:	15 1f       	adc	r17, r21
     ce6:	c8 01       	movw	r24, r16
     ce8:	b7 01       	movw	r22, r14
     cea:	0e 94 3b 14 	call	0x2876	; 0x2876 <SD_readSingleBlock>
     cee:	60 e0       	ldi	r22, 0x00	; 0
     cf0:	e6 2f       	mov	r30, r22
     cf2:	f0 e0       	ldi	r31, 0x00	; 0
     cf4:	ee 0f       	add	r30, r30
     cf6:	ff 1f       	adc	r31, r31
     cf8:	ee 0f       	add	r30, r30
     cfa:	ff 1f       	adc	r31, r31
     cfc:	ed 54       	subi	r30, 0x4D	; 77
     cfe:	ff 4f       	sbci	r31, 0xFF	; 255
     d00:	80 81       	ld	r24, Z
     d02:	91 81       	ldd	r25, Z+1	; 0x01
     d04:	a2 81       	ldd	r26, Z+2	; 0x02
     d06:	b3 81       	ldd	r27, Z+3	; 0x03
     d08:	bf 70       	andi	r27, 0x0F	; 15
     d0a:	00 97       	sbiw	r24, 0x00	; 0
     d0c:	a1 05       	cpc	r26, r1
     d0e:	b1 05       	cpc	r27, r1
     d10:	39 f4       	brne	.+14     	; 0xd20 <searchNextFreeCluster+0xac>
     d12:	a6 01       	movw	r20, r12
     d14:	95 01       	movw	r18, r10
     d16:	26 0f       	add	r18, r22
     d18:	31 1d       	adc	r19, r1
     d1a:	41 1d       	adc	r20, r1
     d1c:	51 1d       	adc	r21, r1
     d1e:	25 c0       	rjmp	.+74     	; 0xd6a <searchNextFreeCluster+0xf6>
     d20:	6f 5f       	subi	r22, 0xFF	; 255
     d22:	60 38       	cpi	r22, 0x80	; 128
     d24:	29 f7       	brne	.-54     	; 0xcf0 <searchNextFreeCluster+0x7c>
     d26:	80 e8       	ldi	r24, 0x80	; 128
     d28:	90 e0       	ldi	r25, 0x00	; 0
     d2a:	a0 e0       	ldi	r26, 0x00	; 0
     d2c:	b0 e0       	ldi	r27, 0x00	; 0
     d2e:	a8 0e       	add	r10, r24
     d30:	b9 1e       	adc	r11, r25
     d32:	ca 1e       	adc	r12, r26
     d34:	db 1e       	adc	r13, r27
     d36:	80 e0       	ldi	r24, 0x00	; 0
     d38:	92 e0       	ldi	r25, 0x02	; 2
     d3a:	a0 e0       	ldi	r26, 0x00	; 0
     d3c:	b0 e0       	ldi	r27, 0x00	; 0
     d3e:	68 0e       	add	r6, r24
     d40:	79 1e       	adc	r7, r25
     d42:	8a 1e       	adc	r8, r26
     d44:	9b 1e       	adc	r9, r27
     d46:	80 91 97 00 	lds	r24, 0x0097
     d4a:	90 91 98 00 	lds	r25, 0x0098
     d4e:	a0 91 99 00 	lds	r26, 0x0099
     d52:	b0 91 9a 00 	lds	r27, 0x009A
     d56:	a8 16       	cp	r10, r24
     d58:	b9 06       	cpc	r11, r25
     d5a:	ca 06       	cpc	r12, r26
     d5c:	db 06       	cpc	r13, r27
     d5e:	08 f4       	brcc	.+2      	; 0xd62 <searchNextFreeCluster+0xee>
     d60:	a2 cf       	rjmp	.-188    	; 0xca6 <searchNextFreeCluster+0x32>
     d62:	20 e0       	ldi	r18, 0x00	; 0
     d64:	30 e0       	ldi	r19, 0x00	; 0
     d66:	40 e0       	ldi	r20, 0x00	; 0
     d68:	50 e0       	ldi	r21, 0x00	; 0
     d6a:	b9 01       	movw	r22, r18
     d6c:	ca 01       	movw	r24, r20
     d6e:	1f 91       	pop	r17
     d70:	0f 91       	pop	r16
     d72:	ff 90       	pop	r15
     d74:	ef 90       	pop	r14
     d76:	df 90       	pop	r13
     d78:	cf 90       	pop	r12
     d7a:	bf 90       	pop	r11
     d7c:	af 90       	pop	r10
     d7e:	9f 90       	pop	r9
     d80:	8f 90       	pop	r8
     d82:	7f 90       	pop	r7
     d84:	6f 90       	pop	r6
     d86:	08 95       	ret

00000d88 <convertFileName>:
     d88:	0f 93       	push	r16
     d8a:	1f 93       	push	r17
     d8c:	df 93       	push	r29
     d8e:	cf 93       	push	r28
     d90:	cd b7       	in	r28, 0x3d	; 61
     d92:	de b7       	in	r29, 0x3e	; 62
     d94:	2b 97       	sbiw	r28, 0x0b	; 11
     d96:	0f b6       	in	r0, 0x3f	; 63
     d98:	f8 94       	cli
     d9a:	de bf       	out	0x3e, r29	; 62
     d9c:	0f be       	out	0x3f, r0	; 63
     d9e:	cd bf       	out	0x3d, r28	; 61
     da0:	8c 01       	movw	r16, r24
     da2:	58 2f       	mov	r21, r24
     da4:	a1 2f       	mov	r26, r17
     da6:	fc 01       	movw	r30, r24
     da8:	40 e0       	ldi	r20, 0x00	; 0
     daa:	80 81       	ld	r24, Z
     dac:	8e 32       	cpi	r24, 0x2E	; 46
     dae:	19 f4       	brne	.+6      	; 0xdb6 <convertFileName+0x2e>
     db0:	49 30       	cpi	r20, 0x09	; 9
     db2:	30 f0       	brcs	.+12     	; 0xdc0 <convertFileName+0x38>
     db4:	0e c0       	rjmp	.+28     	; 0xdd2 <convertFileName+0x4a>
     db6:	4f 5f       	subi	r20, 0xFF	; 255
     db8:	31 96       	adiw	r30, 0x01	; 1
     dba:	4c 30       	cpi	r20, 0x0C	; 12
     dbc:	b1 f7       	brne	.-20     	; 0xdaa <convertFileName+0x22>
     dbe:	09 c0       	rjmp	.+18     	; 0xdd2 <convertFileName+0x4a>
     dc0:	be 01       	movw	r22, r28
     dc2:	6f 5f       	subi	r22, 0xFF	; 255
     dc4:	7f 4f       	sbci	r23, 0xFF	; 255
     dc6:	85 2f       	mov	r24, r21
     dc8:	9a 2f       	mov	r25, r26
     dca:	9c 01       	movw	r18, r24
     dcc:	f9 01       	movw	r30, r18
     dce:	db 01       	movw	r26, r22
     dd0:	08 c0       	rjmp	.+16     	; 0xde2 <convertFileName+0x5a>
     dd2:	84 e5       	ldi	r24, 0x54	; 84
     dd4:	93 e0       	ldi	r25, 0x03	; 3
     dd6:	0e 94 14 15 	call	0x2a28	; 0x2a28 <transmitString_F>
     dda:	81 e0       	ldi	r24, 0x01	; 1
     ddc:	52 c0       	rjmp	.+164    	; 0xe82 <convertFileName+0xfa>
     dde:	81 91       	ld	r24, Z+
     de0:	8d 93       	st	X+, r24
     de2:	8e 2f       	mov	r24, r30
     de4:	85 1b       	sub	r24, r21
     de6:	84 17       	cp	r24, r20
     de8:	d0 f3       	brcs	.-12     	; 0xdde <convertFileName+0x56>
     dea:	84 2f       	mov	r24, r20
     dec:	9e 01       	movw	r18, r28
     dee:	2f 5f       	subi	r18, 0xFF	; 255
     df0:	3f 4f       	sbci	r19, 0xFF	; 255
     df2:	90 e2       	ldi	r25, 0x20	; 32
     df4:	05 c0       	rjmp	.+10     	; 0xe00 <convertFileName+0x78>
     df6:	f9 01       	movw	r30, r18
     df8:	e8 0f       	add	r30, r24
     dfa:	f1 1d       	adc	r31, r1
     dfc:	90 83       	st	Z, r25
     dfe:	8f 5f       	subi	r24, 0xFF	; 255
     e00:	88 30       	cpi	r24, 0x08	; 8
     e02:	c9 f7       	brne	.-14     	; 0xdf6 <convertFileName+0x6e>
     e04:	24 2f       	mov	r18, r20
     e06:	2f 5f       	subi	r18, 0xFF	; 255
     e08:	ae 01       	movw	r20, r28
     e0a:	4f 5f       	subi	r20, 0xFF	; 255
     e0c:	5f 4f       	sbci	r21, 0xFF	; 255
     e0e:	30 e2       	ldi	r19, 0x20	; 32
     e10:	f8 01       	movw	r30, r16
     e12:	e2 0f       	add	r30, r18
     e14:	f1 1d       	adc	r31, r1
     e16:	90 81       	ld	r25, Z
     e18:	99 23       	and	r25, r25
     e1a:	59 f0       	breq	.+22     	; 0xe32 <convertFileName+0xaa>
     e1c:	fa 01       	movw	r30, r20
     e1e:	e8 0f       	add	r30, r24
     e20:	f1 1d       	adc	r31, r1
     e22:	90 83       	st	Z, r25
     e24:	2f 5f       	subi	r18, 0xFF	; 255
     e26:	07 c0       	rjmp	.+14     	; 0xe36 <convertFileName+0xae>
     e28:	fa 01       	movw	r30, r20
     e2a:	e8 0f       	add	r30, r24
     e2c:	f1 1d       	adc	r31, r1
     e2e:	30 83       	st	Z, r19
     e30:	8f 5f       	subi	r24, 0xFF	; 255
     e32:	8b 30       	cpi	r24, 0x0B	; 11
     e34:	c8 f3       	brcs	.-14     	; 0xe28 <convertFileName+0xa0>
     e36:	8f 5f       	subi	r24, 0xFF	; 255
     e38:	8b 30       	cpi	r24, 0x0B	; 11
     e3a:	50 f3       	brcs	.-44     	; 0xe10 <convertFileName+0x88>
     e3c:	9e 01       	movw	r18, r28
     e3e:	24 5f       	subi	r18, 0xF4	; 244
     e40:	3f 4f       	sbci	r19, 0xFF	; 255
     e42:	fb 01       	movw	r30, r22
     e44:	90 81       	ld	r25, Z
     e46:	89 2f       	mov	r24, r25
     e48:	81 56       	subi	r24, 0x61	; 97
     e4a:	8a 31       	cpi	r24, 0x1A	; 26
     e4c:	10 f4       	brcc	.+4      	; 0xe52 <convertFileName+0xca>
     e4e:	90 52       	subi	r25, 0x20	; 32
     e50:	90 83       	st	Z, r25
     e52:	6f 5f       	subi	r22, 0xFF	; 255
     e54:	7f 4f       	sbci	r23, 0xFF	; 255
     e56:	62 17       	cp	r22, r18
     e58:	73 07       	cpc	r23, r19
     e5a:	99 f7       	brne	.-26     	; 0xe42 <convertFileName+0xba>
     e5c:	20 e0       	ldi	r18, 0x00	; 0
     e5e:	30 e0       	ldi	r19, 0x00	; 0
     e60:	ae 01       	movw	r20, r28
     e62:	4f 5f       	subi	r20, 0xFF	; 255
     e64:	5f 4f       	sbci	r21, 0xFF	; 255
     e66:	f8 01       	movw	r30, r16
     e68:	e2 0f       	add	r30, r18
     e6a:	f3 1f       	adc	r31, r19
     e6c:	da 01       	movw	r26, r20
     e6e:	a2 0f       	add	r26, r18
     e70:	b3 1f       	adc	r27, r19
     e72:	8c 91       	ld	r24, X
     e74:	80 83       	st	Z, r24
     e76:	2f 5f       	subi	r18, 0xFF	; 255
     e78:	3f 4f       	sbci	r19, 0xFF	; 255
     e7a:	2b 30       	cpi	r18, 0x0B	; 11
     e7c:	31 05       	cpc	r19, r1
     e7e:	99 f7       	brne	.-26     	; 0xe66 <convertFileName+0xde>
     e80:	80 e0       	ldi	r24, 0x00	; 0
     e82:	2b 96       	adiw	r28, 0x0b	; 11
     e84:	0f b6       	in	r0, 0x3f	; 63
     e86:	f8 94       	cli
     e88:	de bf       	out	0x3e, r29	; 62
     e8a:	0f be       	out	0x3f, r0	; 63
     e8c:	cd bf       	out	0x3d, r28	; 61
     e8e:	cf 91       	pop	r28
     e90:	df 91       	pop	r29
     e92:	1f 91       	pop	r17
     e94:	0f 91       	pop	r16
     e96:	08 95       	ret

00000e98 <getSetFreeCluster>:
     e98:	cf 92       	push	r12
     e9a:	df 92       	push	r13
     e9c:	ef 92       	push	r14
     e9e:	ff 92       	push	r15
     ea0:	0f 93       	push	r16
     ea2:	1f 93       	push	r17
     ea4:	d8 2e       	mov	r13, r24
     ea6:	c6 2e       	mov	r12, r22
     ea8:	79 01       	movw	r14, r18
     eaa:	8a 01       	movw	r16, r20
     eac:	60 91 b5 02 	lds	r22, 0x02B5
     eb0:	70 91 b6 02 	lds	r23, 0x02B6
     eb4:	80 91 b7 02 	lds	r24, 0x02B7
     eb8:	90 91 b8 02 	lds	r25, 0x02B8
     ebc:	6f 5f       	subi	r22, 0xFF	; 255
     ebe:	7f 4f       	sbci	r23, 0xFF	; 255
     ec0:	8f 4f       	sbci	r24, 0xFF	; 255
     ec2:	9f 4f       	sbci	r25, 0xFF	; 255
     ec4:	0e 94 3b 14 	call	0x2876	; 0x2876 <SD_readSingleBlock>
     ec8:	80 91 b3 00 	lds	r24, 0x00B3
     ecc:	90 91 b4 00 	lds	r25, 0x00B4
     ed0:	a0 91 b5 00 	lds	r26, 0x00B5
     ed4:	b0 91 b6 00 	lds	r27, 0x00B6
     ed8:	82 55       	subi	r24, 0x52	; 82
     eda:	92 45       	sbci	r25, 0x52	; 82
     edc:	a1 46       	sbci	r26, 0x61	; 97
     ede:	b1 44       	sbci	r27, 0x41	; 65
     ee0:	09 f0       	breq	.+2      	; 0xee4 <getSetFreeCluster+0x4c>
     ee2:	54 c0       	rjmp	.+168    	; 0xf8c <getSetFreeCluster+0xf4>
     ee4:	80 91 97 02 	lds	r24, 0x0297
     ee8:	90 91 98 02 	lds	r25, 0x0298
     eec:	a0 91 99 02 	lds	r26, 0x0299
     ef0:	b0 91 9a 02 	lds	r27, 0x029A
     ef4:	82 57       	subi	r24, 0x72	; 114
     ef6:	92 47       	sbci	r25, 0x72	; 114
     ef8:	a1 44       	sbci	r26, 0x41	; 65
     efa:	b1 46       	sbci	r27, 0x61	; 97
     efc:	09 f0       	breq	.+2      	; 0xf00 <getSetFreeCluster+0x68>
     efe:	46 c0       	rjmp	.+140    	; 0xf8c <getSetFreeCluster+0xf4>
     f00:	80 91 af 02 	lds	r24, 0x02AF
     f04:	90 91 b0 02 	lds	r25, 0x02B0
     f08:	a0 91 b1 02 	lds	r26, 0x02B1
     f0c:	b0 91 b2 02 	lds	r27, 0x02B2
     f10:	80 50       	subi	r24, 0x00	; 0
     f12:	90 40       	sbci	r25, 0x00	; 0
     f14:	a5 45       	sbci	r26, 0x55	; 85
     f16:	ba 4a       	sbci	r27, 0xAA	; 170
     f18:	c9 f5       	brne	.+114    	; 0xf8c <getSetFreeCluster+0xf4>
     f1a:	cc 20       	and	r12, r12
     f1c:	a9 f4       	brne	.+42     	; 0xf48 <getSetFreeCluster+0xb0>
     f1e:	81 e0       	ldi	r24, 0x01	; 1
     f20:	d8 16       	cp	r13, r24
     f22:	49 f4       	brne	.+18     	; 0xf36 <getSetFreeCluster+0x9e>
     f24:	20 91 9b 02 	lds	r18, 0x029B
     f28:	30 91 9c 02 	lds	r19, 0x029C
     f2c:	40 91 9d 02 	lds	r20, 0x029D
     f30:	50 91 9e 02 	lds	r21, 0x029E
     f34:	2f c0       	rjmp	.+94     	; 0xf94 <getSetFreeCluster+0xfc>
     f36:	20 91 9f 02 	lds	r18, 0x029F
     f3a:	30 91 a0 02 	lds	r19, 0x02A0
     f3e:	40 91 a1 02 	lds	r20, 0x02A1
     f42:	50 91 a2 02 	lds	r21, 0x02A2
     f46:	26 c0       	rjmp	.+76     	; 0xf94 <getSetFreeCluster+0xfc>
     f48:	21 e0       	ldi	r18, 0x01	; 1
     f4a:	d2 16       	cp	r13, r18
     f4c:	49 f4       	brne	.+18     	; 0xf60 <getSetFreeCluster+0xc8>
     f4e:	e0 92 9b 02 	sts	0x029B, r14
     f52:	f0 92 9c 02 	sts	0x029C, r15
     f56:	00 93 9d 02 	sts	0x029D, r16
     f5a:	10 93 9e 02 	sts	0x029E, r17
     f5e:	08 c0       	rjmp	.+16     	; 0xf70 <getSetFreeCluster+0xd8>
     f60:	e0 92 9f 02 	sts	0x029F, r14
     f64:	f0 92 a0 02 	sts	0x02A0, r15
     f68:	00 93 a1 02 	sts	0x02A1, r16
     f6c:	10 93 a2 02 	sts	0x02A2, r17
     f70:	60 91 b5 02 	lds	r22, 0x02B5
     f74:	70 91 b6 02 	lds	r23, 0x02B6
     f78:	80 91 b7 02 	lds	r24, 0x02B7
     f7c:	90 91 b8 02 	lds	r25, 0x02B8
     f80:	6f 5f       	subi	r22, 0xFF	; 255
     f82:	7f 4f       	sbci	r23, 0xFF	; 255
     f84:	8f 4f       	sbci	r24, 0xFF	; 255
     f86:	9f 4f       	sbci	r25, 0xFF	; 255
     f88:	0e 94 ed 13 	call	0x27da	; 0x27da <SD_writeSingleBlock>
     f8c:	2f ef       	ldi	r18, 0xFF	; 255
     f8e:	3f ef       	ldi	r19, 0xFF	; 255
     f90:	4f ef       	ldi	r20, 0xFF	; 255
     f92:	5f ef       	ldi	r21, 0xFF	; 255
     f94:	b9 01       	movw	r22, r18
     f96:	ca 01       	movw	r24, r20
     f98:	1f 91       	pop	r17
     f9a:	0f 91       	pop	r16
     f9c:	ff 90       	pop	r15
     f9e:	ef 90       	pop	r14
     fa0:	df 90       	pop	r13
     fa2:	cf 90       	pop	r12
     fa4:	08 95       	ret

00000fa6 <freeMemoryUpdate>:
     fa6:	df 92       	push	r13
     fa8:	ef 92       	push	r14
     faa:	ff 92       	push	r15
     fac:	0f 93       	push	r16
     fae:	1f 93       	push	r17
     fb0:	d8 2e       	mov	r13, r24
     fb2:	db 01       	movw	r26, r22
     fb4:	ca 01       	movw	r24, r20
     fb6:	e9 e0       	ldi	r30, 0x09	; 9
     fb8:	b6 95       	lsr	r27
     fba:	a7 95       	ror	r26
     fbc:	97 95       	ror	r25
     fbe:	87 95       	ror	r24
     fc0:	ea 95       	dec	r30
     fc2:	d1 f7       	brne	.-12     	; 0xfb8 <freeMemoryUpdate+0x12>
     fc4:	51 70       	andi	r21, 0x01	; 1
     fc6:	60 70       	andi	r22, 0x00	; 0
     fc8:	70 70       	andi	r23, 0x00	; 0
     fca:	41 15       	cp	r20, r1
     fcc:	51 05       	cpc	r21, r1
     fce:	61 05       	cpc	r22, r1
     fd0:	71 05       	cpc	r23, r1
     fd2:	19 f4       	brne	.+6      	; 0xfda <freeMemoryUpdate+0x34>
     fd4:	ac 01       	movw	r20, r24
     fd6:	bd 01       	movw	r22, r26
     fd8:	06 c0       	rjmp	.+12     	; 0xfe6 <freeMemoryUpdate+0x40>
     fda:	ac 01       	movw	r20, r24
     fdc:	bd 01       	movw	r22, r26
     fde:	4f 5f       	subi	r20, 0xFF	; 255
     fe0:	5f 4f       	sbci	r21, 0xFF	; 255
     fe2:	6f 4f       	sbci	r22, 0xFF	; 255
     fe4:	7f 4f       	sbci	r23, 0xFF	; 255
     fe6:	db 01       	movw	r26, r22
     fe8:	ca 01       	movw	r24, r20
     fea:	33 e0       	ldi	r19, 0x03	; 3
     fec:	b6 95       	lsr	r27
     fee:	a7 95       	ror	r26
     ff0:	97 95       	ror	r25
     ff2:	87 95       	ror	r24
     ff4:	3a 95       	dec	r19
     ff6:	d1 f7       	brne	.-12     	; 0xfec <freeMemoryUpdate+0x46>
     ff8:	47 70       	andi	r20, 0x07	; 7
     ffa:	50 70       	andi	r21, 0x00	; 0
     ffc:	60 70       	andi	r22, 0x00	; 0
     ffe:	70 70       	andi	r23, 0x00	; 0
    1000:	41 15       	cp	r20, r1
    1002:	51 05       	cpc	r21, r1
    1004:	61 05       	cpc	r22, r1
    1006:	71 05       	cpc	r23, r1
    1008:	19 f4       	brne	.+6      	; 0x1010 <freeMemoryUpdate+0x6a>
    100a:	7c 01       	movw	r14, r24
    100c:	8d 01       	movw	r16, r26
    100e:	07 c0       	rjmp	.+14     	; 0x101e <freeMemoryUpdate+0x78>
    1010:	7c 01       	movw	r14, r24
    1012:	8d 01       	movw	r16, r26
    1014:	08 94       	sec
    1016:	e1 1c       	adc	r14, r1
    1018:	f1 1c       	adc	r15, r1
    101a:	01 1d       	adc	r16, r1
    101c:	11 1d       	adc	r17, r1
    101e:	80 91 3e 03 	lds	r24, 0x033E
    1022:	88 23       	and	r24, r24
    1024:	d9 f0       	breq	.+54     	; 0x105c <freeMemoryUpdate+0xb6>
    1026:	81 e0       	ldi	r24, 0x01	; 1
    1028:	60 e0       	ldi	r22, 0x00	; 0
    102a:	20 e0       	ldi	r18, 0x00	; 0
    102c:	30 e0       	ldi	r19, 0x00	; 0
    102e:	40 e0       	ldi	r20, 0x00	; 0
    1030:	50 e0       	ldi	r21, 0x00	; 0
    1032:	0e 94 4c 07 	call	0xe98	; 0xe98 <getSetFreeCluster>
    1036:	dd 20       	and	r13, r13
    1038:	39 f4       	brne	.+14     	; 0x1048 <freeMemoryUpdate+0xa2>
    103a:	9b 01       	movw	r18, r22
    103c:	ac 01       	movw	r20, r24
    103e:	2e 0d       	add	r18, r14
    1040:	3f 1d       	adc	r19, r15
    1042:	40 1f       	adc	r20, r16
    1044:	51 1f       	adc	r21, r17
    1046:	06 c0       	rjmp	.+12     	; 0x1054 <freeMemoryUpdate+0xae>
    1048:	9b 01       	movw	r18, r22
    104a:	ac 01       	movw	r20, r24
    104c:	2e 19       	sub	r18, r14
    104e:	3f 09       	sbc	r19, r15
    1050:	40 0b       	sbc	r20, r16
    1052:	51 0b       	sbc	r21, r17
    1054:	81 e0       	ldi	r24, 0x01	; 1
    1056:	61 e0       	ldi	r22, 0x01	; 1
    1058:	0e 94 4c 07 	call	0xe98	; 0xe98 <getSetFreeCluster>
    105c:	1f 91       	pop	r17
    105e:	0f 91       	pop	r16
    1060:	ff 90       	pop	r15
    1062:	ef 90       	pop	r14
    1064:	df 90       	pop	r13
    1066:	08 95       	ret

00001068 <getBootSectorData>:
    1068:	6f 92       	push	r6
    106a:	7f 92       	push	r7
    106c:	8f 92       	push	r8
    106e:	9f 92       	push	r9
    1070:	af 92       	push	r10
    1072:	bf 92       	push	r11
    1074:	cf 92       	push	r12
    1076:	df 92       	push	r13
    1078:	ef 92       	push	r14
    107a:	ff 92       	push	r15
    107c:	0f 93       	push	r16
    107e:	1f 93       	push	r17
    1080:	10 92 b5 02 	sts	0x02B5, r1
    1084:	10 92 b6 02 	sts	0x02B6, r1
    1088:	10 92 b7 02 	sts	0x02B7, r1
    108c:	10 92 b8 02 	sts	0x02B8, r1
    1090:	60 e0       	ldi	r22, 0x00	; 0
    1092:	70 e0       	ldi	r23, 0x00	; 0
    1094:	80 e0       	ldi	r24, 0x00	; 0
    1096:	90 e0       	ldi	r25, 0x00	; 0
    1098:	0e 94 3b 14 	call	0x2876	; 0x2876 <SD_readSingleBlock>
    109c:	80 91 b3 00 	lds	r24, 0x00B3
    10a0:	89 3e       	cpi	r24, 0xE9	; 233
    10a2:	19 f1       	breq	.+70     	; 0x10ea <getBootSectorData+0x82>
    10a4:	8b 3e       	cpi	r24, 0xEB	; 235
    10a6:	09 f1       	breq	.+66     	; 0x10ea <getBootSectorData+0x82>
    10a8:	80 91 b1 02 	lds	r24, 0x02B1
    10ac:	90 91 b2 02 	lds	r25, 0x02B2
    10b0:	85 55       	subi	r24, 0x55	; 85
    10b2:	9a 4a       	sbci	r25, 0xAA	; 170
    10b4:	09 f0       	breq	.+2      	; 0x10b8 <getBootSectorData+0x50>
    10b6:	b0 c0       	rjmp	.+352    	; 0x1218 <getBootSectorData+0x1b0>
    10b8:	60 91 79 02 	lds	r22, 0x0279
    10bc:	70 91 7a 02 	lds	r23, 0x027A
    10c0:	80 91 7b 02 	lds	r24, 0x027B
    10c4:	90 91 7c 02 	lds	r25, 0x027C
    10c8:	60 93 b5 02 	sts	0x02B5, r22
    10cc:	70 93 b6 02 	sts	0x02B6, r23
    10d0:	80 93 b7 02 	sts	0x02B7, r24
    10d4:	90 93 b8 02 	sts	0x02B8, r25
    10d8:	0e 94 3b 14 	call	0x2876	; 0x2876 <SD_readSingleBlock>
    10dc:	80 91 b3 00 	lds	r24, 0x00B3
    10e0:	89 3e       	cpi	r24, 0xE9	; 233
    10e2:	19 f0       	breq	.+6      	; 0x10ea <getBootSectorData+0x82>
    10e4:	8b 3e       	cpi	r24, 0xEB	; 235
    10e6:	09 f0       	breq	.+2      	; 0x10ea <getBootSectorData+0x82>
    10e8:	97 c0       	rjmp	.+302    	; 0x1218 <getBootSectorData+0x1b0>
    10ea:	80 91 be 00 	lds	r24, 0x00BE
    10ee:	90 91 bf 00 	lds	r25, 0x00BF
    10f2:	90 93 96 00 	sts	0x0096, r25
    10f6:	80 93 95 00 	sts	0x0095, r24
    10fa:	80 91 c0 00 	lds	r24, 0x00C0
    10fe:	90 e0       	ldi	r25, 0x00	; 0
    1100:	90 93 b4 02 	sts	0x02B4, r25
    1104:	80 93 b3 02 	sts	0x02B3, r24
    1108:	a0 90 c1 00 	lds	r10, 0x00C1
    110c:	b0 90 c2 00 	lds	r11, 0x00C2
    1110:	b0 92 bf 02 	sts	0x02BF, r11
    1114:	a0 92 be 02 	sts	0x02BE, r10
    1118:	80 91 df 00 	lds	r24, 0x00DF
    111c:	90 91 e0 00 	lds	r25, 0x00E0
    1120:	a0 91 e1 00 	lds	r26, 0x00E1
    1124:	b0 91 e2 00 	lds	r27, 0x00E2
    1128:	80 93 a2 00 	sts	0x00A2, r24
    112c:	90 93 a3 00 	sts	0x00A3, r25
    1130:	a0 93 a4 00 	sts	0x00A4, r26
    1134:	b0 93 a5 00 	sts	0x00A5, r27
    1138:	e0 90 be 02 	lds	r14, 0x02BE
    113c:	f0 90 bf 02 	lds	r15, 0x02BF
    1140:	60 91 c3 00 	lds	r22, 0x00C3
    1144:	70 e0       	ldi	r23, 0x00	; 0
    1146:	80 e0       	ldi	r24, 0x00	; 0
    1148:	90 e0       	ldi	r25, 0x00	; 0
    114a:	20 91 d7 00 	lds	r18, 0x00D7
    114e:	30 91 d8 00 	lds	r19, 0x00D8
    1152:	40 91 d9 00 	lds	r20, 0x00D9
    1156:	50 91 da 00 	lds	r21, 0x00DA
    115a:	0e 94 89 16 	call	0x2d12	; 0x2d12 <__mulsi3>
    115e:	3b 01       	movw	r6, r22
    1160:	4c 01       	movw	r8, r24
    1162:	00 e0       	ldi	r16, 0x00	; 0
    1164:	10 e0       	ldi	r17, 0x00	; 0
    1166:	80 91 cf 00 	lds	r24, 0x00CF
    116a:	90 91 d0 00 	lds	r25, 0x00D0
    116e:	a0 91 d1 00 	lds	r26, 0x00D1
    1172:	b0 91 d2 00 	lds	r27, 0x00D2
    1176:	e8 0e       	add	r14, r24
    1178:	f9 1e       	adc	r15, r25
    117a:	0a 1f       	adc	r16, r26
    117c:	1b 1f       	adc	r17, r27
    117e:	e6 0c       	add	r14, r6
    1180:	f7 1c       	adc	r15, r7
    1182:	08 1d       	adc	r16, r8
    1184:	19 1d       	adc	r17, r9
    1186:	e0 92 8d 00 	sts	0x008D, r14
    118a:	f0 92 8e 00 	sts	0x008E, r15
    118e:	00 93 8f 00 	sts	0x008F, r16
    1192:	10 93 90 00 	sts	0x0090, r17
    1196:	20 91 b3 02 	lds	r18, 0x02B3
    119a:	30 91 b4 02 	lds	r19, 0x02B4
    119e:	cc 24       	eor	r12, r12
    11a0:	dd 24       	eor	r13, r13
    11a2:	60 91 d3 00 	lds	r22, 0x00D3
    11a6:	70 91 d4 00 	lds	r23, 0x00D4
    11aa:	80 91 d5 00 	lds	r24, 0x00D5
    11ae:	90 91 d6 00 	lds	r25, 0x00D6
    11b2:	6a 19       	sub	r22, r10
    11b4:	7b 09       	sbc	r23, r11
    11b6:	8c 09       	sbc	r24, r12
    11b8:	9d 09       	sbc	r25, r13
    11ba:	66 19       	sub	r22, r6
    11bc:	77 09       	sbc	r23, r7
    11be:	88 09       	sbc	r24, r8
    11c0:	99 09       	sbc	r25, r9
    11c2:	40 e0       	ldi	r20, 0x00	; 0
    11c4:	50 e0       	ldi	r21, 0x00	; 0
    11c6:	0e 94 ad 16 	call	0x2d5a	; 0x2d5a <__udivmodsi4>
    11ca:	c9 01       	movw	r24, r18
    11cc:	da 01       	movw	r26, r20
    11ce:	80 93 97 00 	sts	0x0097, r24
    11d2:	90 93 98 00 	sts	0x0098, r25
    11d6:	a0 93 99 00 	sts	0x0099, r26
    11da:	b0 93 9a 00 	sts	0x009A, r27
    11de:	81 e0       	ldi	r24, 0x01	; 1
    11e0:	60 e0       	ldi	r22, 0x00	; 0
    11e2:	20 e0       	ldi	r18, 0x00	; 0
    11e4:	30 e0       	ldi	r19, 0x00	; 0
    11e6:	40 e0       	ldi	r20, 0x00	; 0
    11e8:	50 e0       	ldi	r21, 0x00	; 0
    11ea:	0e 94 4c 07 	call	0xe98	; 0xe98 <getSetFreeCluster>
    11ee:	20 91 97 00 	lds	r18, 0x0097
    11f2:	30 91 98 00 	lds	r19, 0x0098
    11f6:	40 91 99 00 	lds	r20, 0x0099
    11fa:	50 91 9a 00 	lds	r21, 0x009A
    11fe:	26 17       	cp	r18, r22
    1200:	37 07       	cpc	r19, r23
    1202:	48 07       	cpc	r20, r24
    1204:	59 07       	cpc	r21, r25
    1206:	18 f4       	brcc	.+6      	; 0x120e <getBootSectorData+0x1a6>
    1208:	10 92 3e 03 	sts	0x033E, r1
    120c:	03 c0       	rjmp	.+6      	; 0x1214 <getBootSectorData+0x1ac>
    120e:	81 e0       	ldi	r24, 0x01	; 1
    1210:	80 93 3e 03 	sts	0x033E, r24
    1214:	80 e0       	ldi	r24, 0x00	; 0
    1216:	01 c0       	rjmp	.+2      	; 0x121a <getBootSectorData+0x1b2>
    1218:	81 e0       	ldi	r24, 0x01	; 1
    121a:	1f 91       	pop	r17
    121c:	0f 91       	pop	r16
    121e:	ff 90       	pop	r15
    1220:	ef 90       	pop	r14
    1222:	df 90       	pop	r13
    1224:	cf 90       	pop	r12
    1226:	bf 90       	pop	r11
    1228:	af 90       	pop	r10
    122a:	9f 90       	pop	r9
    122c:	8f 90       	pop	r8
    122e:	7f 90       	pop	r7
    1230:	6f 90       	pop	r6
    1232:	08 95       	ret

00001234 <getSetNextCluster>:
    1234:	4f 92       	push	r4
    1236:	5f 92       	push	r5
    1238:	6f 92       	push	r6
    123a:	7f 92       	push	r7
    123c:	8f 92       	push	r8
    123e:	9f 92       	push	r9
    1240:	af 92       	push	r10
    1242:	bf 92       	push	r11
    1244:	cf 92       	push	r12
    1246:	df 92       	push	r13
    1248:	ef 92       	push	r14
    124a:	ff 92       	push	r15
    124c:	0f 93       	push	r16
    124e:	1f 93       	push	r17
    1250:	cf 93       	push	r28
    1252:	df 93       	push	r29
    1254:	5b 01       	movw	r10, r22
    1256:	6c 01       	movw	r12, r24
    1258:	84 2e       	mov	r8, r20
    125a:	28 01       	movw	r4, r16
    125c:	39 01       	movw	r6, r18
    125e:	80 91 be 02 	lds	r24, 0x02BE
    1262:	90 91 bf 02 	lds	r25, 0x02BF
    1266:	f2 e0       	ldi	r31, 0x02	; 2
    1268:	aa 0c       	add	r10, r10
    126a:	bb 1c       	adc	r11, r11
    126c:	cc 1c       	adc	r12, r12
    126e:	dd 1c       	adc	r13, r13
    1270:	fa 95       	dec	r31
    1272:	d1 f7       	brne	.-12     	; 0x1268 <getSetNextCluster+0x34>
    1274:	20 91 95 00 	lds	r18, 0x0095
    1278:	30 91 96 00 	lds	r19, 0x0096
    127c:	7c 01       	movw	r14, r24
    127e:	00 e0       	ldi	r16, 0x00	; 0
    1280:	10 e0       	ldi	r17, 0x00	; 0
    1282:	80 91 b5 02 	lds	r24, 0x02B5
    1286:	90 91 b6 02 	lds	r25, 0x02B6
    128a:	a0 91 b7 02 	lds	r26, 0x02B7
    128e:	b0 91 b8 02 	lds	r27, 0x02B8
    1292:	e8 0e       	add	r14, r24
    1294:	f9 1e       	adc	r15, r25
    1296:	0a 1f       	adc	r16, r26
    1298:	1b 1f       	adc	r17, r27
    129a:	40 e0       	ldi	r20, 0x00	; 0
    129c:	50 e0       	ldi	r21, 0x00	; 0
    129e:	c6 01       	movw	r24, r12
    12a0:	b5 01       	movw	r22, r10
    12a2:	0e 94 ad 16 	call	0x2d5a	; 0x2d5a <__udivmodsi4>
    12a6:	e2 0e       	add	r14, r18
    12a8:	f3 1e       	adc	r15, r19
    12aa:	04 1f       	adc	r16, r20
    12ac:	15 1f       	adc	r17, r21
    12ae:	c0 91 95 00 	lds	r28, 0x0095
    12b2:	d0 91 96 00 	lds	r29, 0x0096
    12b6:	99 24       	eor	r9, r9
    12b8:	c8 01       	movw	r24, r16
    12ba:	b7 01       	movw	r22, r14
    12bc:	0e 94 3b 14 	call	0x2876	; 0x2876 <SD_readSingleBlock>
    12c0:	88 23       	and	r24, r24
    12c2:	21 f0       	breq	.+8      	; 0x12cc <getSetNextCluster+0x98>
    12c4:	93 94       	inc	r9
    12c6:	8a e0       	ldi	r24, 0x0A	; 10
    12c8:	98 16       	cp	r9, r24
    12ca:	b1 f7       	brne	.-20     	; 0x12b8 <getSetNextCluster+0x84>
    12cc:	9e 01       	movw	r18, r28
    12ce:	40 e0       	ldi	r20, 0x00	; 0
    12d0:	50 e0       	ldi	r21, 0x00	; 0
    12d2:	c6 01       	movw	r24, r12
    12d4:	b5 01       	movw	r22, r10
    12d6:	0e 94 ad 16 	call	0x2d5a	; 0x2d5a <__udivmodsi4>
    12da:	fb 01       	movw	r30, r22
    12dc:	ed 54       	subi	r30, 0x4D	; 77
    12de:	ff 4f       	sbci	r31, 0xFF	; 255
    12e0:	88 20       	and	r8, r8
    12e2:	31 f4       	brne	.+12     	; 0x12f0 <getSetNextCluster+0xbc>
    12e4:	20 81       	ld	r18, Z
    12e6:	31 81       	ldd	r19, Z+1	; 0x01
    12e8:	42 81       	ldd	r20, Z+2	; 0x02
    12ea:	53 81       	ldd	r21, Z+3	; 0x03
    12ec:	5f 70       	andi	r21, 0x0F	; 15
    12ee:	0c c0       	rjmp	.+24     	; 0x1308 <getSetNextCluster+0xd4>
    12f0:	40 82       	st	Z, r4
    12f2:	51 82       	std	Z+1, r5	; 0x01
    12f4:	62 82       	std	Z+2, r6	; 0x02
    12f6:	73 82       	std	Z+3, r7	; 0x03
    12f8:	c8 01       	movw	r24, r16
    12fa:	b7 01       	movw	r22, r14
    12fc:	0e 94 ed 13 	call	0x27da	; 0x27da <SD_writeSingleBlock>
    1300:	20 e0       	ldi	r18, 0x00	; 0
    1302:	30 e0       	ldi	r19, 0x00	; 0
    1304:	40 e0       	ldi	r20, 0x00	; 0
    1306:	50 e0       	ldi	r21, 0x00	; 0
    1308:	b9 01       	movw	r22, r18
    130a:	ca 01       	movw	r24, r20
    130c:	df 91       	pop	r29
    130e:	cf 91       	pop	r28
    1310:	1f 91       	pop	r17
    1312:	0f 91       	pop	r16
    1314:	ff 90       	pop	r15
    1316:	ef 90       	pop	r14
    1318:	df 90       	pop	r13
    131a:	cf 90       	pop	r12
    131c:	bf 90       	pop	r11
    131e:	af 90       	pop	r10
    1320:	9f 90       	pop	r9
    1322:	8f 90       	pop	r8
    1324:	7f 90       	pop	r7
    1326:	6f 90       	pop	r6
    1328:	5f 90       	pop	r5
    132a:	4f 90       	pop	r4
    132c:	08 95       	ret

0000132e <findFiles>:
    132e:	2f 92       	push	r2
    1330:	3f 92       	push	r3
    1332:	4f 92       	push	r4
    1334:	5f 92       	push	r5
    1336:	6f 92       	push	r6
    1338:	7f 92       	push	r7
    133a:	8f 92       	push	r8
    133c:	9f 92       	push	r9
    133e:	af 92       	push	r10
    1340:	bf 92       	push	r11
    1342:	cf 92       	push	r12
    1344:	df 92       	push	r13
    1346:	ef 92       	push	r14
    1348:	ff 92       	push	r15
    134a:	0f 93       	push	r16
    134c:	1f 93       	push	r17
    134e:	df 93       	push	r29
    1350:	cf 93       	push	r28
    1352:	cd b7       	in	r28, 0x3d	; 61
    1354:	de b7       	in	r29, 0x3e	; 62
    1356:	2a 97       	sbiw	r28, 0x0a	; 10
    1358:	0f b6       	in	r0, 0x3f	; 63
    135a:	f8 94       	cli
    135c:	de bf       	out	0x3e, r29	; 62
    135e:	0f be       	out	0x3f, r0	; 63
    1360:	cd bf       	out	0x3d, r28	; 61
    1362:	8d 83       	std	Y+5, r24	; 0x05
    1364:	7f 83       	std	Y+7, r23	; 0x07
    1366:	6e 83       	std	Y+6, r22	; 0x06
    1368:	a0 90 a2 00 	lds	r10, 0x00A2
    136c:	b0 90 a3 00 	lds	r11, 0x00A3
    1370:	c0 90 a4 00 	lds	r12, 0x00A4
    1374:	d0 90 a5 00 	lds	r13, 0x00A5
    1378:	81 50       	subi	r24, 0x01	; 1
    137a:	88 87       	std	Y+8, r24	; 0x08
    137c:	20 91 b3 02 	lds	r18, 0x02B3
    1380:	30 91 b4 02 	lds	r19, 0x02B4
    1384:	e0 90 8d 00 	lds	r14, 0x008D
    1388:	f0 90 8e 00 	lds	r15, 0x008E
    138c:	00 91 8f 00 	lds	r16, 0x008F
    1390:	10 91 90 00 	lds	r17, 0x0090
    1394:	c6 01       	movw	r24, r12
    1396:	b5 01       	movw	r22, r10
    1398:	62 50       	subi	r22, 0x02	; 2
    139a:	70 40       	sbci	r23, 0x00	; 0
    139c:	80 40       	sbci	r24, 0x00	; 0
    139e:	90 40       	sbci	r25, 0x00	; 0
    13a0:	40 e0       	ldi	r20, 0x00	; 0
    13a2:	50 e0       	ldi	r21, 0x00	; 0
    13a4:	0e 94 89 16 	call	0x2d12	; 0x2d12 <__mulsi3>
    13a8:	1b 01       	movw	r2, r22
    13aa:	2c 01       	movw	r4, r24
    13ac:	2e 0c       	add	r2, r14
    13ae:	3f 1c       	adc	r3, r15
    13b0:	40 1e       	adc	r4, r16
    13b2:	51 1e       	adc	r5, r17
    13b4:	66 24       	eor	r6, r6
    13b6:	77 24       	eor	r7, r7
    13b8:	43 01       	movw	r8, r6
    13ba:	5f c1       	rjmp	.+702    	; 0x167a <findFiles+0x34c>
    13bc:	d4 01       	movw	r26, r8
    13be:	c3 01       	movw	r24, r6
    13c0:	82 0d       	add	r24, r2
    13c2:	93 1d       	adc	r25, r3
    13c4:	a4 1d       	adc	r26, r4
    13c6:	b5 1d       	adc	r27, r5
    13c8:	89 83       	std	Y+1, r24	; 0x01
    13ca:	9a 83       	std	Y+2, r25	; 0x02
    13cc:	ab 83       	std	Y+3, r26	; 0x03
    13ce:	bc 83       	std	Y+4, r27	; 0x04
    13d0:	bc 01       	movw	r22, r24
    13d2:	cd 01       	movw	r24, r26
    13d4:	0e 94 3b 14 	call	0x2876	; 0x2876 <SD_readSingleBlock>
    13d8:	40 e2       	ldi	r20, 0x20	; 32
    13da:	e4 2e       	mov	r14, r20
    13dc:	f1 2c       	mov	r15, r1
    13de:	3d c1       	rjmp	.+634    	; 0x165a <findFiles+0x32c>
    13e0:	8a 01       	movw	r16, r20
    13e2:	0d 54       	subi	r16, 0x4D	; 77
    13e4:	1f 4f       	sbci	r17, 0xFF	; 255
    13e6:	f7 01       	movw	r30, r14
    13e8:	ed 54       	subi	r30, 0x4D	; 77
    13ea:	ff 4f       	sbci	r31, 0xFF	; 255
    13ec:	b0 97       	sbiw	r30, 0x20	; 32
    13ee:	80 81       	ld	r24, Z
    13f0:	b0 96       	adiw	r30, 0x20	; 32
    13f2:	88 23       	and	r24, r24
    13f4:	39 f4       	brne	.+14     	; 0x1404 <findFiles+0xd6>
    13f6:	9d 81       	ldd	r25, Y+5	; 0x05
    13f8:	92 30       	cpi	r25, 0x02	; 2
    13fa:	09 f0       	breq	.+2      	; 0x13fe <findFiles+0xd0>
    13fc:	68 c1       	rjmp	.+720    	; 0x16ce <findFiles+0x3a0>
    13fe:	88 ec       	ldi	r24, 0xC8	; 200
    1400:	93 e0       	ldi	r25, 0x03	; 3
    1402:	63 c1       	rjmp	.+710    	; 0x16ca <findFiles+0x39c>
    1404:	85 3e       	cpi	r24, 0xE5	; 229
    1406:	09 f4       	brne	.+2      	; 0x140a <findFiles+0xdc>
    1408:	24 c1       	rjmp	.+584    	; 0x1652 <findFiles+0x324>
    140a:	75 97       	sbiw	r30, 0x15	; 21
    140c:	80 81       	ld	r24, Z
    140e:	8f 30       	cpi	r24, 0x0F	; 15
    1410:	09 f4       	brne	.+2      	; 0x1414 <findFiles+0xe6>
    1412:	1f c1       	rjmp	.+574    	; 0x1652 <findFiles+0x324>
    1414:	a8 85       	ldd	r26, Y+8	; 0x08
    1416:	a2 30       	cpi	r26, 0x02	; 2
    1418:	08 f0       	brcs	.+2      	; 0x141c <findFiles+0xee>
    141a:	d2 c0       	rjmp	.+420    	; 0x15c0 <findFiles+0x292>
    141c:	20 e0       	ldi	r18, 0x00	; 0
    141e:	30 e0       	ldi	r19, 0x00	; 0
    1420:	c8 01       	movw	r24, r16
    1422:	82 0f       	add	r24, r18
    1424:	93 1f       	adc	r25, r19
    1426:	ae 81       	ldd	r26, Y+6	; 0x06
    1428:	bf 81       	ldd	r27, Y+7	; 0x07
    142a:	a2 0f       	add	r26, r18
    142c:	b3 1f       	adc	r27, r19
    142e:	fc 01       	movw	r30, r24
    1430:	90 81       	ld	r25, Z
    1432:	8c 91       	ld	r24, X
    1434:	98 17       	cp	r25, r24
    1436:	09 f0       	breq	.+2      	; 0x143a <findFiles+0x10c>
    1438:	0c c1       	rjmp	.+536    	; 0x1652 <findFiles+0x324>
    143a:	82 2f       	mov	r24, r18
    143c:	8f 5f       	subi	r24, 0xFF	; 255
    143e:	2f 5f       	subi	r18, 0xFF	; 255
    1440:	3f 4f       	sbci	r19, 0xFF	; 255
    1442:	2b 30       	cpi	r18, 0x0B	; 11
    1444:	31 05       	cpc	r19, r1
    1446:	61 f7       	brne	.-40     	; 0x1420 <findFiles+0xf2>
    1448:	8b 30       	cpi	r24, 0x0B	; 11
    144a:	09 f0       	breq	.+2      	; 0x144e <findFiles+0x120>
    144c:	02 c1       	rjmp	.+516    	; 0x1652 <findFiles+0x324>
    144e:	fd 81       	ldd	r31, Y+5	; 0x05
    1450:	f1 30       	cpi	r31, 0x01	; 1
    1452:	09 f0       	breq	.+2      	; 0x1456 <findFiles+0x128>
    1454:	3f c0       	rjmp	.+126    	; 0x14d4 <findFiles+0x1a6>
    1456:	89 81       	ldd	r24, Y+1	; 0x01
    1458:	9a 81       	ldd	r25, Y+2	; 0x02
    145a:	ab 81       	ldd	r26, Y+3	; 0x03
    145c:	bc 81       	ldd	r27, Y+4	; 0x04
    145e:	80 93 3f 03 	sts	0x033F, r24
    1462:	90 93 40 03 	sts	0x0340, r25
    1466:	a0 93 41 03 	sts	0x0341, r26
    146a:	b0 93 42 03 	sts	0x0342, r27
    146e:	ca 01       	movw	r24, r20
    1470:	a0 e0       	ldi	r26, 0x00	; 0
    1472:	b0 e0       	ldi	r27, 0x00	; 0
    1474:	80 93 87 00 	sts	0x0087, r24
    1478:	90 93 88 00 	sts	0x0088, r25
    147c:	a0 93 89 00 	sts	0x0089, r26
    1480:	b0 93 8a 00 	sts	0x008A, r27
    1484:	d8 01       	movw	r26, r16
    1486:	54 96       	adiw	r26, 0x14	; 20
    1488:	8d 91       	ld	r24, X+
    148a:	9c 91       	ld	r25, X
    148c:	55 97       	sbiw	r26, 0x15	; 21
    148e:	a0 e0       	ldi	r26, 0x00	; 0
    1490:	b0 e0       	ldi	r27, 0x00	; 0
    1492:	dc 01       	movw	r26, r24
    1494:	99 27       	eor	r25, r25
    1496:	88 27       	eor	r24, r24
    1498:	f8 01       	movw	r30, r16
    149a:	22 8d       	ldd	r18, Z+26	; 0x1a
    149c:	33 8d       	ldd	r19, Z+27	; 0x1b
    149e:	40 e0       	ldi	r20, 0x00	; 0
    14a0:	50 e0       	ldi	r21, 0x00	; 0
    14a2:	82 2b       	or	r24, r18
    14a4:	93 2b       	or	r25, r19
    14a6:	a4 2b       	or	r26, r20
    14a8:	b5 2b       	or	r27, r21
    14aa:	80 93 c9 02 	sts	0x02C9, r24
    14ae:	90 93 ca 02 	sts	0x02CA, r25
    14b2:	a0 93 cb 02 	sts	0x02CB, r26
    14b6:	b0 93 cc 02 	sts	0x02CC, r27
    14ba:	84 8d       	ldd	r24, Z+28	; 0x1c
    14bc:	95 8d       	ldd	r25, Z+29	; 0x1d
    14be:	a6 8d       	ldd	r26, Z+30	; 0x1e
    14c0:	b7 8d       	ldd	r27, Z+31	; 0x1f
    14c2:	80 93 91 00 	sts	0x0091, r24
    14c6:	90 93 92 00 	sts	0x0092, r25
    14ca:	a0 93 93 00 	sts	0x0093, r26
    14ce:	b0 93 94 00 	sts	0x0094, r27
    14d2:	ff c0       	rjmp	.+510    	; 0x16d2 <findFiles+0x3a4>
    14d4:	8d e0       	ldi	r24, 0x0D	; 13
    14d6:	0e 94 10 15 	call	0x2a20	; 0x2a20 <transmitByte>
    14da:	8a e0       	ldi	r24, 0x0A	; 10
    14dc:	0e 94 10 15 	call	0x2a20	; 0x2a20 <transmitByte>
    14e0:	8d eb       	ldi	r24, 0xBD	; 189
    14e2:	93 e0       	ldi	r25, 0x03	; 3
    14e4:	0e 94 14 15 	call	0x2a28	; 0x2a28 <transmitString_F>
    14e8:	8d e0       	ldi	r24, 0x0D	; 13
    14ea:	0e 94 10 15 	call	0x2a20	; 0x2a20 <transmitByte>
    14ee:	8a e0       	ldi	r24, 0x0A	; 10
    14f0:	0e 94 10 15 	call	0x2a20	; 0x2a20 <transmitByte>
    14f4:	8d e0       	ldi	r24, 0x0D	; 13
    14f6:	0e 94 10 15 	call	0x2a20	; 0x2a20 <transmitByte>
    14fa:	8a e0       	ldi	r24, 0x0A	; 10
    14fc:	0e 94 10 15 	call	0x2a20	; 0x2a20 <transmitByte>
    1500:	d8 01       	movw	r26, r16
    1502:	54 96       	adiw	r26, 0x14	; 20
    1504:	8d 91       	ld	r24, X+
    1506:	9c 91       	ld	r25, X
    1508:	55 97       	sbiw	r26, 0x15	; 21
    150a:	a0 e0       	ldi	r26, 0x00	; 0
    150c:	b0 e0       	ldi	r27, 0x00	; 0
    150e:	5c 01       	movw	r10, r24
    1510:	99 24       	eor	r9, r9
    1512:	88 24       	eor	r8, r8
    1514:	f8 01       	movw	r30, r16
    1516:	82 8d       	ldd	r24, Z+26	; 0x1a
    1518:	93 8d       	ldd	r25, Z+27	; 0x1b
    151a:	a0 e0       	ldi	r26, 0x00	; 0
    151c:	b0 e0       	ldi	r27, 0x00	; 0
    151e:	88 2a       	or	r8, r24
    1520:	99 2a       	or	r9, r25
    1522:	aa 2a       	or	r10, r26
    1524:	bb 2a       	or	r11, r27
    1526:	85 ee       	ldi	r24, 0xE5	; 229
    1528:	80 83       	st	Z, r24
    152a:	69 81       	ldd	r22, Y+1	; 0x01
    152c:	7a 81       	ldd	r23, Y+2	; 0x02
    152e:	8b 81       	ldd	r24, Y+3	; 0x03
    1530:	9c 81       	ldd	r25, Y+4	; 0x04
    1532:	0e 94 ed 13 	call	0x27da	; 0x27da <SD_writeSingleBlock>
    1536:	d8 01       	movw	r26, r16
    1538:	5c 96       	adiw	r26, 0x1c	; 28
    153a:	4d 91       	ld	r20, X+
    153c:	5d 91       	ld	r21, X+
    153e:	6d 91       	ld	r22, X+
    1540:	7c 91       	ld	r23, X
    1542:	5f 97       	sbiw	r26, 0x1f	; 31
    1544:	80 e0       	ldi	r24, 0x00	; 0
    1546:	0e 94 d3 07 	call	0xfa6	; 0xfa6 <freeMemoryUpdate>
    154a:	82 e0       	ldi	r24, 0x02	; 2
    154c:	60 e0       	ldi	r22, 0x00	; 0
    154e:	20 e0       	ldi	r18, 0x00	; 0
    1550:	30 e0       	ldi	r19, 0x00	; 0
    1552:	40 e0       	ldi	r20, 0x00	; 0
    1554:	50 e0       	ldi	r21, 0x00	; 0
    1556:	0e 94 4c 07 	call	0xe98	; 0xe98 <getSetFreeCluster>
    155a:	86 16       	cp	r8, r22
    155c:	97 06       	cpc	r9, r23
    155e:	a8 06       	cpc	r10, r24
    1560:	b9 06       	cpc	r11, r25
    1562:	30 f4       	brcc	.+12     	; 0x1570 <findFiles+0x242>
    1564:	82 e0       	ldi	r24, 0x02	; 2
    1566:	61 e0       	ldi	r22, 0x01	; 1
    1568:	a5 01       	movw	r20, r10
    156a:	94 01       	movw	r18, r8
    156c:	0e 94 4c 07 	call	0xe98	; 0xe98 <getSetFreeCluster>
    1570:	c5 01       	movw	r24, r10
    1572:	b4 01       	movw	r22, r8
    1574:	40 e0       	ldi	r20, 0x00	; 0
    1576:	00 e0       	ldi	r16, 0x00	; 0
    1578:	10 e0       	ldi	r17, 0x00	; 0
    157a:	20 e0       	ldi	r18, 0x00	; 0
    157c:	30 e0       	ldi	r19, 0x00	; 0
    157e:	0e 94 1a 09 	call	0x1234	; 0x1234 <getSetNextCluster>
    1582:	f6 2e       	mov	r15, r22
    1584:	e7 2e       	mov	r14, r23
    1586:	d8 2e       	mov	r13, r24
    1588:	c9 2e       	mov	r12, r25
    158a:	c5 01       	movw	r24, r10
    158c:	b4 01       	movw	r22, r8
    158e:	41 e0       	ldi	r20, 0x01	; 1
    1590:	00 e0       	ldi	r16, 0x00	; 0
    1592:	10 e0       	ldi	r17, 0x00	; 0
    1594:	20 e0       	ldi	r18, 0x00	; 0
    1596:	30 e0       	ldi	r19, 0x00	; 0
    1598:	0e 94 1a 09 	call	0x1234	; 0x1234 <getSetNextCluster>
    159c:	8f 2d       	mov	r24, r15
    159e:	9e 2d       	mov	r25, r14
    15a0:	ad 2d       	mov	r26, r13
    15a2:	bc 2d       	mov	r27, r12
    15a4:	4c 01       	movw	r8, r24
    15a6:	5d 01       	movw	r10, r26
    15a8:	b7 ef       	ldi	r27, 0xF7	; 247
    15aa:	8b 16       	cp	r8, r27
    15ac:	bf ef       	ldi	r27, 0xFF	; 255
    15ae:	9b 06       	cpc	r9, r27
    15b0:	bf ef       	ldi	r27, 0xFF	; 255
    15b2:	ab 06       	cpc	r10, r27
    15b4:	bf e0       	ldi	r27, 0x0F	; 15
    15b6:	bb 06       	cpc	r11, r27
    15b8:	d8 f2       	brcs	.-74     	; 0x1570 <findFiles+0x242>
    15ba:	8f ea       	ldi	r24, 0xAF	; 175
    15bc:	93 e0       	ldi	r25, 0x03	; 3
    15be:	85 c0       	rjmp	.+266    	; 0x16ca <findFiles+0x39c>
    15c0:	8d e0       	ldi	r24, 0x0D	; 13
    15c2:	0e 94 10 15 	call	0x2a20	; 0x2a20 <transmitByte>
    15c6:	8a e0       	ldi	r24, 0x0A	; 10
    15c8:	0e 94 10 15 	call	0x2a20	; 0x2a20 <transmitByte>
    15cc:	1a 86       	std	Y+10, r1	; 0x0a
    15ce:	19 86       	std	Y+9, r1	; 0x09
    15d0:	0b c0       	rjmp	.+22     	; 0x15e8 <findFiles+0x2ba>
    15d2:	e9 85       	ldd	r30, Y+9	; 0x09
    15d4:	e7 30       	cpi	r30, 0x07	; 7
    15d6:	19 f4       	brne	.+6      	; 0x15de <findFiles+0x2b0>
    15d8:	80 e2       	ldi	r24, 0x20	; 32
    15da:	0e 94 10 15 	call	0x2a20	; 0x2a20 <transmitByte>
    15de:	89 85       	ldd	r24, Y+9	; 0x09
    15e0:	9a 85       	ldd	r25, Y+10	; 0x0a
    15e2:	01 96       	adiw	r24, 0x01	; 1
    15e4:	9a 87       	std	Y+10, r25	; 0x0a
    15e6:	89 87       	std	Y+9, r24	; 0x09
    15e8:	e9 85       	ldd	r30, Y+9	; 0x09
    15ea:	fa 85       	ldd	r31, Y+10	; 0x0a
    15ec:	e0 0f       	add	r30, r16
    15ee:	f1 1f       	adc	r31, r17
    15f0:	80 81       	ld	r24, Z
    15f2:	0e 94 10 15 	call	0x2a20	; 0x2a20 <transmitByte>
    15f6:	a9 85       	ldd	r26, Y+9	; 0x09
    15f8:	ba 85       	ldd	r27, Y+10	; 0x0a
    15fa:	1a 97       	sbiw	r26, 0x0a	; 10
    15fc:	51 f7       	brne	.-44     	; 0x15d2 <findFiles+0x2a4>
    15fe:	8b ea       	ldi	r24, 0xAB	; 171
    1600:	93 e0       	ldi	r25, 0x03	; 3
    1602:	0e 94 14 15 	call	0x2a28	; 0x2a28 <transmitString_F>
    1606:	87 01       	movw	r16, r14
    1608:	0d 54       	subi	r16, 0x4D	; 77
    160a:	1f 4f       	sbci	r17, 0xFF	; 255
    160c:	05 51       	subi	r16, 0x15	; 21
    160e:	10 40       	sbci	r17, 0x00	; 0
    1610:	f8 01       	movw	r30, r16
    1612:	80 81       	ld	r24, Z
    1614:	0b 5e       	subi	r16, 0xEB	; 235
    1616:	1f 4f       	sbci	r17, 0xFF	; 255
    1618:	80 31       	cpi	r24, 0x10	; 16
    161a:	b9 f0       	breq	.+46     	; 0x164a <findFiles+0x31c>
    161c:	88 30       	cpi	r24, 0x08	; 8
    161e:	19 f4       	brne	.+6      	; 0x1626 <findFiles+0x2f8>
    1620:	89 e9       	ldi	r24, 0x99	; 153
    1622:	93 e0       	ldi	r25, 0x03	; 3
    1624:	14 c0       	rjmp	.+40     	; 0x164e <findFiles+0x320>
    1626:	86 ea       	ldi	r24, 0xA6	; 166
    1628:	93 e0       	ldi	r25, 0x03	; 3
    162a:	0e 94 14 15 	call	0x2a28	; 0x2a28 <transmitString_F>
    162e:	82 ea       	ldi	r24, 0xA2	; 162
    1630:	93 e0       	ldi	r25, 0x03	; 3
    1632:	0e 94 14 15 	call	0x2a28	; 0x2a28 <transmitString_F>
    1636:	f8 01       	movw	r30, r16
    1638:	34 97       	sbiw	r30, 0x04	; 4
    163a:	40 81       	ld	r20, Z
    163c:	51 81       	ldd	r21, Z+1	; 0x01
    163e:	62 81       	ldd	r22, Z+2	; 0x02
    1640:	73 81       	ldd	r23, Z+3	; 0x03
    1642:	80 e0       	ldi	r24, 0x00	; 0
    1644:	0e 94 d3 05 	call	0xba6	; 0xba6 <displayMemory>
    1648:	04 c0       	rjmp	.+8      	; 0x1652 <findFiles+0x324>
    164a:	8e e9       	ldi	r24, 0x9E	; 158
    164c:	93 e0       	ldi	r25, 0x03	; 3
    164e:	0e 94 14 15 	call	0x2a28	; 0x2a28 <transmitString_F>
    1652:	80 e2       	ldi	r24, 0x20	; 32
    1654:	90 e0       	ldi	r25, 0x00	; 0
    1656:	e8 0e       	add	r14, r24
    1658:	f9 1e       	adc	r15, r25
    165a:	a7 01       	movw	r20, r14
    165c:	40 52       	subi	r20, 0x20	; 32
    165e:	50 40       	sbci	r21, 0x00	; 0
    1660:	80 91 95 00 	lds	r24, 0x0095
    1664:	90 91 96 00 	lds	r25, 0x0096
    1668:	48 17       	cp	r20, r24
    166a:	59 07       	cpc	r21, r25
    166c:	08 f4       	brcc	.+2      	; 0x1670 <findFiles+0x342>
    166e:	b8 ce       	rjmp	.-656    	; 0x13e0 <findFiles+0xb2>
    1670:	08 94       	sec
    1672:	61 1c       	adc	r6, r1
    1674:	71 1c       	adc	r7, r1
    1676:	81 1c       	adc	r8, r1
    1678:	91 1c       	adc	r9, r1
    167a:	80 91 b3 02 	lds	r24, 0x02B3
    167e:	90 91 b4 02 	lds	r25, 0x02B4
    1682:	a0 e0       	ldi	r26, 0x00	; 0
    1684:	b0 e0       	ldi	r27, 0x00	; 0
    1686:	68 16       	cp	r6, r24
    1688:	79 06       	cpc	r7, r25
    168a:	8a 06       	cpc	r8, r26
    168c:	9b 06       	cpc	r9, r27
    168e:	08 f4       	brcc	.+2      	; 0x1692 <findFiles+0x364>
    1690:	95 ce       	rjmp	.-726    	; 0x13bc <findFiles+0x8e>
    1692:	c6 01       	movw	r24, r12
    1694:	b5 01       	movw	r22, r10
    1696:	40 e0       	ldi	r20, 0x00	; 0
    1698:	00 e0       	ldi	r16, 0x00	; 0
    169a:	10 e0       	ldi	r17, 0x00	; 0
    169c:	20 e0       	ldi	r18, 0x00	; 0
    169e:	30 e0       	ldi	r19, 0x00	; 0
    16a0:	0e 94 1a 09 	call	0x1234	; 0x1234 <getSetNextCluster>
    16a4:	5b 01       	movw	r10, r22
    16a6:	6c 01       	movw	r12, r24
    16a8:	97 ef       	ldi	r25, 0xF7	; 247
    16aa:	a9 16       	cp	r10, r25
    16ac:	9f ef       	ldi	r25, 0xFF	; 255
    16ae:	b9 06       	cpc	r11, r25
    16b0:	9f ef       	ldi	r25, 0xFF	; 255
    16b2:	c9 06       	cpc	r12, r25
    16b4:	9f e0       	ldi	r25, 0x0F	; 15
    16b6:	d9 06       	cpc	r13, r25
    16b8:	50 f4       	brcc	.+20     	; 0x16ce <findFiles+0x3a0>
    16ba:	a1 14       	cp	r10, r1
    16bc:	b1 04       	cpc	r11, r1
    16be:	c1 04       	cpc	r12, r1
    16c0:	d1 04       	cpc	r13, r1
    16c2:	09 f0       	breq	.+2      	; 0x16c6 <findFiles+0x398>
    16c4:	5b ce       	rjmp	.-842    	; 0x137c <findFiles+0x4e>
    16c6:	80 e8       	ldi	r24, 0x80	; 128
    16c8:	93 e0       	ldi	r25, 0x03	; 3
    16ca:	0e 94 14 15 	call	0x2a28	; 0x2a28 <transmitString_F>
    16ce:	00 e0       	ldi	r16, 0x00	; 0
    16d0:	10 e0       	ldi	r17, 0x00	; 0
    16d2:	c8 01       	movw	r24, r16
    16d4:	2a 96       	adiw	r28, 0x0a	; 10
    16d6:	0f b6       	in	r0, 0x3f	; 63
    16d8:	f8 94       	cli
    16da:	de bf       	out	0x3e, r29	; 62
    16dc:	0f be       	out	0x3f, r0	; 63
    16de:	cd bf       	out	0x3d, r28	; 61
    16e0:	cf 91       	pop	r28
    16e2:	df 91       	pop	r29
    16e4:	1f 91       	pop	r17
    16e6:	0f 91       	pop	r16
    16e8:	ff 90       	pop	r15
    16ea:	ef 90       	pop	r14
    16ec:	df 90       	pop	r13
    16ee:	cf 90       	pop	r12
    16f0:	bf 90       	pop	r11
    16f2:	af 90       	pop	r10
    16f4:	9f 90       	pop	r9
    16f6:	8f 90       	pop	r8
    16f8:	7f 90       	pop	r7
    16fa:	6f 90       	pop	r6
    16fc:	5f 90       	pop	r5
    16fe:	4f 90       	pop	r4
    1700:	3f 90       	pop	r3
    1702:	2f 90       	pop	r2
    1704:	08 95       	ret

00001706 <deleteFile>:
    1706:	cf 93       	push	r28
    1708:	df 93       	push	r29
    170a:	ec 01       	movw	r28, r24
    170c:	0e 94 c4 06 	call	0xd88	; 0xd88 <convertFileName>
    1710:	88 23       	and	r24, r24
    1712:	21 f4       	brne	.+8      	; 0x171c <deleteFile+0x16>
    1714:	82 e0       	ldi	r24, 0x02	; 2
    1716:	be 01       	movw	r22, r28
    1718:	0e 94 97 09 	call	0x132e	; 0x132e <findFiles>
    171c:	df 91       	pop	r29
    171e:	cf 91       	pop	r28
    1720:	08 95       	ret

00001722 <readFile>:
    1722:	2f 92       	push	r2
    1724:	3f 92       	push	r3
    1726:	4f 92       	push	r4
    1728:	5f 92       	push	r5
    172a:	6f 92       	push	r6
    172c:	7f 92       	push	r7
    172e:	8f 92       	push	r8
    1730:	9f 92       	push	r9
    1732:	af 92       	push	r10
    1734:	bf 92       	push	r11
    1736:	cf 92       	push	r12
    1738:	df 92       	push	r13
    173a:	ef 92       	push	r14
    173c:	ff 92       	push	r15
    173e:	0f 93       	push	r16
    1740:	1f 93       	push	r17
    1742:	df 93       	push	r29
    1744:	cf 93       	push	r28
    1746:	00 d0       	rcall	.+0      	; 0x1748 <readFile+0x26>
    1748:	00 d0       	rcall	.+0      	; 0x174a <readFile+0x28>
    174a:	cd b7       	in	r28, 0x3d	; 61
    174c:	de b7       	in	r29, 0x3e	; 62
    174e:	e8 2e       	mov	r14, r24
    1750:	8b 01       	movw	r16, r22
    1752:	cb 01       	movw	r24, r22
    1754:	0e 94 c4 06 	call	0xd88	; 0xd88 <convertFileName>
    1758:	88 23       	and	r24, r24
    175a:	11 f0       	breq	.+4      	; 0x1760 <readFile+0x3e>
    175c:	82 e0       	ldi	r24, 0x02	; 2
    175e:	a0 c0       	rjmp	.+320    	; 0x18a0 <readFile+0x17e>
    1760:	81 e0       	ldi	r24, 0x01	; 1
    1762:	b8 01       	movw	r22, r16
    1764:	0e 94 97 09 	call	0x132e	; 0x132e <findFiles>
    1768:	9c 01       	movw	r18, r24
    176a:	00 97       	sbiw	r24, 0x00	; 0
    176c:	31 f4       	brne	.+12     	; 0x177a <readFile+0x58>
    176e:	80 e0       	ldi	r24, 0x00	; 0
    1770:	ee 20       	and	r14, r14
    1772:	09 f0       	breq	.+2      	; 0x1776 <readFile+0x54>
    1774:	95 c0       	rjmp	.+298    	; 0x18a0 <readFile+0x17e>
    1776:	81 e0       	ldi	r24, 0x01	; 1
    1778:	93 c0       	rjmp	.+294    	; 0x18a0 <readFile+0x17e>
    177a:	81 e0       	ldi	r24, 0x01	; 1
    177c:	e8 16       	cp	r14, r24
    177e:	09 f4       	brne	.+2      	; 0x1782 <readFile+0x60>
    1780:	8f c0       	rjmp	.+286    	; 0x18a0 <readFile+0x17e>
    1782:	d9 01       	movw	r26, r18
    1784:	54 96       	adiw	r26, 0x14	; 20
    1786:	8d 91       	ld	r24, X+
    1788:	9c 91       	ld	r25, X
    178a:	55 97       	sbiw	r26, 0x15	; 21
    178c:	a0 e0       	ldi	r26, 0x00	; 0
    178e:	b0 e0       	ldi	r27, 0x00	; 0
    1790:	4c 01       	movw	r8, r24
    1792:	77 24       	eor	r7, r7
    1794:	66 24       	eor	r6, r6
    1796:	f9 01       	movw	r30, r18
    1798:	82 8d       	ldd	r24, Z+26	; 0x1a
    179a:	93 8d       	ldd	r25, Z+27	; 0x1b
    179c:	a0 e0       	ldi	r26, 0x00	; 0
    179e:	b0 e0       	ldi	r27, 0x00	; 0
    17a0:	68 2a       	or	r6, r24
    17a2:	79 2a       	or	r7, r25
    17a4:	8a 2a       	or	r8, r26
    17a6:	9b 2a       	or	r9, r27
    17a8:	d9 01       	movw	r26, r18
    17aa:	5c 96       	adiw	r26, 0x1c	; 28
    17ac:	8d 91       	ld	r24, X+
    17ae:	9d 91       	ld	r25, X+
    17b0:	0d 90       	ld	r0, X+
    17b2:	bc 91       	ld	r27, X
    17b4:	a0 2d       	mov	r26, r0
    17b6:	89 83       	std	Y+1, r24	; 0x01
    17b8:	9a 83       	std	Y+2, r25	; 0x02
    17ba:	ab 83       	std	Y+3, r26	; 0x03
    17bc:	bc 83       	std	Y+4, r27	; 0x04
    17be:	8d e0       	ldi	r24, 0x0D	; 13
    17c0:	0e 94 10 15 	call	0x2a20	; 0x2a20 <transmitByte>
    17c4:	8a e0       	ldi	r24, 0x0A	; 10
    17c6:	0e 94 10 15 	call	0x2a20	; 0x2a20 <transmitByte>
    17ca:	8d e0       	ldi	r24, 0x0D	; 13
    17cc:	0e 94 10 15 	call	0x2a20	; 0x2a20 <transmitByte>
    17d0:	8a e0       	ldi	r24, 0x0A	; 10
    17d2:	0e 94 10 15 	call	0x2a20	; 0x2a20 <transmitByte>
    17d6:	22 24       	eor	r2, r2
    17d8:	33 24       	eor	r3, r3
    17da:	21 01       	movw	r4, r2
    17dc:	20 91 b3 02 	lds	r18, 0x02B3
    17e0:	30 91 b4 02 	lds	r19, 0x02B4
    17e4:	e0 90 8d 00 	lds	r14, 0x008D
    17e8:	f0 90 8e 00 	lds	r15, 0x008E
    17ec:	00 91 8f 00 	lds	r16, 0x008F
    17f0:	10 91 90 00 	lds	r17, 0x0090
    17f4:	c4 01       	movw	r24, r8
    17f6:	b3 01       	movw	r22, r6
    17f8:	62 50       	subi	r22, 0x02	; 2
    17fa:	70 40       	sbci	r23, 0x00	; 0
    17fc:	80 40       	sbci	r24, 0x00	; 0
    17fe:	90 40       	sbci	r25, 0x00	; 0
    1800:	40 e0       	ldi	r20, 0x00	; 0
    1802:	50 e0       	ldi	r21, 0x00	; 0
    1804:	0e 94 89 16 	call	0x2d12	; 0x2d12 <__mulsi3>
    1808:	5b 01       	movw	r10, r22
    180a:	6c 01       	movw	r12, r24
    180c:	ae 0c       	add	r10, r14
    180e:	bf 1c       	adc	r11, r15
    1810:	c0 1e       	adc	r12, r16
    1812:	d1 1e       	adc	r13, r17
    1814:	ee 24       	eor	r14, r14
    1816:	25 c0       	rjmp	.+74     	; 0x1862 <readFile+0x140>
    1818:	c6 01       	movw	r24, r12
    181a:	b5 01       	movw	r22, r10
    181c:	6e 0d       	add	r22, r14
    181e:	71 1d       	adc	r23, r1
    1820:	81 1d       	adc	r24, r1
    1822:	91 1d       	adc	r25, r1
    1824:	0e 94 3b 14 	call	0x2876	; 0x2876 <SD_readSingleBlock>
    1828:	00 e0       	ldi	r16, 0x00	; 0
    182a:	10 e0       	ldi	r17, 0x00	; 0
    182c:	f8 01       	movw	r30, r16
    182e:	ed 54       	subi	r30, 0x4D	; 77
    1830:	ff 4f       	sbci	r31, 0xFF	; 255
    1832:	80 81       	ld	r24, Z
    1834:	0e 94 10 15 	call	0x2a20	; 0x2a20 <transmitByte>
    1838:	89 81       	ldd	r24, Y+1	; 0x01
    183a:	9a 81       	ldd	r25, Y+2	; 0x02
    183c:	ab 81       	ldd	r26, Y+3	; 0x03
    183e:	bc 81       	ldd	r27, Y+4	; 0x04
    1840:	28 16       	cp	r2, r24
    1842:	39 06       	cpc	r3, r25
    1844:	4a 06       	cpc	r4, r26
    1846:	5b 06       	cpc	r5, r27
    1848:	50 f5       	brcc	.+84     	; 0x189e <readFile+0x17c>
    184a:	08 94       	sec
    184c:	21 1c       	adc	r2, r1
    184e:	31 1c       	adc	r3, r1
    1850:	41 1c       	adc	r4, r1
    1852:	51 1c       	adc	r5, r1
    1854:	0f 5f       	subi	r16, 0xFF	; 255
    1856:	1f 4f       	sbci	r17, 0xFF	; 255
    1858:	92 e0       	ldi	r25, 0x02	; 2
    185a:	00 30       	cpi	r16, 0x00	; 0
    185c:	19 07       	cpc	r17, r25
    185e:	31 f7       	brne	.-52     	; 0x182c <readFile+0x10a>
    1860:	e3 94       	inc	r14
    1862:	20 91 b3 02 	lds	r18, 0x02B3
    1866:	30 91 b4 02 	lds	r19, 0x02B4
    186a:	8e 2d       	mov	r24, r14
    186c:	90 e0       	ldi	r25, 0x00	; 0
    186e:	82 17       	cp	r24, r18
    1870:	93 07       	cpc	r25, r19
    1872:	90 f2       	brcs	.-92     	; 0x1818 <readFile+0xf6>
    1874:	c4 01       	movw	r24, r8
    1876:	b3 01       	movw	r22, r6
    1878:	40 e0       	ldi	r20, 0x00	; 0
    187a:	00 e0       	ldi	r16, 0x00	; 0
    187c:	10 e0       	ldi	r17, 0x00	; 0
    187e:	20 e0       	ldi	r18, 0x00	; 0
    1880:	30 e0       	ldi	r19, 0x00	; 0
    1882:	0e 94 1a 09 	call	0x1234	; 0x1234 <getSetNextCluster>
    1886:	3b 01       	movw	r6, r22
    1888:	4c 01       	movw	r8, r24
    188a:	61 15       	cp	r22, r1
    188c:	71 05       	cpc	r23, r1
    188e:	81 05       	cpc	r24, r1
    1890:	91 05       	cpc	r25, r1
    1892:	09 f0       	breq	.+2      	; 0x1896 <readFile+0x174>
    1894:	a3 cf       	rjmp	.-186    	; 0x17dc <readFile+0xba>
    1896:	87 e6       	ldi	r24, 0x67	; 103
    1898:	93 e0       	ldi	r25, 0x03	; 3
    189a:	0e 94 14 15 	call	0x2a28	; 0x2a28 <transmitString_F>
    189e:	80 e0       	ldi	r24, 0x00	; 0
    18a0:	0f 90       	pop	r0
    18a2:	0f 90       	pop	r0
    18a4:	0f 90       	pop	r0
    18a6:	0f 90       	pop	r0
    18a8:	cf 91       	pop	r28
    18aa:	df 91       	pop	r29
    18ac:	1f 91       	pop	r17
    18ae:	0f 91       	pop	r16
    18b0:	ff 90       	pop	r15
    18b2:	ef 90       	pop	r14
    18b4:	df 90       	pop	r13
    18b6:	cf 90       	pop	r12
    18b8:	bf 90       	pop	r11
    18ba:	af 90       	pop	r10
    18bc:	9f 90       	pop	r9
    18be:	8f 90       	pop	r8
    18c0:	7f 90       	pop	r7
    18c2:	6f 90       	pop	r6
    18c4:	5f 90       	pop	r5
    18c6:	4f 90       	pop	r4
    18c8:	3f 90       	pop	r3
    18ca:	2f 90       	pop	r2
    18cc:	08 95       	ret

000018ce <writeFile>:
    18ce:	2f 92       	push	r2
    18d0:	3f 92       	push	r3
    18d2:	4f 92       	push	r4
    18d4:	5f 92       	push	r5
    18d6:	6f 92       	push	r6
    18d8:	7f 92       	push	r7
    18da:	8f 92       	push	r8
    18dc:	9f 92       	push	r9
    18de:	af 92       	push	r10
    18e0:	bf 92       	push	r11
    18e2:	cf 92       	push	r12
    18e4:	df 92       	push	r13
    18e6:	ef 92       	push	r14
    18e8:	ff 92       	push	r15
    18ea:	0f 93       	push	r16
    18ec:	1f 93       	push	r17
    18ee:	df 93       	push	r29
    18f0:	cf 93       	push	r28
    18f2:	cd b7       	in	r28, 0x3d	; 61
    18f4:	de b7       	in	r29, 0x3e	; 62
    18f6:	27 97       	sbiw	r28, 0x07	; 7
    18f8:	0f b6       	in	r0, 0x3f	; 63
    18fa:	f8 94       	cli
    18fc:	de bf       	out	0x3e, r29	; 62
    18fe:	0f be       	out	0x3f, r0	; 63
    1900:	cd bf       	out	0x3d, r28	; 61
    1902:	9d 83       	std	Y+5, r25	; 0x05
    1904:	8c 83       	std	Y+4, r24	; 0x04
    1906:	81 e0       	ldi	r24, 0x01	; 1
    1908:	6c 81       	ldd	r22, Y+4	; 0x04
    190a:	7d 81       	ldd	r23, Y+5	; 0x05
    190c:	0e 94 91 0b 	call	0x1722	; 0x1722 <readFile>
    1910:	81 30       	cpi	r24, 0x01	; 1
    1912:	09 f0       	breq	.+2      	; 0x1916 <writeFile+0x48>
    1914:	56 c0       	rjmp	.+172    	; 0x19c2 <writeFile+0xf4>
    1916:	60 90 c9 02 	lds	r6, 0x02C9
    191a:	70 90 ca 02 	lds	r7, 0x02CA
    191e:	80 90 cb 02 	lds	r8, 0x02CB
    1922:	90 90 cc 02 	lds	r9, 0x02CC
    1926:	aa 24       	eor	r10, r10
    1928:	bb 24       	eor	r11, r11
    192a:	65 01       	movw	r12, r10
    192c:	c4 01       	movw	r24, r8
    192e:	b3 01       	movw	r22, r6
    1930:	40 e0       	ldi	r20, 0x00	; 0
    1932:	00 e0       	ldi	r16, 0x00	; 0
    1934:	10 e0       	ldi	r17, 0x00	; 0
    1936:	20 e0       	ldi	r18, 0x00	; 0
    1938:	30 e0       	ldi	r19, 0x00	; 0
    193a:	0e 94 1a 09 	call	0x1234	; 0x1234 <getSetNextCluster>
    193e:	6f 3f       	cpi	r22, 0xFF	; 255
    1940:	2f ef       	ldi	r18, 0xFF	; 255
    1942:	72 07       	cpc	r23, r18
    1944:	2f ef       	ldi	r18, 0xFF	; 255
    1946:	82 07       	cpc	r24, r18
    1948:	2f e0       	ldi	r18, 0x0F	; 15
    194a:	92 07       	cpc	r25, r18
    194c:	41 f0       	breq	.+16     	; 0x195e <writeFile+0x90>
    194e:	08 94       	sec
    1950:	a1 1c       	adc	r10, r1
    1952:	b1 1c       	adc	r11, r1
    1954:	c1 1c       	adc	r12, r1
    1956:	d1 1c       	adc	r13, r1
    1958:	3b 01       	movw	r6, r22
    195a:	4c 01       	movw	r8, r24
    195c:	e7 cf       	rjmp	.-50     	; 0x192c <writeFile+0x5e>
    195e:	20 91 b3 02 	lds	r18, 0x02B3
    1962:	30 91 b4 02 	lds	r19, 0x02B4
    1966:	60 91 95 00 	lds	r22, 0x0095
    196a:	70 91 96 00 	lds	r23, 0x0096
    196e:	e0 90 95 00 	lds	r14, 0x0095
    1972:	f0 90 96 00 	lds	r15, 0x0096
    1976:	80 e0       	ldi	r24, 0x00	; 0
    1978:	90 e0       	ldi	r25, 0x00	; 0
    197a:	40 e0       	ldi	r20, 0x00	; 0
    197c:	50 e0       	ldi	r21, 0x00	; 0
    197e:	0e 94 89 16 	call	0x2d12	; 0x2d12 <__mulsi3>
    1982:	a6 01       	movw	r20, r12
    1984:	95 01       	movw	r18, r10
    1986:	0e 94 89 16 	call	0x2d12	; 0x2d12 <__mulsi3>
    198a:	9b 01       	movw	r18, r22
    198c:	ac 01       	movw	r20, r24
    198e:	60 91 91 00 	lds	r22, 0x0091
    1992:	70 91 92 00 	lds	r23, 0x0092
    1996:	80 91 93 00 	lds	r24, 0x0093
    199a:	90 91 94 00 	lds	r25, 0x0094
    199e:	62 1b       	sub	r22, r18
    19a0:	73 0b       	sbc	r23, r19
    19a2:	84 0b       	sbc	r24, r20
    19a4:	95 0b       	sbc	r25, r21
    19a6:	00 e0       	ldi	r16, 0x00	; 0
    19a8:	10 e0       	ldi	r17, 0x00	; 0
    19aa:	a8 01       	movw	r20, r16
    19ac:	97 01       	movw	r18, r14
    19ae:	0e 94 ad 16 	call	0x2d5a	; 0x2d5a <__udivmodsi4>
    19b2:	a2 2e       	mov	r10, r18
    19b4:	1a 82       	std	Y+2, r1	; 0x02
    19b6:	19 82       	std	Y+1, r1	; 0x01
    19b8:	21 e0       	ldi	r18, 0x01	; 1
    19ba:	2b 83       	std	Y+3, r18	; 0x03
    19bc:	1f 82       	std	Y+7, r1	; 0x07
    19be:	1e 82       	std	Y+6, r1	; 0x06
    19c0:	4f c0       	rjmp	.+158    	; 0x1a60 <writeFile+0x192>
    19c2:	82 30       	cpi	r24, 0x02	; 2
    19c4:	09 f4       	brne	.+2      	; 0x19c8 <writeFile+0xfa>
    19c6:	96 c2       	rjmp	.+1324   	; 0x1ef4 <writeFile+0x626>
    19c8:	82 e0       	ldi	r24, 0x02	; 2
    19ca:	60 e0       	ldi	r22, 0x00	; 0
    19cc:	20 e0       	ldi	r18, 0x00	; 0
    19ce:	30 e0       	ldi	r19, 0x00	; 0
    19d0:	40 e0       	ldi	r20, 0x00	; 0
    19d2:	50 e0       	ldi	r21, 0x00	; 0
    19d4:	0e 94 4c 07 	call	0xe98	; 0xe98 <getSetFreeCluster>
    19d8:	9b 01       	movw	r18, r22
    19da:	ac 01       	movw	r20, r24
    19dc:	80 91 97 00 	lds	r24, 0x0097
    19e0:	90 91 98 00 	lds	r25, 0x0098
    19e4:	a0 91 99 00 	lds	r26, 0x0099
    19e8:	b0 91 9a 00 	lds	r27, 0x009A
    19ec:	82 17       	cp	r24, r18
    19ee:	93 07       	cpc	r25, r19
    19f0:	a4 07       	cpc	r26, r20
    19f2:	b5 07       	cpc	r27, r21
    19f4:	40 f4       	brcc	.+16     	; 0x1a06 <writeFile+0x138>
    19f6:	20 91 a2 00 	lds	r18, 0x00A2
    19fa:	30 91 a3 00 	lds	r19, 0x00A3
    19fe:	40 91 a4 00 	lds	r20, 0x00A4
    1a02:	50 91 a5 00 	lds	r21, 0x00A5
    1a06:	ca 01       	movw	r24, r20
    1a08:	b9 01       	movw	r22, r18
    1a0a:	0e 94 3a 06 	call	0xc74	; 0xc74 <searchNextFreeCluster>
    1a0e:	3b 01       	movw	r6, r22
    1a10:	4c 01       	movw	r8, r24
    1a12:	61 15       	cp	r22, r1
    1a14:	71 05       	cpc	r23, r1
    1a16:	81 05       	cpc	r24, r1
    1a18:	91 05       	cpc	r25, r1
    1a1a:	49 f4       	brne	.+18     	; 0x1a2e <writeFile+0x160>
    1a1c:	8d e0       	ldi	r24, 0x0D	; 13
    1a1e:	0e 94 10 15 	call	0x2a20	; 0x2a20 <transmitByte>
    1a22:	8a e0       	ldi	r24, 0x0A	; 10
    1a24:	0e 94 10 15 	call	0x2a20	; 0x2a20 <transmitByte>
    1a28:	82 e4       	ldi	r24, 0x42	; 66
    1a2a:	93 e0       	ldi	r25, 0x03	; 3
    1a2c:	61 c2       	rjmp	.+1218   	; 0x1ef0 <writeFile+0x622>
    1a2e:	41 e0       	ldi	r20, 0x01	; 1
    1a30:	0f ef       	ldi	r16, 0xFF	; 255
    1a32:	1f ef       	ldi	r17, 0xFF	; 255
    1a34:	2f ef       	ldi	r18, 0xFF	; 255
    1a36:	3f e0       	ldi	r19, 0x0F	; 15
    1a38:	0e 94 1a 09 	call	0x1234	; 0x1234 <getSetNextCluster>
    1a3c:	c4 01       	movw	r24, r8
    1a3e:	aa 27       	eor	r26, r26
    1a40:	bb 27       	eor	r27, r27
    1a42:	9f 83       	std	Y+7, r25	; 0x07
    1a44:	8e 83       	std	Y+6, r24	; 0x06
    1a46:	7a 82       	std	Y+2, r7	; 0x02
    1a48:	69 82       	std	Y+1, r6	; 0x01
    1a4a:	10 92 91 00 	sts	0x0091, r1
    1a4e:	10 92 92 00 	sts	0x0092, r1
    1a52:	10 92 93 00 	sts	0x0093, r1
    1a56:	10 92 94 00 	sts	0x0094, r1
    1a5a:	20 e0       	ldi	r18, 0x00	; 0
    1a5c:	1b 82       	std	Y+3, r1	; 0x03
    1a5e:	aa 24       	eor	r10, r10
    1a60:	bb 24       	eor	r11, r11
    1a62:	2a 2c       	mov	r2, r10
    1a64:	33 24       	eor	r3, r3
    1a66:	44 24       	eor	r4, r4
    1a68:	55 24       	eor	r5, r5
    1a6a:	c4 01       	movw	r24, r8
    1a6c:	b3 01       	movw	r22, r6
    1a6e:	62 50       	subi	r22, 0x02	; 2
    1a70:	70 40       	sbci	r23, 0x00	; 0
    1a72:	80 40       	sbci	r24, 0x00	; 0
    1a74:	90 40       	sbci	r25, 0x00	; 0
    1a76:	22 23       	and	r18, r18
    1a78:	e1 f1       	breq	.+120    	; 0x1af2 <writeFile+0x224>
    1a7a:	20 91 b3 02 	lds	r18, 0x02B3
    1a7e:	30 91 b4 02 	lds	r19, 0x02B4
    1a82:	e0 90 8d 00 	lds	r14, 0x008D
    1a86:	f0 90 8e 00 	lds	r15, 0x008E
    1a8a:	00 91 8f 00 	lds	r16, 0x008F
    1a8e:	10 91 90 00 	lds	r17, 0x0090
    1a92:	e2 0c       	add	r14, r2
    1a94:	f3 1c       	adc	r15, r3
    1a96:	04 1d       	adc	r16, r4
    1a98:	15 1d       	adc	r17, r5
    1a9a:	40 e0       	ldi	r20, 0x00	; 0
    1a9c:	50 e0       	ldi	r21, 0x00	; 0
    1a9e:	0e 94 89 16 	call	0x2d12	; 0x2d12 <__mulsi3>
    1aa2:	e6 0e       	add	r14, r22
    1aa4:	f7 1e       	adc	r15, r23
    1aa6:	08 1f       	adc	r16, r24
    1aa8:	19 1f       	adc	r17, r25
    1aaa:	e0 92 af 00 	sts	0x00AF, r14
    1aae:	f0 92 b0 00 	sts	0x00B0, r15
    1ab2:	00 93 b1 00 	sts	0x00B1, r16
    1ab6:	10 93 b2 00 	sts	0x00B2, r17
    1aba:	60 91 af 00 	lds	r22, 0x00AF
    1abe:	70 91 b0 00 	lds	r23, 0x00B0
    1ac2:	80 91 b1 00 	lds	r24, 0x00B1
    1ac6:	90 91 b2 00 	lds	r25, 0x00B2
    1aca:	0e 94 3b 14 	call	0x2876	; 0x2876 <SD_readSingleBlock>
    1ace:	20 91 95 00 	lds	r18, 0x0095
    1ad2:	30 91 96 00 	lds	r19, 0x0096
    1ad6:	40 e0       	ldi	r20, 0x00	; 0
    1ad8:	50 e0       	ldi	r21, 0x00	; 0
    1ada:	60 91 91 00 	lds	r22, 0x0091
    1ade:	70 91 92 00 	lds	r23, 0x0092
    1ae2:	80 91 93 00 	lds	r24, 0x0093
    1ae6:	90 91 94 00 	lds	r25, 0x0094
    1aea:	0e 94 ad 16 	call	0x2d5a	; 0x2d5a <__udivmodsi4>
    1aee:	0a 2d       	mov	r16, r10
    1af0:	1f c0       	rjmp	.+62     	; 0x1b30 <writeFile+0x262>
    1af2:	20 91 b3 02 	lds	r18, 0x02B3
    1af6:	30 91 b4 02 	lds	r19, 0x02B4
    1afa:	e0 90 8d 00 	lds	r14, 0x008D
    1afe:	f0 90 8e 00 	lds	r15, 0x008E
    1b02:	00 91 8f 00 	lds	r16, 0x008F
    1b06:	10 91 90 00 	lds	r17, 0x0090
    1b0a:	40 e0       	ldi	r20, 0x00	; 0
    1b0c:	50 e0       	ldi	r21, 0x00	; 0
    1b0e:	0e 94 89 16 	call	0x2d12	; 0x2d12 <__mulsi3>
    1b12:	e6 0e       	add	r14, r22
    1b14:	f7 1e       	adc	r15, r23
    1b16:	08 1f       	adc	r16, r24
    1b18:	19 1f       	adc	r17, r25
    1b1a:	e0 92 af 00 	sts	0x00AF, r14
    1b1e:	f0 92 b0 00 	sts	0x00B0, r15
    1b22:	00 93 b1 00 	sts	0x00B1, r16
    1b26:	10 93 b2 00 	sts	0x00B2, r17
    1b2a:	00 e0       	ldi	r16, 0x00	; 0
    1b2c:	60 e0       	ldi	r22, 0x00	; 0
    1b2e:	70 e0       	ldi	r23, 0x00	; 0
    1b30:	eb 2d       	mov	r30, r11
    1b32:	f0 e0       	ldi	r31, 0x00	; 0
    1b34:	e3 53       	subi	r30, 0x33	; 51
    1b36:	fd 4f       	sbci	r31, 0xFD	; 253
    1b38:	10 81       	ld	r17, Z
    1b3a:	b3 94       	inc	r11
    1b3c:	fb 01       	movw	r30, r22
    1b3e:	ed 54       	subi	r30, 0x4D	; 77
    1b40:	ff 4f       	sbci	r31, 0xFF	; 255
    1b42:	10 83       	st	Z, r17
    1b44:	6f 5f       	subi	r22, 0xFF	; 255
    1b46:	7f 4f       	sbci	r23, 0xFF	; 255
    1b48:	80 91 91 00 	lds	r24, 0x0091
    1b4c:	90 91 92 00 	lds	r25, 0x0092
    1b50:	a0 91 93 00 	lds	r26, 0x0093
    1b54:	b0 91 94 00 	lds	r27, 0x0094
    1b58:	01 96       	adiw	r24, 0x01	; 1
    1b5a:	a1 1d       	adc	r26, r1
    1b5c:	b1 1d       	adc	r27, r1
    1b5e:	80 93 91 00 	sts	0x0091, r24
    1b62:	90 93 92 00 	sts	0x0092, r25
    1b66:	a0 93 93 00 	sts	0x0093, r26
    1b6a:	b0 93 94 00 	sts	0x0094, r27
    1b6e:	82 e0       	ldi	r24, 0x02	; 2
    1b70:	60 30       	cpi	r22, 0x00	; 0
    1b72:	78 07       	cpc	r23, r24
    1b74:	48 f1       	brcs	.+82     	; 0x1bc8 <writeFile+0x2fa>
    1b76:	60 91 af 00 	lds	r22, 0x00AF
    1b7a:	70 91 b0 00 	lds	r23, 0x00B0
    1b7e:	80 91 b1 00 	lds	r24, 0x00B1
    1b82:	90 91 b2 00 	lds	r25, 0x00B2
    1b86:	0e 94 ed 13 	call	0x27da	; 0x27da <SD_writeSingleBlock>
    1b8a:	0f 5f       	subi	r16, 0xFF	; 255
    1b8c:	20 91 b3 02 	lds	r18, 0x02B3
    1b90:	30 91 b4 02 	lds	r19, 0x02B4
    1b94:	80 2f       	mov	r24, r16
    1b96:	90 e0       	ldi	r25, 0x00	; 0
    1b98:	82 17       	cp	r24, r18
    1b9a:	93 07       	cpc	r25, r19
    1b9c:	e1 f0       	breq	.+56     	; 0x1bd6 <writeFile+0x308>
    1b9e:	80 91 af 00 	lds	r24, 0x00AF
    1ba2:	90 91 b0 00 	lds	r25, 0x00B0
    1ba6:	a0 91 b1 00 	lds	r26, 0x00B1
    1baa:	b0 91 b2 00 	lds	r27, 0x00B2
    1bae:	01 96       	adiw	r24, 0x01	; 1
    1bb0:	a1 1d       	adc	r26, r1
    1bb2:	b1 1d       	adc	r27, r1
    1bb4:	80 93 af 00 	sts	0x00AF, r24
    1bb8:	90 93 b0 00 	sts	0x00B0, r25
    1bbc:	a0 93 b1 00 	sts	0x00B1, r26
    1bc0:	b0 93 b2 00 	sts	0x00B2, r27
    1bc4:	60 e0       	ldi	r22, 0x00	; 0
    1bc6:	70 e0       	ldi	r23, 0x00	; 0
    1bc8:	1a 30       	cpi	r17, 0x0A	; 10
    1bca:	71 f0       	breq	.+28     	; 0x1be8 <writeFile+0x31a>
    1bcc:	93 e6       	ldi	r25, 0x63	; 99
    1bce:	9b 15       	cp	r25, r11
    1bd0:	08 f0       	brcs	.+2      	; 0x1bd4 <writeFile+0x306>
    1bd2:	ae cf       	rjmp	.-164    	; 0x1b30 <writeFile+0x262>
    1bd4:	09 c0       	rjmp	.+18     	; 0x1be8 <writeFile+0x31a>
    1bd6:	1a 30       	cpi	r17, 0x0A	; 10
    1bd8:	19 f4       	brne	.+6      	; 0x1be0 <writeFile+0x312>
    1bda:	60 e0       	ldi	r22, 0x00	; 0
    1bdc:	70 e0       	ldi	r23, 0x00	; 0
    1bde:	04 c0       	rjmp	.+8      	; 0x1be8 <writeFile+0x31a>
    1be0:	a3 e6       	ldi	r26, 0x63	; 99
    1be2:	ab 15       	cp	r26, r11
    1be4:	00 f5       	brcc	.+64     	; 0x1c26 <writeFile+0x358>
    1be6:	f9 cf       	rjmp	.-14     	; 0x1bda <writeFile+0x30c>
    1be8:	fb 01       	movw	r30, r22
    1bea:	ed 54       	subi	r30, 0x4D	; 77
    1bec:	ff 4f       	sbci	r31, 0xFF	; 255
    1bee:	10 82       	st	Z, r1
    1bf0:	6f 5f       	subi	r22, 0xFF	; 255
    1bf2:	7f 4f       	sbci	r23, 0xFF	; 255
    1bf4:	b2 e0       	ldi	r27, 0x02	; 2
    1bf6:	60 30       	cpi	r22, 0x00	; 0
    1bf8:	7b 07       	cpc	r23, r27
    1bfa:	b0 f3       	brcs	.-20     	; 0x1be8 <writeFile+0x31a>
    1bfc:	60 91 af 00 	lds	r22, 0x00AF
    1c00:	70 91 b0 00 	lds	r23, 0x00B0
    1c04:	80 91 b1 00 	lds	r24, 0x00B1
    1c08:	90 91 b2 00 	lds	r25, 0x00B2
    1c0c:	0e 94 ed 13 	call	0x27da	; 0x27da <SD_writeSingleBlock>
    1c10:	82 e0       	ldi	r24, 0x02	; 2
    1c12:	61 e0       	ldi	r22, 0x01	; 1
    1c14:	a4 01       	movw	r20, r8
    1c16:	93 01       	movw	r18, r6
    1c18:	0e 94 4c 07 	call	0xe98	; 0xe98 <getSetFreeCluster>
    1c1c:	0e 94 e7 12 	call	0x25ce	; 0x25ce <getDateTime_FAT>
    1c20:	88 23       	and	r24, r24
    1c22:	49 f5       	brne	.+82     	; 0x1c76 <writeFile+0x3a8>
    1c24:	30 c0       	rjmp	.+96     	; 0x1c86 <writeFile+0x3b8>
    1c26:	c4 01       	movw	r24, r8
    1c28:	b3 01       	movw	r22, r6
    1c2a:	0e 94 3a 06 	call	0xc74	; 0xc74 <searchNextFreeCluster>
    1c2e:	6b 01       	movw	r12, r22
    1c30:	7c 01       	movw	r14, r24
    1c32:	61 15       	cp	r22, r1
    1c34:	71 05       	cpc	r23, r1
    1c36:	81 05       	cpc	r24, r1
    1c38:	91 05       	cpc	r25, r1
    1c3a:	49 f4       	brne	.+18     	; 0x1c4e <writeFile+0x380>
    1c3c:	8d e0       	ldi	r24, 0x0D	; 13
    1c3e:	0e 94 10 15 	call	0x2a20	; 0x2a20 <transmitByte>
    1c42:	8a e0       	ldi	r24, 0x0A	; 10
    1c44:	0e 94 10 15 	call	0x2a20	; 0x2a20 <transmitByte>
    1c48:	80 e3       	ldi	r24, 0x30	; 48
    1c4a:	93 e0       	ldi	r25, 0x03	; 3
    1c4c:	51 c1       	rjmp	.+674    	; 0x1ef0 <writeFile+0x622>
    1c4e:	c4 01       	movw	r24, r8
    1c50:	b3 01       	movw	r22, r6
    1c52:	41 e0       	ldi	r20, 0x01	; 1
    1c54:	97 01       	movw	r18, r14
    1c56:	86 01       	movw	r16, r12
    1c58:	0e 94 1a 09 	call	0x1234	; 0x1234 <getSetNextCluster>
    1c5c:	c7 01       	movw	r24, r14
    1c5e:	b6 01       	movw	r22, r12
    1c60:	41 e0       	ldi	r20, 0x01	; 1
    1c62:	0f ef       	ldi	r16, 0xFF	; 255
    1c64:	1f ef       	ldi	r17, 0xFF	; 255
    1c66:	2f ef       	ldi	r18, 0xFF	; 255
    1c68:	3f e0       	ldi	r19, 0x0F	; 15
    1c6a:	0e 94 1a 09 	call	0x1234	; 0x1234 <getSetNextCluster>
    1c6e:	20 e0       	ldi	r18, 0x00	; 0
    1c70:	36 01       	movw	r6, r12
    1c72:	47 01       	movw	r8, r14
    1c74:	fa ce       	rjmp	.-524    	; 0x1a6a <writeFile+0x19c>
    1c76:	10 92 8c 00 	sts	0x008C, r1
    1c7a:	10 92 8b 00 	sts	0x008B, r1
    1c7e:	10 92 a7 00 	sts	0x00A7, r1
    1c82:	10 92 a6 00 	sts	0x00A6, r1
    1c86:	eb 81       	ldd	r30, Y+3	; 0x03
    1c88:	ee 23       	and	r30, r30
    1c8a:	09 f4       	brne	.+2      	; 0x1c8e <writeFile+0x3c0>
    1c8c:	44 c0       	rjmp	.+136    	; 0x1d16 <writeFile+0x448>
    1c8e:	60 91 3f 03 	lds	r22, 0x033F
    1c92:	70 91 40 03 	lds	r23, 0x0340
    1c96:	80 91 41 03 	lds	r24, 0x0341
    1c9a:	90 91 42 03 	lds	r25, 0x0342
    1c9e:	0e 94 3b 14 	call	0x2876	; 0x2876 <SD_readSingleBlock>
    1ca2:	e0 91 87 00 	lds	r30, 0x0087
    1ca6:	f0 91 88 00 	lds	r31, 0x0088
    1caa:	ed 54       	subi	r30, 0x4D	; 77
    1cac:	ff 4f       	sbci	r31, 0xFF	; 255
    1cae:	13 8a       	std	Z+19, r1	; 0x13
    1cb0:	12 8a       	std	Z+18, r1	; 0x12
    1cb2:	80 91 a6 00 	lds	r24, 0x00A6
    1cb6:	90 91 a7 00 	lds	r25, 0x00A7
    1cba:	97 8b       	std	Z+23, r25	; 0x17
    1cbc:	86 8b       	std	Z+22, r24	; 0x16
    1cbe:	80 91 8b 00 	lds	r24, 0x008B
    1cc2:	90 91 8c 00 	lds	r25, 0x008C
    1cc6:	91 8f       	std	Z+25, r25	; 0x19
    1cc8:	80 8f       	std	Z+24, r24	; 0x18
    1cca:	20 91 91 00 	lds	r18, 0x0091
    1cce:	30 91 92 00 	lds	r19, 0x0092
    1cd2:	40 91 93 00 	lds	r20, 0x0093
    1cd6:	50 91 94 00 	lds	r21, 0x0094
    1cda:	84 8d       	ldd	r24, Z+28	; 0x1c
    1cdc:	95 8d       	ldd	r25, Z+29	; 0x1d
    1cde:	a6 8d       	ldd	r26, Z+30	; 0x1e
    1ce0:	b7 8d       	ldd	r27, Z+31	; 0x1f
    1ce2:	79 01       	movw	r14, r18
    1ce4:	8a 01       	movw	r16, r20
    1ce6:	e8 1a       	sub	r14, r24
    1ce8:	f9 0a       	sbc	r15, r25
    1cea:	0a 0b       	sbc	r16, r26
    1cec:	1b 0b       	sbc	r17, r27
    1cee:	24 8f       	std	Z+28, r18	; 0x1c
    1cf0:	35 8f       	std	Z+29, r19	; 0x1d
    1cf2:	46 8f       	std	Z+30, r20	; 0x1e
    1cf4:	57 8f       	std	Z+31, r21	; 0x1f
    1cf6:	60 91 3f 03 	lds	r22, 0x033F
    1cfa:	70 91 40 03 	lds	r23, 0x0340
    1cfe:	80 91 41 03 	lds	r24, 0x0341
    1d02:	90 91 42 03 	lds	r25, 0x0342
    1d06:	0e 94 ed 13 	call	0x27da	; 0x27da <SD_writeSingleBlock>
    1d0a:	81 e0       	ldi	r24, 0x01	; 1
    1d0c:	b8 01       	movw	r22, r16
    1d0e:	a7 01       	movw	r20, r14
    1d10:	0e 94 d3 07 	call	0xfa6	; 0xfa6 <freeMemoryUpdate>
    1d14:	36 c0       	rjmp	.+108    	; 0x1d82 <writeFile+0x4b4>
    1d16:	80 90 a2 00 	lds	r8, 0x00A2
    1d1a:	90 90 a3 00 	lds	r9, 0x00A3
    1d1e:	a0 90 a4 00 	lds	r10, 0x00A4
    1d22:	b0 90 a5 00 	lds	r11, 0x00A5
    1d26:	22 24       	eor	r2, r2
    1d28:	20 91 b3 02 	lds	r18, 0x02B3
    1d2c:	30 91 b4 02 	lds	r19, 0x02B4
    1d30:	e0 90 8d 00 	lds	r14, 0x008D
    1d34:	f0 90 8e 00 	lds	r15, 0x008E
    1d38:	00 91 8f 00 	lds	r16, 0x008F
    1d3c:	10 91 90 00 	lds	r17, 0x0090
    1d40:	c5 01       	movw	r24, r10
    1d42:	b4 01       	movw	r22, r8
    1d44:	62 50       	subi	r22, 0x02	; 2
    1d46:	70 40       	sbci	r23, 0x00	; 0
    1d48:	80 40       	sbci	r24, 0x00	; 0
    1d4a:	90 40       	sbci	r25, 0x00	; 0
    1d4c:	40 e0       	ldi	r20, 0x00	; 0
    1d4e:	50 e0       	ldi	r21, 0x00	; 0
    1d50:	0e 94 89 16 	call	0x2d12	; 0x2d12 <__mulsi3>
    1d54:	2b 01       	movw	r4, r22
    1d56:	3c 01       	movw	r6, r24
    1d58:	4e 0c       	add	r4, r14
    1d5a:	5f 1c       	adc	r5, r15
    1d5c:	60 1e       	adc	r6, r16
    1d5e:	71 1e       	adc	r7, r17
    1d60:	33 24       	eor	r3, r3
    1d62:	7d c0       	rjmp	.+250    	; 0x1e5e <writeFile+0x590>
    1d64:	73 01       	movw	r14, r6
    1d66:	62 01       	movw	r12, r4
    1d68:	c3 0c       	add	r12, r3
    1d6a:	d1 1c       	adc	r13, r1
    1d6c:	e1 1c       	adc	r14, r1
    1d6e:	f1 1c       	adc	r15, r1
    1d70:	c7 01       	movw	r24, r14
    1d72:	b6 01       	movw	r22, r12
    1d74:	0e 94 3b 14 	call	0x2876	; 0x2876 <SD_readSingleBlock>
    1d78:	00 e2       	ldi	r16, 0x20	; 32
    1d7a:	10 e0       	ldi	r17, 0x00	; 0
    1d7c:	65 c0       	rjmp	.+202    	; 0x1e48 <writeFile+0x57a>
    1d7e:	22 20       	and	r2, r2
    1d80:	11 f0       	breq	.+4      	; 0x1d86 <writeFile+0x4b8>
    1d82:	80 e0       	ldi	r24, 0x00	; 0
    1d84:	b8 c0       	rjmp	.+368    	; 0x1ef6 <writeFile+0x628>
    1d86:	af 01       	movw	r20, r30
    1d88:	4d 54       	subi	r20, 0x4D	; 77
    1d8a:	5f 4f       	sbci	r21, 0xFF	; 255
    1d8c:	f8 01       	movw	r30, r16
    1d8e:	ed 56       	subi	r30, 0x6D	; 109
    1d90:	ff 4f       	sbci	r31, 0xFF	; 255
    1d92:	e0 81       	ld	r30, Z
    1d94:	ee 23       	and	r30, r30
    1d96:	19 f0       	breq	.+6      	; 0x1d9e <writeFile+0x4d0>
    1d98:	e5 3e       	cpi	r30, 0xE5	; 229
    1d9a:	09 f0       	breq	.+2      	; 0x1d9e <writeFile+0x4d0>
    1d9c:	53 c0       	rjmp	.+166    	; 0x1e44 <writeFile+0x576>
    1d9e:	20 e0       	ldi	r18, 0x00	; 0
    1da0:	30 e0       	ldi	r19, 0x00	; 0
    1da2:	ba 01       	movw	r22, r20
    1da4:	62 0f       	add	r22, r18
    1da6:	73 1f       	adc	r23, r19
    1da8:	ac 81       	ldd	r26, Y+4	; 0x04
    1daa:	bd 81       	ldd	r27, Y+5	; 0x05
    1dac:	a2 0f       	add	r26, r18
    1dae:	b3 1f       	adc	r27, r19
    1db0:	8c 91       	ld	r24, X
    1db2:	db 01       	movw	r26, r22
    1db4:	8c 93       	st	X, r24
    1db6:	2f 5f       	subi	r18, 0xFF	; 255
    1db8:	3f 4f       	sbci	r19, 0xFF	; 255
    1dba:	2b 30       	cpi	r18, 0x0B	; 11
    1dbc:	31 05       	cpc	r19, r1
    1dbe:	89 f7       	brne	.-30     	; 0x1da2 <writeFile+0x4d4>
    1dc0:	f8 01       	movw	r30, r16
    1dc2:	ed 54       	subi	r30, 0x4D	; 77
    1dc4:	ff 4f       	sbci	r31, 0xFF	; 255
    1dc6:	75 97       	sbiw	r30, 0x15	; 21
    1dc8:	b0 e2       	ldi	r27, 0x20	; 32
    1dca:	b1 93       	st	Z+, r27
    1dcc:	11 92       	st	Z+, r1
    1dce:	11 92       	st	Z+, r1
    1dd0:	20 91 a6 00 	lds	r18, 0x00A6
    1dd4:	30 91 a7 00 	lds	r19, 0x00A7
    1dd8:	21 93       	st	Z+, r18
    1dda:	31 93       	st	Z+, r19
    1ddc:	80 91 8b 00 	lds	r24, 0x008B
    1de0:	90 91 8c 00 	lds	r25, 0x008C
    1de4:	81 93       	st	Z+, r24
    1de6:	91 93       	st	Z+, r25
    1de8:	11 82       	std	Z+1, r1	; 0x01
    1dea:	10 82       	st	Z, r1
    1dec:	34 96       	adiw	r30, 0x04	; 4
    1dee:	21 93       	st	Z+, r18
    1df0:	31 93       	st	Z+, r19
    1df2:	91 83       	std	Z+1, r25	; 0x01
    1df4:	80 83       	st	Z, r24
    1df6:	34 97       	sbiw	r30, 0x04	; 4
    1df8:	8e 81       	ldd	r24, Y+6	; 0x06
    1dfa:	9f 81       	ldd	r25, Y+7	; 0x07
    1dfc:	91 83       	std	Z+1, r25	; 0x01
    1dfe:	80 83       	st	Z, r24
    1e00:	36 96       	adiw	r30, 0x06	; 6
    1e02:	a9 81       	ldd	r26, Y+1	; 0x01
    1e04:	ba 81       	ldd	r27, Y+2	; 0x02
    1e06:	a1 93       	st	Z+, r26
    1e08:	b1 93       	st	Z+, r27
    1e0a:	80 91 91 00 	lds	r24, 0x0091
    1e0e:	90 91 92 00 	lds	r25, 0x0092
    1e12:	a0 91 93 00 	lds	r26, 0x0093
    1e16:	b0 91 94 00 	lds	r27, 0x0094
    1e1a:	80 83       	st	Z, r24
    1e1c:	91 83       	std	Z+1, r25	; 0x01
    1e1e:	a2 83       	std	Z+2, r26	; 0x02
    1e20:	b3 83       	std	Z+3, r27	; 0x03
    1e22:	c7 01       	movw	r24, r14
    1e24:	b6 01       	movw	r22, r12
    1e26:	0e 94 ed 13 	call	0x27da	; 0x27da <SD_writeSingleBlock>
    1e2a:	40 91 91 00 	lds	r20, 0x0091
    1e2e:	50 91 92 00 	lds	r21, 0x0092
    1e32:	60 91 93 00 	lds	r22, 0x0093
    1e36:	70 91 94 00 	lds	r23, 0x0094
    1e3a:	81 e0       	ldi	r24, 0x01	; 1
    1e3c:	0e 94 d3 07 	call	0xfa6	; 0xfa6 <freeMemoryUpdate>
    1e40:	22 24       	eor	r2, r2
    1e42:	23 94       	inc	r2
    1e44:	00 5e       	subi	r16, 0xE0	; 224
    1e46:	1f 4f       	sbci	r17, 0xFF	; 255
    1e48:	80 91 95 00 	lds	r24, 0x0095
    1e4c:	90 91 96 00 	lds	r25, 0x0096
    1e50:	f8 01       	movw	r30, r16
    1e52:	b0 97       	sbiw	r30, 0x20	; 32
    1e54:	e8 17       	cp	r30, r24
    1e56:	f9 07       	cpc	r31, r25
    1e58:	08 f4       	brcc	.+2      	; 0x1e5c <writeFile+0x58e>
    1e5a:	91 cf       	rjmp	.-222    	; 0x1d7e <writeFile+0x4b0>
    1e5c:	33 94       	inc	r3
    1e5e:	20 91 b3 02 	lds	r18, 0x02B3
    1e62:	30 91 b4 02 	lds	r19, 0x02B4
    1e66:	83 2d       	mov	r24, r3
    1e68:	90 e0       	ldi	r25, 0x00	; 0
    1e6a:	82 17       	cp	r24, r18
    1e6c:	93 07       	cpc	r25, r19
    1e6e:	08 f4       	brcc	.+2      	; 0x1e72 <writeFile+0x5a4>
    1e70:	79 cf       	rjmp	.-270    	; 0x1d64 <writeFile+0x496>
    1e72:	c5 01       	movw	r24, r10
    1e74:	b4 01       	movw	r22, r8
    1e76:	40 e0       	ldi	r20, 0x00	; 0
    1e78:	00 e0       	ldi	r16, 0x00	; 0
    1e7a:	10 e0       	ldi	r17, 0x00	; 0
    1e7c:	20 e0       	ldi	r18, 0x00	; 0
    1e7e:	30 e0       	ldi	r19, 0x00	; 0
    1e80:	0e 94 1a 09 	call	0x1234	; 0x1234 <getSetNextCluster>
    1e84:	6b 01       	movw	r12, r22
    1e86:	7c 01       	movw	r14, r24
    1e88:	67 3f       	cpi	r22, 0xF7	; 247
    1e8a:	bf ef       	ldi	r27, 0xFF	; 255
    1e8c:	7b 07       	cpc	r23, r27
    1e8e:	bf ef       	ldi	r27, 0xFF	; 255
    1e90:	8b 07       	cpc	r24, r27
    1e92:	bf e0       	ldi	r27, 0x0F	; 15
    1e94:	9b 07       	cpc	r25, r27
    1e96:	10 f1       	brcs	.+68     	; 0x1edc <writeFile+0x60e>
    1e98:	6f 3f       	cpi	r22, 0xFF	; 255
    1e9a:	ef ef       	ldi	r30, 0xFF	; 255
    1e9c:	7e 07       	cpc	r23, r30
    1e9e:	ef ef       	ldi	r30, 0xFF	; 255
    1ea0:	8e 07       	cpc	r24, r30
    1ea2:	ef e0       	ldi	r30, 0x0F	; 15
    1ea4:	9e 07       	cpc	r25, r30
    1ea6:	b9 f4       	brne	.+46     	; 0x1ed6 <writeFile+0x608>
    1ea8:	c5 01       	movw	r24, r10
    1eaa:	b4 01       	movw	r22, r8
    1eac:	0e 94 3a 06 	call	0xc74	; 0xc74 <searchNextFreeCluster>
    1eb0:	6b 01       	movw	r12, r22
    1eb2:	7c 01       	movw	r14, r24
    1eb4:	c5 01       	movw	r24, r10
    1eb6:	b4 01       	movw	r22, r8
    1eb8:	41 e0       	ldi	r20, 0x01	; 1
    1eba:	97 01       	movw	r18, r14
    1ebc:	86 01       	movw	r16, r12
    1ebe:	0e 94 1a 09 	call	0x1234	; 0x1234 <getSetNextCluster>
    1ec2:	c7 01       	movw	r24, r14
    1ec4:	b6 01       	movw	r22, r12
    1ec6:	41 e0       	ldi	r20, 0x01	; 1
    1ec8:	0f ef       	ldi	r16, 0xFF	; 255
    1eca:	1f ef       	ldi	r17, 0xFF	; 255
    1ecc:	2f ef       	ldi	r18, 0xFF	; 255
    1ece:	3f e0       	ldi	r19, 0x0F	; 15
    1ed0:	0e 94 1a 09 	call	0x1234	; 0x1234 <getSetNextCluster>
    1ed4:	03 c0       	rjmp	.+6      	; 0x1edc <writeFile+0x60e>
    1ed6:	8b e1       	ldi	r24, 0x1B	; 27
    1ed8:	93 e0       	ldi	r25, 0x03	; 3
    1eda:	0a c0       	rjmp	.+20     	; 0x1ef0 <writeFile+0x622>
    1edc:	46 01       	movw	r8, r12
    1ede:	57 01       	movw	r10, r14
    1ee0:	c1 14       	cp	r12, r1
    1ee2:	d1 04       	cpc	r13, r1
    1ee4:	e1 04       	cpc	r14, r1
    1ee6:	f1 04       	cpc	r15, r1
    1ee8:	09 f0       	breq	.+2      	; 0x1eec <writeFile+0x61e>
    1eea:	1e cf       	rjmp	.-452    	; 0x1d28 <writeFile+0x45a>
    1eec:	82 e0       	ldi	r24, 0x02	; 2
    1eee:	93 e0       	ldi	r25, 0x03	; 3
    1ef0:	0e 94 14 15 	call	0x2a28	; 0x2a28 <transmitString_F>
    1ef4:	81 e0       	ldi	r24, 0x01	; 1
    1ef6:	27 96       	adiw	r28, 0x07	; 7
    1ef8:	0f b6       	in	r0, 0x3f	; 63
    1efa:	f8 94       	cli
    1efc:	de bf       	out	0x3e, r29	; 62
    1efe:	0f be       	out	0x3f, r0	; 63
    1f00:	cd bf       	out	0x3d, r28	; 61
    1f02:	cf 91       	pop	r28
    1f04:	df 91       	pop	r29
    1f06:	1f 91       	pop	r17
    1f08:	0f 91       	pop	r16
    1f0a:	ff 90       	pop	r15
    1f0c:	ef 90       	pop	r14
    1f0e:	df 90       	pop	r13
    1f10:	cf 90       	pop	r12
    1f12:	bf 90       	pop	r11
    1f14:	af 90       	pop	r10
    1f16:	9f 90       	pop	r9
    1f18:	8f 90       	pop	r8
    1f1a:	7f 90       	pop	r7
    1f1c:	6f 90       	pop	r6
    1f1e:	5f 90       	pop	r5
    1f20:	4f 90       	pop	r4
    1f22:	3f 90       	pop	r3
    1f24:	2f 90       	pop	r2
    1f26:	08 95       	ret

00001f28 <twi_init>:
    1f28:	16 be       	out	0x36, r1	; 54
    1f2a:	82 e1       	ldi	r24, 0x12	; 18
    1f2c:	80 b9       	out	0x00, r24	; 0
    1f2e:	11 b8       	out	0x01, r1	; 1
    1f30:	08 95       	ret

00001f32 <i2c_start>:
    1f32:	84 ea       	ldi	r24, 0xA4	; 164
    1f34:	86 bf       	out	0x36, r24	; 54
    1f36:	06 b6       	in	r0, 0x36	; 54
    1f38:	07 fe       	sbrs	r0, 7
    1f3a:	fd cf       	rjmp	.-6      	; 0x1f36 <i2c_start+0x4>
    1f3c:	81 b1       	in	r24, 0x01	; 1
    1f3e:	90 e0       	ldi	r25, 0x00	; 0
    1f40:	88 7f       	andi	r24, 0xF8	; 248
    1f42:	88 30       	cpi	r24, 0x08	; 8
    1f44:	09 f0       	breq	.+2      	; 0x1f48 <i2c_start+0x16>
    1f46:	91 e0       	ldi	r25, 0x01	; 1
    1f48:	89 2f       	mov	r24, r25
    1f4a:	08 95       	ret

00001f4c <i2c_repeatStart>:
    1f4c:	84 ea       	ldi	r24, 0xA4	; 164
    1f4e:	86 bf       	out	0x36, r24	; 54
    1f50:	06 b6       	in	r0, 0x36	; 54
    1f52:	07 fe       	sbrs	r0, 7
    1f54:	fd cf       	rjmp	.-6      	; 0x1f50 <i2c_repeatStart+0x4>
    1f56:	81 b1       	in	r24, 0x01	; 1
    1f58:	90 e0       	ldi	r25, 0x00	; 0
    1f5a:	88 7f       	andi	r24, 0xF8	; 248
    1f5c:	80 31       	cpi	r24, 0x10	; 16
    1f5e:	09 f0       	breq	.+2      	; 0x1f62 <i2c_repeatStart+0x16>
    1f60:	91 e0       	ldi	r25, 0x01	; 1
    1f62:	89 2f       	mov	r24, r25
    1f64:	08 95       	ret

00001f66 <i2c_sendAddress>:
    1f66:	80 fd       	sbrc	r24, 0
    1f68:	02 c0       	rjmp	.+4      	; 0x1f6e <i2c_sendAddress+0x8>
    1f6a:	28 e1       	ldi	r18, 0x18	; 24
    1f6c:	01 c0       	rjmp	.+2      	; 0x1f70 <i2c_sendAddress+0xa>
    1f6e:	20 e4       	ldi	r18, 0x40	; 64
    1f70:	83 b9       	out	0x03, r24	; 3
    1f72:	84 e8       	ldi	r24, 0x84	; 132
    1f74:	86 bf       	out	0x36, r24	; 54
    1f76:	06 b6       	in	r0, 0x36	; 54
    1f78:	07 fe       	sbrs	r0, 7
    1f7a:	fd cf       	rjmp	.-6      	; 0x1f76 <i2c_sendAddress+0x10>
    1f7c:	81 b1       	in	r24, 0x01	; 1
    1f7e:	40 e0       	ldi	r20, 0x00	; 0
    1f80:	90 e0       	ldi	r25, 0x00	; 0
    1f82:	88 7f       	andi	r24, 0xF8	; 248
    1f84:	90 70       	andi	r25, 0x00	; 0
    1f86:	30 e0       	ldi	r19, 0x00	; 0
    1f88:	82 17       	cp	r24, r18
    1f8a:	93 07       	cpc	r25, r19
    1f8c:	09 f0       	breq	.+2      	; 0x1f90 <i2c_sendAddress+0x2a>
    1f8e:	41 e0       	ldi	r20, 0x01	; 1
    1f90:	84 2f       	mov	r24, r20
    1f92:	08 95       	ret

00001f94 <i2c_sendData>:
    1f94:	83 b9       	out	0x03, r24	; 3
    1f96:	84 e8       	ldi	r24, 0x84	; 132
    1f98:	86 bf       	out	0x36, r24	; 54
    1f9a:	06 b6       	in	r0, 0x36	; 54
    1f9c:	07 fe       	sbrs	r0, 7
    1f9e:	fd cf       	rjmp	.-6      	; 0x1f9a <i2c_sendData+0x6>
    1fa0:	81 b1       	in	r24, 0x01	; 1
    1fa2:	90 e0       	ldi	r25, 0x00	; 0
    1fa4:	88 7f       	andi	r24, 0xF8	; 248
    1fa6:	88 32       	cpi	r24, 0x28	; 40
    1fa8:	09 f0       	breq	.+2      	; 0x1fac <i2c_sendData+0x18>
    1faa:	91 e0       	ldi	r25, 0x01	; 1
    1fac:	89 2f       	mov	r24, r25
    1fae:	08 95       	ret

00001fb0 <i2c_receiveData_ACK>:
    1fb0:	84 ec       	ldi	r24, 0xC4	; 196
    1fb2:	86 bf       	out	0x36, r24	; 54
    1fb4:	06 b6       	in	r0, 0x36	; 54
    1fb6:	07 fe       	sbrs	r0, 7
    1fb8:	fd cf       	rjmp	.-6      	; 0x1fb4 <i2c_receiveData_ACK+0x4>
    1fba:	81 b1       	in	r24, 0x01	; 1
    1fbc:	88 7f       	andi	r24, 0xF8	; 248
    1fbe:	80 35       	cpi	r24, 0x50	; 80
    1fc0:	11 f0       	breq	.+4      	; 0x1fc6 <i2c_receiveData_ACK+0x16>
    1fc2:	8e e7       	ldi	r24, 0x7E	; 126
    1fc4:	08 95       	ret
    1fc6:	83 b1       	in	r24, 0x03	; 3
    1fc8:	08 95       	ret

00001fca <i2c_receiveData_NACK>:
    1fca:	84 e8       	ldi	r24, 0x84	; 132
    1fcc:	86 bf       	out	0x36, r24	; 54
    1fce:	06 b6       	in	r0, 0x36	; 54
    1fd0:	07 fe       	sbrs	r0, 7
    1fd2:	fd cf       	rjmp	.-6      	; 0x1fce <i2c_receiveData_NACK+0x4>
    1fd4:	81 b1       	in	r24, 0x01	; 1
    1fd6:	88 7f       	andi	r24, 0xF8	; 248
    1fd8:	88 35       	cpi	r24, 0x58	; 88
    1fda:	11 f0       	breq	.+4      	; 0x1fe0 <i2c_receiveData_NACK+0x16>
    1fdc:	8e e7       	ldi	r24, 0x7E	; 126
    1fde:	08 95       	ret
    1fe0:	83 b1       	in	r24, 0x03	; 3
    1fe2:	08 95       	ret

00001fe4 <i2c_stop>:
    1fe4:	84 e9       	ldi	r24, 0x94	; 148
    1fe6:	86 bf       	out	0x36, r24	; 54
    1fe8:	08 95       	ret

00001fea <RTC_setStartAddress>:
//***************************************************************************
unsigned char RTC_setStartAddress(void)
{
   unsigned char errorStatus;
   
   errorStatus = i2c_start();
    1fea:	0e 94 99 0f 	call	0x1f32	; 0x1f32 <i2c_start>
   if(errorStatus == 1)
    1fee:	81 30       	cpi	r24, 0x01	; 1
    1ff0:	21 f4       	brne	.+8      	; 0x1ffa <RTC_setStartAddress+0x10>
   {
     //transmitString_F(PSTR("RTC start1 failed.."));
   	 i2c_stop();
    1ff2:	0e 94 f2 0f 	call	0x1fe4	; 0x1fe4 <i2c_stop>
	 return 1;
    1ff6:	81 e0       	ldi	r24, 0x01	; 1
    1ff8:	08 95       	ret
   } 
   
   errorStatus = i2c_sendAddress(DS1307_W);
    1ffa:	80 ed       	ldi	r24, 0xD0	; 208
    1ffc:	0e 94 b3 0f 	call	0x1f66	; 0x1f66 <i2c_sendAddress>
   
   if(errorStatus == 1)
    2000:	81 30       	cpi	r24, 0x01	; 1
    2002:	b9 f3       	breq	.-18     	; 0x1ff2 <RTC_setStartAddress+0x8>
     //transmitString_F(PSTR("RTC sendAddress1 failed.."));
	 i2c_stop();
	 return 1;
   } 
   
   errorStatus = i2c_sendData(0x00);
    2004:	80 e0       	ldi	r24, 0x00	; 0
    2006:	0e 94 ca 0f 	call	0x1f94	; 0x1f94 <i2c_sendData>
   if(errorStatus == 1)
    200a:	81 30       	cpi	r24, 0x01	; 1
    200c:	91 f3       	breq	.-28     	; 0x1ff2 <RTC_setStartAddress+0x8>
     //transmitString_F(PSTR("RTC write-2 failed.."));
	 i2c_stop();
	 return 1;
   } 

   i2c_stop();
    200e:	0e 94 f2 0f 	call	0x1fe4	; 0x1fe4 <i2c_stop>
   return 0;
    2012:	80 e0       	ldi	r24, 0x00	; 0
}
    2014:	08 95       	ret

00002016 <RTC_read>:

//***********************************************************************
//Function to read RTC registers and store them in buffer rtc_register[]
//***********************************************************************    
unsigned char RTC_read(void)
{
    2016:	1f 93       	push	r17
    2018:	cf 93       	push	r28
    201a:	df 93       	push	r29

  unsigned char errorStatus, i, data;
  
  errorStatus = i2c_start();
    201c:	0e 94 99 0f 	call	0x1f32	; 0x1f32 <i2c_start>
   if(errorStatus == 1)
    2020:	81 30       	cpi	r24, 0x01	; 1
    2022:	f9 f0       	breq	.+62     	; 0x2062 <RTC_read+0x4c>
     //transmitString_F(PSTR("RTC start1 failed.."));
   	 i2c_stop();
	 return 1;
   } 
   
   errorStatus = i2c_sendAddress(DS1307_W);
    2024:	80 ed       	ldi	r24, 0xD0	; 208
    2026:	0e 94 b3 0f 	call	0x1f66	; 0x1f66 <i2c_sendAddress>
   
   if(errorStatus == 1)
    202a:	81 30       	cpi	r24, 0x01	; 1
    202c:	d1 f0       	breq	.+52     	; 0x2062 <RTC_read+0x4c>
     //transmitString_F(PSTR("RTC sendAddress1 failed.."));
	 i2c_stop();
	 return 1;
   } 
   
   errorStatus = i2c_sendData(0x00);
    202e:	80 e0       	ldi	r24, 0x00	; 0
    2030:	0e 94 ca 0f 	call	0x1f94	; 0x1f94 <i2c_sendData>
   if(errorStatus == 1)
    2034:	81 30       	cpi	r24, 0x01	; 1
    2036:	a9 f0       	breq	.+42     	; 0x2062 <RTC_read+0x4c>
     //transmitString_F(PSTR("RTC write-1 failed.."));
	 i2c_stop();
	 return 1;
   } 

    errorStatus = i2c_repeatStart();
    2038:	0e 94 a6 0f 	call	0x1f4c	; 0x1f4c <i2c_repeatStart>
   if(errorStatus == 1)
    203c:	81 30       	cpi	r24, 0x01	; 1
    203e:	89 f0       	breq	.+34     	; 0x2062 <RTC_read+0x4c>
     //transmitString_F(PSTR("RTC repeat start failed.."));
   	 i2c_stop();
	 return 1;
   } 
   
    errorStatus = i2c_sendAddress(DS1307_R);
    2040:	81 ed       	ldi	r24, 0xD1	; 209
    2042:	0e 94 b3 0f 	call	0x1f66	; 0x1f66 <i2c_sendAddress>
   
   if(errorStatus == 1)
    2046:	81 30       	cpi	r24, 0x01	; 1
    2048:	61 f0       	breq	.+24     	; 0x2062 <RTC_read+0x4c>
    204a:	c0 e8       	ldi	r28, 0x80	; 128
    204c:	d0 e0       	ldi	r29, 0x00	; 0
    204e:	10 e0       	ldi	r17, 0x00	; 0
	 return 1;
   } 
 
    for(i=0;i<7;i++)
   {
      if(i == 6)  	 //no Acknowledge after receiving the last byte
    2050:	16 30       	cpi	r17, 0x06	; 6
    2052:	19 f4       	brne	.+6      	; 0x205a <RTC_read+0x44>
	   	  data = i2c_receiveData_NACK();
    2054:	0e 94 e5 0f 	call	0x1fca	; 0x1fca <i2c_receiveData_NACK>
    2058:	02 c0       	rjmp	.+4      	; 0x205e <RTC_read+0x48>
	  else
	  	  data = i2c_receiveData_ACK();
    205a:	0e 94 d8 0f 	call	0x1fb0	; 0x1fb0 <i2c_receiveData_ACK>
		  
   	  if(data == ERROR_CODE)
    205e:	8e 37       	cpi	r24, 0x7E	; 126
    2060:	21 f4       	brne	.+8      	; 0x206a <RTC_read+0x54>
   	  {
       		//transmitString_F(PSTR("RTC receive failed.."));
			i2c_stop();
    2062:	0e 94 f2 0f 	call	0x1fe4	; 0x1fe4 <i2c_stop>
	   		return 1;
    2066:	81 e0       	ldi	r24, 0x01	; 1
    2068:	07 c0       	rjmp	.+14     	; 0x2078 <RTC_read+0x62>
   	  }
	  
	  rtc_register[i] = data;
    206a:	89 93       	st	Y+, r24
     //transmitString_F(PSTR("RTC sendAddress2 failed.."));
	 i2c_stop();
	 return 1;
   } 
 
    for(i=0;i<7;i++)
    206c:	1f 5f       	subi	r17, 0xFF	; 255
    206e:	17 30       	cpi	r17, 0x07	; 7
    2070:	79 f7       	brne	.-34     	; 0x2050 <RTC_read+0x3a>
   	  }
	  
	  rtc_register[i] = data;
	}
	
	i2c_stop();
    2072:	0e 94 f2 0f 	call	0x1fe4	; 0x1fe4 <i2c_stop>
	return 0;
    2076:	80 e0       	ldi	r24, 0x00	; 0
}	  
    2078:	df 91       	pop	r29
    207a:	cf 91       	pop	r28
    207c:	1f 91       	pop	r17
    207e:	08 95       	ret

00002080 <RTC_getTime>:
//Function to form time string for sending it to LCD & UART
//****************************************************************** 
unsigned char RTC_getTime(void)
{
   unsigned char error;
   error = RTC_read();
    2080:	0e 94 0b 10 	call	0x2016	; 0x2016 <RTC_read>
   if(error) return 1;
    2084:	81 11       	cpse	r24, r1
    2086:	32 c0       	rjmp	.+100    	; 0x20ec <RTC_getTime+0x6c>

   RTC_read();
    2088:	0e 94 0b 10 	call	0x2016	; 0x2016 <RTC_read>
   time[8] = 0x00;	  //NULL
    208c:	10 92 c8 02 	sts	0x02C8, r1
   time[7] = (SECONDS & 0x0f) | 0x30;		 //seconds(1's)
    2090:	80 91 80 00 	lds	r24, 0x0080
    2094:	98 2f       	mov	r25, r24
    2096:	9f 70       	andi	r25, 0x0F	; 15
    2098:	90 63       	ori	r25, 0x30	; 48
    209a:	90 93 c7 02 	sts	0x02C7, r25
   time[6] = ((SECONDS & 0x70) >> 4) | 0x30; //seconds(10's)
    209e:	80 77       	andi	r24, 0x70	; 112
    20a0:	82 95       	swap	r24
    20a2:	8f 70       	andi	r24, 0x0F	; 15
    20a4:	80 63       	ori	r24, 0x30	; 48
    20a6:	80 93 c6 02 	sts	0x02C6, r24
   time[5] = ':';
    20aa:	2a e3       	ldi	r18, 0x3A	; 58
    20ac:	20 93 c5 02 	sts	0x02C5, r18
   
   time[4] = (MINUTES & 0x0f) | 0x30;
    20b0:	80 91 81 00 	lds	r24, 0x0081
    20b4:	98 2f       	mov	r25, r24
    20b6:	9f 70       	andi	r25, 0x0F	; 15
    20b8:	90 63       	ori	r25, 0x30	; 48
    20ba:	90 93 c4 02 	sts	0x02C4, r25
   time[3] = ((MINUTES & 0x70) >> 4) | 0x30;
    20be:	80 77       	andi	r24, 0x70	; 112
    20c0:	82 95       	swap	r24
    20c2:	8f 70       	andi	r24, 0x0F	; 15
    20c4:	80 63       	ori	r24, 0x30	; 48
    20c6:	80 93 c3 02 	sts	0x02C3, r24
   time[2] = ':'; 
    20ca:	20 93 c2 02 	sts	0x02C2, r18
   
   time[1] = (HOURS & 0x0f) | 0x30;	
    20ce:	80 91 82 00 	lds	r24, 0x0082
    20d2:	98 2f       	mov	r25, r24
    20d4:	9f 70       	andi	r25, 0x0F	; 15
    20d6:	90 63       	ori	r25, 0x30	; 48
    20d8:	90 93 c1 02 	sts	0x02C1, r25
   time[0] = ((HOURS & 0x30) >> 4) | 0x30;
    20dc:	80 73       	andi	r24, 0x30	; 48
    20de:	82 95       	swap	r24
    20e0:	8f 70       	andi	r24, 0x0F	; 15
    20e2:	80 63       	ori	r24, 0x30	; 48
    20e4:	80 93 c0 02 	sts	0x02C0, r24

   return 0;
    20e8:	80 e0       	ldi	r24, 0x00	; 0
    20ea:	08 95       	ret
//****************************************************************** 
unsigned char RTC_getTime(void)
{
   unsigned char error;
   error = RTC_read();
   if(error) return 1;
    20ec:	81 e0       	ldi	r24, 0x01	; 1
   
   time[1] = (HOURS & 0x0f) | 0x30;	
   time[0] = ((HOURS & 0x30) >> 4) | 0x30;

   return 0;
}
    20ee:	08 95       	ret

000020f0 <RTC_getDate>:
//Function to form date string for sending it to LCD & UART
//****************************************************************** 
unsigned char RTC_getDate(void)
{
  unsigned char error;
  error = RTC_read();
    20f0:	0e 94 0b 10 	call	0x2016	; 0x2016 <RTC_read>
  if(error) return 1;
    20f4:	81 11       	cpse	r24, r1
    20f6:	34 c0       	rjmp	.+104    	; 0x2160 <RTC_getDate+0x70>

  date[10] = 0x00;  //NULL
    20f8:	10 92 3d 03 	sts	0x033D, r1
  date[9] = (YEAR & 0x0f) | 0x30;
    20fc:	80 91 86 00 	lds	r24, 0x0086
    2100:	98 2f       	mov	r25, r24
    2102:	9f 70       	andi	r25, 0x0F	; 15
    2104:	90 63       	ori	r25, 0x30	; 48
    2106:	90 93 3c 03 	sts	0x033C, r25
  date[8] = ((YEAR & 0xf0) >> 4) | 0x30;
    210a:	82 95       	swap	r24
    210c:	8f 70       	andi	r24, 0x0F	; 15
    210e:	80 63       	ori	r24, 0x30	; 48
    2110:	80 93 3b 03 	sts	0x033B, r24
  date[7] = '0';
    2114:	80 e3       	ldi	r24, 0x30	; 48
    2116:	80 93 3a 03 	sts	0x033A, r24
  date[6] = '2';
    211a:	82 e3       	ldi	r24, 0x32	; 50
    211c:	80 93 39 03 	sts	0x0339, r24
  date[5] = '/';
    2120:	9f e2       	ldi	r25, 0x2F	; 47
    2122:	90 93 38 03 	sts	0x0338, r25
  date[4] = (MONTH & 0x0f) | 0x30;
    2126:	20 91 85 00 	lds	r18, 0x0085
    212a:	82 2f       	mov	r24, r18
    212c:	8f 70       	andi	r24, 0x0F	; 15
    212e:	80 63       	ori	r24, 0x30	; 48
    2130:	80 93 37 03 	sts	0x0337, r24
  date[3] = ((MONTH & 0x10) >> 4) | 0x30;
    2134:	22 95       	swap	r18
    2136:	21 70       	andi	r18, 0x01	; 1
    2138:	20 63       	ori	r18, 0x30	; 48
    213a:	20 93 36 03 	sts	0x0336, r18
  date[2] = '/';
    213e:	90 93 35 03 	sts	0x0335, r25
  date[1] = (DATE & 0x0f) | 0x30;
    2142:	80 91 84 00 	lds	r24, 0x0084
    2146:	98 2f       	mov	r25, r24
    2148:	9f 70       	andi	r25, 0x0F	; 15
    214a:	90 63       	ori	r25, 0x30	; 48
    214c:	90 93 34 03 	sts	0x0334, r25
  date[0] = ((DATE & 0x30) >> 4) | 0x30;
    2150:	80 73       	andi	r24, 0x30	; 48
    2152:	82 95       	swap	r24
    2154:	8f 70       	andi	r24, 0x0F	; 15
    2156:	80 63       	ori	r24, 0x30	; 48
    2158:	80 93 33 03 	sts	0x0333, r24
  return 0;
    215c:	80 e0       	ldi	r24, 0x00	; 0
    215e:	08 95       	ret
//****************************************************************** 
unsigned char RTC_getDate(void)
{
  unsigned char error;
  error = RTC_read();
  if(error) return 1;
    2160:	81 e0       	ldi	r24, 0x01	; 1
  date[3] = ((MONTH & 0x10) >> 4) | 0x30;
  date[2] = '/';
  date[1] = (DATE & 0x0f) | 0x30;
  date[0] = ((DATE & 0x30) >> 4) | 0x30;
  return 0;
}  
    2162:	08 95       	ret

00002164 <RTC_displayTime>:
//Function to display time on LCD and send it to PC (thru UART)
//****************************************************************** 
unsigned char RTC_displayTime(void)
{
  unsigned char error;
  error = RTC_getTime();
    2164:	0e 94 40 10 	call	0x2080	; 0x2080 <RTC_getTime>
  if(error) return 1;
    2168:	81 11       	cpse	r24, r1
    216a:	10 c0       	rjmp	.+32     	; 0x218c <RTC_displayTime+0x28>
  
  TX_NEWLINE;
    216c:	8d e0       	ldi	r24, 0x0D	; 13
    216e:	0e 94 10 15 	call	0x2a20	; 0x2a20 <transmitByte>
    2172:	8a e0       	ldi	r24, 0x0A	; 10
    2174:	0e 94 10 15 	call	0x2a20	; 0x2a20 <transmitByte>
  transmitString_F(PSTR("Time:"));
    2178:	80 e1       	ldi	r24, 0x10	; 16
    217a:	95 e0       	ldi	r25, 0x05	; 5
    217c:	0e 94 14 15 	call	0x2a28	; 0x2a28 <transmitString_F>
  transmitString(time);
    2180:	80 ec       	ldi	r24, 0xC0	; 192
    2182:	92 e0       	ldi	r25, 0x02	; 2
    2184:	0e 94 1e 15 	call	0x2a3c	; 0x2a3c <transmitString>

  return 0;
    2188:	80 e0       	ldi	r24, 0x00	; 0
    218a:	08 95       	ret
//****************************************************************** 
unsigned char RTC_displayTime(void)
{
  unsigned char error;
  error = RTC_getTime();
  if(error) return 1;
    218c:	81 e0       	ldi	r24, 0x01	; 1
  TX_NEWLINE;
  transmitString_F(PSTR("Time:"));
  transmitString(time);

  return 0;
}
    218e:	08 95       	ret

00002190 <RTC_displayDay>:
//******************************************************************
//Function to get the string for day 
//****************************************************************** 
void RTC_displayDay(void)
{
  transmitString_F(PSTR("    Day: "));
    2190:	80 e0       	ldi	r24, 0x00	; 0
    2192:	95 e0       	ldi	r25, 0x05	; 5
    2194:	0e 94 14 15 	call	0x2a28	; 0x2a28 <transmitString_F>
  
  switch(DAY)
    2198:	80 91 83 00 	lds	r24, 0x0083
    219c:	90 e0       	ldi	r25, 0x00	; 0
    219e:	87 30       	cpi	r24, 0x07	; 7
    21a0:	91 05       	cpc	r25, r1
    21a2:	d0 f4       	brcc	.+52     	; 0x21d8 <RTC_displayDay+0x48>
    21a4:	fc 01       	movw	r30, r24
    21a6:	e6 5d       	subi	r30, 0xD6	; 214
    21a8:	ff 4f       	sbci	r31, 0xFF	; 255
    21aa:	0c 94 cf 16 	jmp	0x2d9e	; 0x2d9e <__tablejump2__>
  {
   case 0:transmitString_F(PSTR("Sunday"));
    21ae:	89 ef       	ldi	r24, 0xF9	; 249
    21b0:	94 e0       	ldi	r25, 0x04	; 4
    21b2:	14 c0       	rjmp	.+40     	; 0x21dc <RTC_displayDay+0x4c>
          break; 
   case 1:transmitString_F(PSTR("Monday"));
    21b4:	82 ef       	ldi	r24, 0xF2	; 242
    21b6:	94 e0       	ldi	r25, 0x04	; 4
    21b8:	11 c0       	rjmp	.+34     	; 0x21dc <RTC_displayDay+0x4c>
          break; 
   case 2:transmitString_F(PSTR("Tuesday"));
    21ba:	8a ee       	ldi	r24, 0xEA	; 234
    21bc:	94 e0       	ldi	r25, 0x04	; 4
    21be:	0e c0       	rjmp	.+28     	; 0x21dc <RTC_displayDay+0x4c>
          break; 
   case 3:transmitString_F(PSTR("Wednesday"));
    21c0:	80 ee       	ldi	r24, 0xE0	; 224
    21c2:	94 e0       	ldi	r25, 0x04	; 4
    21c4:	0b c0       	rjmp	.+22     	; 0x21dc <RTC_displayDay+0x4c>
          break; 
   case 4:transmitString_F(PSTR("Thursday"));
    21c6:	87 ed       	ldi	r24, 0xD7	; 215
    21c8:	94 e0       	ldi	r25, 0x04	; 4
    21ca:	08 c0       	rjmp	.+16     	; 0x21dc <RTC_displayDay+0x4c>
          break; 		  
   case 5:transmitString_F(PSTR("Friday"));
    21cc:	80 ed       	ldi	r24, 0xD0	; 208
    21ce:	94 e0       	ldi	r25, 0x04	; 4
    21d0:	05 c0       	rjmp	.+10     	; 0x21dc <RTC_displayDay+0x4c>
          break; 		  
   case 6:transmitString_F(PSTR("Saturday"));
    21d2:	87 ec       	ldi	r24, 0xC7	; 199
    21d4:	94 e0       	ldi	r25, 0x04	; 4
    21d6:	02 c0       	rjmp	.+4      	; 0x21dc <RTC_displayDay+0x4c>
          break; 
   default:	transmitString_F(PSTR("Unknown"));  
    21d8:	8f eb       	ldi	r24, 0xBF	; 191
    21da:	94 e0       	ldi	r25, 0x04	; 4
    21dc:	0c 94 14 15 	jmp	0x2a28	; 0x2a28 <transmitString_F>

000021e0 <RTC_displayDate>:
//Function to display date on LCD and send it to PC (UART)
//****************************************************************** 
unsigned char RTC_displayDate(void)
{
  unsigned char error;
  error = RTC_getDate();
    21e0:	0e 94 78 10 	call	0x20f0	; 0x20f0 <RTC_getDate>
  if(error) return 1;
    21e4:	81 11       	cpse	r24, r1
    21e6:	12 c0       	rjmp	.+36     	; 0x220c <RTC_displayDate+0x2c>
  
  TX_NEWLINE;
    21e8:	8d e0       	ldi	r24, 0x0D	; 13
    21ea:	0e 94 10 15 	call	0x2a20	; 0x2a20 <transmitByte>
    21ee:	8a e0       	ldi	r24, 0x0A	; 10
    21f0:	0e 94 10 15 	call	0x2a20	; 0x2a20 <transmitByte>
  transmitString_F(PSTR("Date:")); 
    21f4:	8a e0       	ldi	r24, 0x0A	; 10
    21f6:	95 e0       	ldi	r25, 0x05	; 5
    21f8:	0e 94 14 15 	call	0x2a28	; 0x2a28 <transmitString_F>
  transmitString(date);  
    21fc:	83 e3       	ldi	r24, 0x33	; 51
    21fe:	93 e0       	ldi	r25, 0x03	; 3
    2200:	0e 94 1e 15 	call	0x2a3c	; 0x2a3c <transmitString>
  RTC_displayDay();  
    2204:	0e 94 c8 10 	call	0x2190	; 0x2190 <RTC_displayDay>
  
  return 0; 
    2208:	80 e0       	ldi	r24, 0x00	; 0
    220a:	08 95       	ret
//****************************************************************** 
unsigned char RTC_displayDate(void)
{
  unsigned char error;
  error = RTC_getDate();
  if(error) return 1;
    220c:	81 e0       	ldi	r24, 0x01	; 1
  transmitString_F(PSTR("Date:")); 
  transmitString(date);  
  RTC_displayDay();  
  
  return 0; 
}
    220e:	08 95       	ret

00002210 <RTC_updateRegisters>:
//******************************************************************
//Function to update buffer rtc_register[] for next writing to RTC
//****************************************************************** 
void RTC_updateRegisters(void)
{
  SECONDS = ((time[6] & 0x07) << 4) | (time[7] & 0x0f);
    2210:	20 91 c6 02 	lds	r18, 0x02C6
    2214:	27 70       	andi	r18, 0x07	; 7
    2216:	80 e1       	ldi	r24, 0x10	; 16
    2218:	28 9f       	mul	r18, r24
    221a:	90 01       	movw	r18, r0
    221c:	11 24       	eor	r1, r1
    221e:	30 91 c7 02 	lds	r19, 0x02C7
    2222:	3f 70       	andi	r19, 0x0F	; 15
    2224:	32 2b       	or	r19, r18
    2226:	30 93 80 00 	sts	0x0080, r19
  MINUTES = ((time[3] & 0x07) << 4) | (time[4] & 0x0f);
    222a:	20 91 c3 02 	lds	r18, 0x02C3
    222e:	27 70       	andi	r18, 0x07	; 7
    2230:	80 e1       	ldi	r24, 0x10	; 16
    2232:	28 9f       	mul	r18, r24
    2234:	90 01       	movw	r18, r0
    2236:	11 24       	eor	r1, r1
    2238:	30 91 c4 02 	lds	r19, 0x02C4
    223c:	3f 70       	andi	r19, 0x0F	; 15
    223e:	32 2b       	or	r19, r18
    2240:	30 93 81 00 	sts	0x0081, r19
  HOURS = ((time[0] & 0x03) << 4) | (time[1] & 0x0f);  
    2244:	20 91 c0 02 	lds	r18, 0x02C0
    2248:	23 70       	andi	r18, 0x03	; 3
    224a:	80 e1       	ldi	r24, 0x10	; 16
    224c:	28 9f       	mul	r18, r24
    224e:	90 01       	movw	r18, r0
    2250:	11 24       	eor	r1, r1
    2252:	30 91 c1 02 	lds	r19, 0x02C1
    2256:	3f 70       	andi	r19, 0x0F	; 15
    2258:	32 2b       	or	r19, r18
    225a:	30 93 82 00 	sts	0x0082, r19
  DAY = date[10];
    225e:	20 91 3d 03 	lds	r18, 0x033D
    2262:	20 93 83 00 	sts	0x0083, r18
  DATE = ((date[0] & 0x03) << 4) | (date[1] & 0x0f);
    2266:	20 91 33 03 	lds	r18, 0x0333
    226a:	23 70       	andi	r18, 0x03	; 3
    226c:	80 e1       	ldi	r24, 0x10	; 16
    226e:	28 9f       	mul	r18, r24
    2270:	90 01       	movw	r18, r0
    2272:	11 24       	eor	r1, r1
    2274:	30 91 34 03 	lds	r19, 0x0334
    2278:	3f 70       	andi	r19, 0x0F	; 15
    227a:	32 2b       	or	r19, r18
    227c:	30 93 84 00 	sts	0x0084, r19
  MONTH = ((date[3] & 0x01) << 4) | (date[4] & 0x0f);
    2280:	20 91 36 03 	lds	r18, 0x0336
    2284:	82 2f       	mov	r24, r18
    2286:	81 70       	andi	r24, 0x01	; 1
    2288:	90 e0       	ldi	r25, 0x00	; 0
    228a:	24 e0       	ldi	r18, 0x04	; 4
    228c:	88 0f       	add	r24, r24
    228e:	99 1f       	adc	r25, r25
    2290:	2a 95       	dec	r18
    2292:	e1 f7       	brne	.-8      	; 0x228c <RTC_updateRegisters+0x7c>
    2294:	90 91 37 03 	lds	r25, 0x0337
    2298:	9f 70       	andi	r25, 0x0F	; 15
    229a:	98 2b       	or	r25, r24
    229c:	90 93 85 00 	sts	0x0085, r25
  YEAR = ((date[8] & 0x0f) << 4) | (date[9] & 0x0f);
    22a0:	80 91 3b 03 	lds	r24, 0x033B
    22a4:	20 e1       	ldi	r18, 0x10	; 16
    22a6:	82 9f       	mul	r24, r18
    22a8:	c0 01       	movw	r24, r0
    22aa:	11 24       	eor	r1, r1
    22ac:	90 91 3c 03 	lds	r25, 0x033C
    22b0:	9f 70       	andi	r25, 0x0F	; 15
    22b2:	98 2b       	or	r25, r24
    22b4:	90 93 86 00 	sts	0x0086, r25
    22b8:	08 95       	ret

000022ba <RTC_writeTime>:

//******************************************************************
//Function to write new time in the RTC 
//******************************************************************   
unsigned char RTC_writeTime(void)
{
    22ba:	cf 93       	push	r28
    22bc:	df 93       	push	r29
  unsigned char errorStatus, i;
  
   errorStatus = i2c_start();
    22be:	0e 94 99 0f 	call	0x1f32	; 0x1f32 <i2c_start>
   if(errorStatus == 1)
    22c2:	81 30       	cpi	r24, 0x01	; 1
    22c4:	21 f4       	brne	.+8      	; 0x22ce <RTC_writeTime+0x14>
   {
     //transmitString_F(PSTR("RTC start1 failed.."));
   	 i2c_stop();
    22c6:	0e 94 f2 0f 	call	0x1fe4	; 0x1fe4 <i2c_stop>
	 return(1);
    22ca:	81 e0       	ldi	r24, 0x01	; 1
    22cc:	18 c0       	rjmp	.+48     	; 0x22fe <RTC_writeTime+0x44>
   } 
   
   errorStatus = i2c_sendAddress(DS1307_W);
    22ce:	80 ed       	ldi	r24, 0xD0	; 208
    22d0:	0e 94 b3 0f 	call	0x1f66	; 0x1f66 <i2c_sendAddress>
   
   if(errorStatus == 1)
    22d4:	81 30       	cpi	r24, 0x01	; 1
    22d6:	b9 f3       	breq	.-18     	; 0x22c6 <RTC_writeTime+0xc>
     //transmitString_F(PSTR("RTC sendAddress1 failed.."));
	 i2c_stop();
	 return(1);
   } 
   
   errorStatus = i2c_sendData(0x00);
    22d8:	80 e0       	ldi	r24, 0x00	; 0
    22da:	0e 94 ca 0f 	call	0x1f94	; 0x1f94 <i2c_sendData>
   if(errorStatus == 1)
    22de:	81 30       	cpi	r24, 0x01	; 1
    22e0:	91 f3       	breq	.-28     	; 0x22c6 <RTC_writeTime+0xc>
    22e2:	c0 e8       	ldi	r28, 0x80	; 128
    22e4:	d0 e0       	ldi	r29, 0x00	; 0
	 return(1);
   } 

    for(i=0;i<3;i++)
    {
	  errorStatus = i2c_sendData(rtc_register[i]);  
    22e6:	89 91       	ld	r24, Y+
    22e8:	0e 94 ca 0f 	call	0x1f94	; 0x1f94 <i2c_sendData>
   	  if(errorStatus == 1)
    22ec:	81 30       	cpi	r24, 0x01	; 1
    22ee:	59 f3       	breq	.-42     	; 0x22c6 <RTC_writeTime+0xc>
     //transmitString_F(PSTR("RTC write-1 failed.."));
	 i2c_stop();
	 return(1);
   } 

    for(i=0;i<3;i++)
    22f0:	80 e0       	ldi	r24, 0x00	; 0
    22f2:	c3 38       	cpi	r28, 0x83	; 131
    22f4:	d8 07       	cpc	r29, r24
    22f6:	b9 f7       	brne	.-18     	; 0x22e6 <RTC_writeTime+0x2c>
			i2c_stop();
	   		return(1);
   	  }
    }
	
	i2c_stop();
    22f8:	0e 94 f2 0f 	call	0x1fe4	; 0x1fe4 <i2c_stop>
	return(0);
    22fc:	80 e0       	ldi	r24, 0x00	; 0
}
    22fe:	df 91       	pop	r29
    2300:	cf 91       	pop	r28
    2302:	08 95       	ret

00002304 <RTC_writeDate>:

//******************************************************************
//Function to write new date in the RTC
//******************************************************************   
unsigned char RTC_writeDate(void)
{
    2304:	cf 93       	push	r28
    2306:	df 93       	push	r29
  unsigned char errorStatus, i;
  
   errorStatus = i2c_start();
    2308:	0e 94 99 0f 	call	0x1f32	; 0x1f32 <i2c_start>
   if(errorStatus == 1)
    230c:	81 30       	cpi	r24, 0x01	; 1
    230e:	21 f4       	brne	.+8      	; 0x2318 <RTC_writeDate+0x14>
   {
     //transmitString_F(PSTR("RTC start1 failed.."));
   	 i2c_stop();
    2310:	0e 94 f2 0f 	call	0x1fe4	; 0x1fe4 <i2c_stop>
	 return(1);
    2314:	81 e0       	ldi	r24, 0x01	; 1
    2316:	18 c0       	rjmp	.+48     	; 0x2348 <RTC_writeDate+0x44>
   } 
   
   errorStatus = i2c_sendAddress(DS1307_W);
    2318:	80 ed       	ldi	r24, 0xD0	; 208
    231a:	0e 94 b3 0f 	call	0x1f66	; 0x1f66 <i2c_sendAddress>
   
   if(errorStatus == 1)
    231e:	81 30       	cpi	r24, 0x01	; 1
    2320:	b9 f3       	breq	.-18     	; 0x2310 <RTC_writeDate+0xc>
     //transmitString_F(PSTR("RTC sendAddress1 failed.."));
	 i2c_stop();
	 return(1);
   } 
   
   errorStatus = i2c_sendData(0x03);
    2322:	83 e0       	ldi	r24, 0x03	; 3
    2324:	0e 94 ca 0f 	call	0x1f94	; 0x1f94 <i2c_sendData>
   if(errorStatus == 1)
    2328:	81 30       	cpi	r24, 0x01	; 1
    232a:	91 f3       	breq	.-28     	; 0x2310 <RTC_writeDate+0xc>
    232c:	c3 e8       	ldi	r28, 0x83	; 131
    232e:	d0 e0       	ldi	r29, 0x00	; 0
	 return(1);
   } 

    for(i=3;i<7;i++)
    {
	  errorStatus = i2c_sendData(rtc_register[i]);  
    2330:	89 91       	ld	r24, Y+
    2332:	0e 94 ca 0f 	call	0x1f94	; 0x1f94 <i2c_sendData>
   	  if(errorStatus == 1)
    2336:	81 30       	cpi	r24, 0x01	; 1
    2338:	59 f3       	breq	.-42     	; 0x2310 <RTC_writeDate+0xc>
     //transmitString_F(PSTR("RTC write-1 failed.."));
	 i2c_stop();
	 return(1);
   } 

    for(i=3;i<7;i++)
    233a:	80 e0       	ldi	r24, 0x00	; 0
    233c:	c7 38       	cpi	r28, 0x87	; 135
    233e:	d8 07       	cpc	r29, r24
    2340:	b9 f7       	brne	.-18     	; 0x2330 <RTC_writeDate+0x2c>
			i2c_stop();
	   		return(1);
   	  }
    }
	
	i2c_stop();
    2342:	0e 94 f2 0f 	call	0x1fe4	; 0x1fe4 <i2c_stop>
	return(0);
    2346:	80 e0       	ldi	r24, 0x00	; 0
}
    2348:	df 91       	pop	r29
    234a:	cf 91       	pop	r28
    234c:	08 95       	ret

0000234e <RTC_updateTime>:
  
//******************************************************************
//Function to update RTC time by entering it at hyper terminal
//******************************************************************   
unsigned char RTC_updateTime(void)
{
    234e:	cf 93       	push	r28
  unsigned char data;
  TX_NEWLINE;
    2350:	8d e0       	ldi	r24, 0x0D	; 13
    2352:	0e 94 10 15 	call	0x2a20	; 0x2a20 <transmitByte>
    2356:	8a e0       	ldi	r24, 0x0A	; 10
    2358:	0e 94 10 15 	call	0x2a20	; 0x2a20 <transmitByte>
  transmitString_F(PSTR("Enter Time in 24h format(hh:mm:ss):")); 
    235c:	8b e9       	ldi	r24, 0x9B	; 155
    235e:	94 e0       	ldi	r25, 0x04	; 4
    2360:	0e 94 14 15 	call	0x2a28	; 0x2a28 <transmitString_F>
  
    data = receiveByte(); 	   	  	  				//receive hours
    2364:	0e 94 0b 15 	call	0x2a16	; 0x2a16 <receiveByte>
    2368:	c8 2f       	mov	r28, r24
	transmitByte(data);
    236a:	0e 94 10 15 	call	0x2a20	; 0x2a20 <transmitByte>
	if(data < 0x30 || data > 0x32)
    236e:	80 ed       	ldi	r24, 0xD0	; 208
    2370:	8c 0f       	add	r24, r28
    2372:	83 30       	cpi	r24, 0x03	; 3
    2374:	08 f0       	brcs	.+2      	; 0x2378 <RTC_updateTime+0x2a>
    2376:	65 c0       	rjmp	.+202    	; 0x2442 <RTC_updateTime+0xf4>
	   goto TIME_ERROR;
	   
	time[0]= data;
    2378:	c0 93 c0 02 	sts	0x02C0, r28
	 
	data = receiveByte();
    237c:	0e 94 0b 15 	call	0x2a16	; 0x2a16 <receiveByte>
    2380:	c8 2f       	mov	r28, r24
	transmitByte(data);
    2382:	0e 94 10 15 	call	0x2a20	; 0x2a20 <transmitByte>
	if(data < 0x30 || data > 0x39)
    2386:	80 ed       	ldi	r24, 0xD0	; 208
    2388:	8c 0f       	add	r24, r28
    238a:	8a 30       	cpi	r24, 0x0A	; 10
    238c:	08 f0       	brcs	.+2      	; 0x2390 <RTC_updateTime+0x42>
    238e:	59 c0       	rjmp	.+178    	; 0x2442 <RTC_updateTime+0xf4>
	   goto TIME_ERROR;
	 
	time[1]= data;
    2390:	c0 93 c1 02 	sts	0x02C1, r28
	
	transmitByte(':');
    2394:	8a e3       	ldi	r24, 0x3A	; 58
    2396:	0e 94 10 15 	call	0x2a20	; 0x2a20 <transmitByte>
	
	if(((time[1] & 0x0f) + ((time[0] & 0x03)*10)) > 23)
    239a:	80 91 c0 02 	lds	r24, 0x02C0
    239e:	83 70       	andi	r24, 0x03	; 3
    23a0:	20 91 c1 02 	lds	r18, 0x02C1
    23a4:	2f 70       	andi	r18, 0x0F	; 15
    23a6:	3a e0       	ldi	r19, 0x0A	; 10
    23a8:	83 9f       	mul	r24, r19
    23aa:	c0 01       	movw	r24, r0
    23ac:	11 24       	eor	r1, r1
    23ae:	82 0f       	add	r24, r18
    23b0:	91 1d       	adc	r25, r1
    23b2:	48 97       	sbiw	r24, 0x18	; 24
    23b4:	0c f0       	brlt	.+2      	; 0x23b8 <RTC_updateTime+0x6a>
    23b6:	45 c0       	rjmp	.+138    	; 0x2442 <RTC_updateTime+0xf4>
	   goto TIME_ERROR;
	 
	 data = receiveByte();			   			  //receive minutes
    23b8:	0e 94 0b 15 	call	0x2a16	; 0x2a16 <receiveByte>
    23bc:	c8 2f       	mov	r28, r24
	 transmitByte(data);
    23be:	0e 94 10 15 	call	0x2a20	; 0x2a20 <transmitByte>
	if(data < 0x30 || data > 0x35)
    23c2:	80 ed       	ldi	r24, 0xD0	; 208
    23c4:	8c 0f       	add	r24, r28
    23c6:	86 30       	cpi	r24, 0x06	; 6
    23c8:	e0 f5       	brcc	.+120    	; 0x2442 <RTC_updateTime+0xf4>
	   goto TIME_ERROR;
	   
	time[3]= data; 
    23ca:	c0 93 c3 02 	sts	0x02C3, r28
	
	data = receiveByte();
    23ce:	0e 94 0b 15 	call	0x2a16	; 0x2a16 <receiveByte>
    23d2:	c8 2f       	mov	r28, r24
	transmitByte(data);
    23d4:	0e 94 10 15 	call	0x2a20	; 0x2a20 <transmitByte>
	if(data < 0x30 || data > 0x39)
    23d8:	80 ed       	ldi	r24, 0xD0	; 208
    23da:	8c 0f       	add	r24, r28
    23dc:	8a 30       	cpi	r24, 0x0A	; 10
    23de:	88 f5       	brcc	.+98     	; 0x2442 <RTC_updateTime+0xf4>
	   goto TIME_ERROR;
	   
	time[4]= data; 
    23e0:	c0 93 c4 02 	sts	0x02C4, r28
	
	transmitByte(':');
    23e4:	8a e3       	ldi	r24, 0x3A	; 58
    23e6:	0e 94 10 15 	call	0x2a20	; 0x2a20 <transmitByte>
	
	 data = receiveByte();			   			  //receive seconds
    23ea:	0e 94 0b 15 	call	0x2a16	; 0x2a16 <receiveByte>
    23ee:	c8 2f       	mov	r28, r24
	 transmitByte(data);
    23f0:	0e 94 10 15 	call	0x2a20	; 0x2a20 <transmitByte>
	if(data < 0x30 || data > 0x35)
    23f4:	80 ed       	ldi	r24, 0xD0	; 208
    23f6:	8c 0f       	add	r24, r28
    23f8:	86 30       	cpi	r24, 0x06	; 6
    23fa:	18 f5       	brcc	.+70     	; 0x2442 <RTC_updateTime+0xf4>
	   goto TIME_ERROR;
	   
	time[6]= data; 
    23fc:	c0 93 c6 02 	sts	0x02C6, r28
	
	data = receiveByte();
    2400:	0e 94 0b 15 	call	0x2a16	; 0x2a16 <receiveByte>
    2404:	c8 2f       	mov	r28, r24
	transmitByte(data);
    2406:	0e 94 10 15 	call	0x2a20	; 0x2a20 <transmitByte>
	if(data < 0x30 || data > 0x39)
    240a:	80 ed       	ldi	r24, 0xD0	; 208
    240c:	8c 0f       	add	r24, r28
    240e:	8a 30       	cpi	r24, 0x0A	; 10
    2410:	c0 f4       	brcc	.+48     	; 0x2442 <RTC_updateTime+0xf4>
	   goto TIME_ERROR;
	   
	time[7]= data; 
    2412:	c0 93 c7 02 	sts	0x02C7, r28
	
	 	  
  RTC_updateRegisters(); 
    2416:	0e 94 08 11 	call	0x2210	; 0x2210 <RTC_updateRegisters>
  data = RTC_writeTime();
    241a:	0e 94 5d 11 	call	0x22ba	; 0x22ba <RTC_writeTime>
    241e:	c8 2f       	mov	r28, r24

  TX_NEWLINE;
    2420:	8d e0       	ldi	r24, 0x0D	; 13
    2422:	0e 94 10 15 	call	0x2a20	; 0x2a20 <transmitByte>
    2426:	8a e0       	ldi	r24, 0x0A	; 10
    2428:	0e 94 10 15 	call	0x2a20	; 0x2a20 <transmitByte>
  if(data == 0)
    242c:	c1 11       	cpse	r28, r1
    242e:	06 c0       	rjmp	.+12     	; 0x243c <RTC_updateTime+0xee>
  {     
  	 transmitString_F(PSTR("Time Updated sucessfully!")); 
    2430:	81 e8       	ldi	r24, 0x81	; 129
    2432:	94 e0       	ldi	r25, 0x04	; 4
    2434:	0e 94 14 15 	call	0x2a28	; 0x2a28 <transmitString_F>
	 return 0;
    2438:	80 e0       	ldi	r24, 0x00	; 0
    243a:	0e c0       	rjmp	.+28     	; 0x2458 <RTC_updateTime+0x10a>
  }	
  else 
  { 
     transmitString_F(PSTR("Time Update Failed.."));
    243c:	8c e6       	ldi	r24, 0x6C	; 108
    243e:	94 e0       	ldi	r25, 0x04	; 4
    2440:	08 c0       	rjmp	.+16     	; 0x2452 <RTC_updateTime+0x104>
	 return 1;
  }
TIME_ERROR:

  TX_NEWLINE;
    2442:	8d e0       	ldi	r24, 0x0D	; 13
    2444:	0e 94 10 15 	call	0x2a20	; 0x2a20 <transmitByte>
    2448:	8a e0       	ldi	r24, 0x0A	; 10
    244a:	0e 94 10 15 	call	0x2a20	; 0x2a20 <transmitByte>
  transmitString_F(PSTR("Invalid Entry..")); 
    244e:	8c e5       	ldi	r24, 0x5C	; 92
    2450:	94 e0       	ldi	r25, 0x04	; 4
    2452:	0e 94 14 15 	call	0x2a28	; 0x2a28 <transmitString_F>
  return 1;
    2456:	81 e0       	ldi	r24, 0x01	; 1
}  
    2458:	cf 91       	pop	r28
    245a:	08 95       	ret

0000245c <RTC_updateDate>:
  
//******************************************************************
//Function to update RTC date by entering it at hyper terminal
//******************************************************************   
unsigned char RTC_updateDate(void)
{
    245c:	cf 93       	push	r28
    245e:	df 93       	push	r29
  unsigned char data;
  TX_NEWLINE;
    2460:	8d e0       	ldi	r24, 0x0D	; 13
    2462:	0e 94 10 15 	call	0x2a20	; 0x2a20 <transmitByte>
    2466:	8a e0       	ldi	r24, 0x0A	; 10
    2468:	0e 94 10 15 	call	0x2a20	; 0x2a20 <transmitByte>
  transmitString_F(PSTR("Enter Date (dd/mm/yy):")); 
    246c:	85 e4       	ldi	r24, 0x45	; 69
    246e:	94 e0       	ldi	r25, 0x04	; 4
    2470:	0e 94 14 15 	call	0x2a28	; 0x2a28 <transmitString_F>
  
    data = receiveByte(); 	   				  		//receive date
    2474:	0e 94 0b 15 	call	0x2a16	; 0x2a16 <receiveByte>
    2478:	c8 2f       	mov	r28, r24
	transmitByte(data); 	   	  	  				
    247a:	0e 94 10 15 	call	0x2a20	; 0x2a20 <transmitByte>
	if(data < 0x30 || data > 0x33)
    247e:	80 ed       	ldi	r24, 0xD0	; 208
    2480:	8c 0f       	add	r24, r28
    2482:	84 30       	cpi	r24, 0x04	; 4
    2484:	08 f0       	brcs	.+2      	; 0x2488 <RTC_updateDate+0x2c>
    2486:	95 c0       	rjmp	.+298    	; 0x25b2 <RTC_updateDate+0x156>
	   goto DATE_ERROR;
	   
	date[0]= data;
    2488:	c0 93 33 03 	sts	0x0333, r28
	 
	data = receiveByte();
    248c:	0e 94 0b 15 	call	0x2a16	; 0x2a16 <receiveByte>
    2490:	c8 2f       	mov	r28, r24
	transmitByte(data);
    2492:	0e 94 10 15 	call	0x2a20	; 0x2a20 <transmitByte>
	if(data < 0x30 || data > 0x39)
    2496:	80 ed       	ldi	r24, 0xD0	; 208
    2498:	8c 0f       	add	r24, r28
    249a:	8a 30       	cpi	r24, 0x0A	; 10
    249c:	08 f0       	brcs	.+2      	; 0x24a0 <RTC_updateDate+0x44>
    249e:	89 c0       	rjmp	.+274    	; 0x25b2 <RTC_updateDate+0x156>
	   goto DATE_ERROR;
	   
	date[1]= data;
    24a0:	c0 93 34 03 	sts	0x0334, r28
	
	if(((date[1] & 0x0f) + ((date[0] & 0x03)*10)) > 31)
    24a4:	20 91 33 03 	lds	r18, 0x0333
    24a8:	23 70       	andi	r18, 0x03	; 3
    24aa:	cf 70       	andi	r28, 0x0F	; 15
    24ac:	8a e0       	ldi	r24, 0x0A	; 10
    24ae:	28 9f       	mul	r18, r24
    24b0:	90 01       	movw	r18, r0
    24b2:	11 24       	eor	r1, r1
    24b4:	2c 0f       	add	r18, r28
    24b6:	31 1d       	adc	r19, r1
    24b8:	20 32       	cpi	r18, 0x20	; 32
    24ba:	31 05       	cpc	r19, r1
    24bc:	0c f0       	brlt	.+2      	; 0x24c0 <RTC_updateDate+0x64>
    24be:	79 c0       	rjmp	.+242    	; 0x25b2 <RTC_updateDate+0x156>
	   goto DATE_ERROR;
    transmitByte('/');
    24c0:	8f e2       	ldi	r24, 0x2F	; 47
    24c2:	0e 94 10 15 	call	0x2a20	; 0x2a20 <transmitByte>
	
	date[2] = '/';
    24c6:	df e2       	ldi	r29, 0x2F	; 47
    24c8:	d0 93 35 03 	sts	0x0335, r29
	   
	
	data = receiveByte();			   			  //receive month
    24cc:	0e 94 0b 15 	call	0x2a16	; 0x2a16 <receiveByte>
    24d0:	c8 2f       	mov	r28, r24
	transmitByte(data);
    24d2:	0e 94 10 15 	call	0x2a20	; 0x2a20 <transmitByte>
	if(data < 0x30 || data > 0x31)
    24d6:	80 ed       	ldi	r24, 0xD0	; 208
    24d8:	8c 0f       	add	r24, r28
    24da:	82 30       	cpi	r24, 0x02	; 2
    24dc:	08 f0       	brcs	.+2      	; 0x24e0 <RTC_updateDate+0x84>
    24de:	69 c0       	rjmp	.+210    	; 0x25b2 <RTC_updateDate+0x156>
	  goto DATE_ERROR;
	  
	date[3]= data; 
    24e0:	c0 93 36 03 	sts	0x0336, r28
	
	data = receiveByte();
    24e4:	0e 94 0b 15 	call	0x2a16	; 0x2a16 <receiveByte>
    24e8:	c8 2f       	mov	r28, r24
	transmitByte(data);
    24ea:	0e 94 10 15 	call	0x2a20	; 0x2a20 <transmitByte>
	if(data < 0x30 || data > 0x39)
    24ee:	80 ed       	ldi	r24, 0xD0	; 208
    24f0:	8c 0f       	add	r24, r28
    24f2:	8a 30       	cpi	r24, 0x0A	; 10
    24f4:	08 f0       	brcs	.+2      	; 0x24f8 <RTC_updateDate+0x9c>
    24f6:	5d c0       	rjmp	.+186    	; 0x25b2 <RTC_updateDate+0x156>
	  goto DATE_ERROR;
	  
	date[4] = data; 
    24f8:	c0 93 37 03 	sts	0x0337, r28
	
	if(((date[4] & 0x0f) + ((date[3] & 0x03)*10)) > 12)
    24fc:	20 91 36 03 	lds	r18, 0x0336
    2500:	23 70       	andi	r18, 0x03	; 3
    2502:	cf 70       	andi	r28, 0x0F	; 15
    2504:	8a e0       	ldi	r24, 0x0A	; 10
    2506:	28 9f       	mul	r18, r24
    2508:	90 01       	movw	r18, r0
    250a:	11 24       	eor	r1, r1
    250c:	2c 0f       	add	r18, r28
    250e:	31 1d       	adc	r19, r1
    2510:	2d 30       	cpi	r18, 0x0D	; 13
    2512:	31 05       	cpc	r19, r1
    2514:	0c f0       	brlt	.+2      	; 0x2518 <RTC_updateDate+0xbc>
    2516:	4d c0       	rjmp	.+154    	; 0x25b2 <RTC_updateDate+0x156>
	   goto DATE_ERROR;
	transmitByte('/');
    2518:	8f e2       	ldi	r24, 0x2F	; 47
    251a:	0e 94 10 15 	call	0x2a20	; 0x2a20 <transmitByte>
	   
	
	date[5] = '/';
    251e:	d0 93 38 03 	sts	0x0338, r29
	
	date[6] = '2'; 	   	   	  	  //year is 20xx
    2522:	82 e3       	ldi	r24, 0x32	; 50
    2524:	80 93 39 03 	sts	0x0339, r24
	date[7] = '0';
    2528:	80 e3       	ldi	r24, 0x30	; 48
    252a:	80 93 3a 03 	sts	0x033A, r24
	
	data = receiveByte();			   			 
    252e:	0e 94 0b 15 	call	0x2a16	; 0x2a16 <receiveByte>
    2532:	c8 2f       	mov	r28, r24
	transmitByte(data);
    2534:	0e 94 10 15 	call	0x2a20	; 0x2a20 <transmitByte>
	if(data < 0x30 || data > 0x39)
    2538:	80 ed       	ldi	r24, 0xD0	; 208
    253a:	8c 0f       	add	r24, r28
    253c:	8a 30       	cpi	r24, 0x0A	; 10
    253e:	c8 f5       	brcc	.+114    	; 0x25b2 <RTC_updateDate+0x156>
	   goto DATE_ERROR;
	   
	date[8]= data; 
    2540:	c0 93 3b 03 	sts	0x033B, r28
	
	data = receiveByte();
    2544:	0e 94 0b 15 	call	0x2a16	; 0x2a16 <receiveByte>
    2548:	c8 2f       	mov	r28, r24
	transmitByte(data);
    254a:	0e 94 10 15 	call	0x2a20	; 0x2a20 <transmitByte>
	if(data < 0x30 || data > 0x39)
    254e:	80 ed       	ldi	r24, 0xD0	; 208
    2550:	8c 0f       	add	r24, r28
    2552:	8a 30       	cpi	r24, 0x0A	; 10
    2554:	70 f5       	brcc	.+92     	; 0x25b2 <RTC_updateDate+0x156>
	   goto DATE_ERROR;
	   
	date[9]= data; 
    2556:	c0 93 3c 03 	sts	0x033C, r28
	
	TX_NEWLINE;
    255a:	8d e0       	ldi	r24, 0x0D	; 13
    255c:	0e 94 10 15 	call	0x2a20	; 0x2a20 <transmitByte>
    2560:	8a e0       	ldi	r24, 0x0A	; 10
    2562:	0e 94 10 15 	call	0x2a20	; 0x2a20 <transmitByte>
    transmitString_F(PSTR("Enter Day (Sunday:0, Monday:1...) (0-6):")); 
    2566:	8c e1       	ldi	r24, 0x1C	; 28
    2568:	94 e0       	ldi	r25, 0x04	; 4
    256a:	0e 94 14 15 	call	0x2a28	; 0x2a28 <transmitString_F>
	
	data = receiveByte();				   //receive Day of the week
    256e:	0e 94 0b 15 	call	0x2a16	; 0x2a16 <receiveByte>
    2572:	c8 2f       	mov	r28, r24
	transmitByte(data);
    2574:	0e 94 10 15 	call	0x2a20	; 0x2a20 <transmitByte>
	if(data < 0x30 || data > 0x36)
    2578:	80 ed       	ldi	r24, 0xD0	; 208
    257a:	8c 0f       	add	r24, r28
    257c:	87 30       	cpi	r24, 0x07	; 7
    257e:	c8 f4       	brcc	.+50     	; 0x25b2 <RTC_updateDate+0x156>
	   goto DATE_ERROR;
	   
	date[10] = data & 0x0f;
    2580:	cf 70       	andi	r28, 0x0F	; 15
    2582:	c0 93 3d 03 	sts	0x033D, r28
		 	  
  RTC_updateRegisters(); 
    2586:	0e 94 08 11 	call	0x2210	; 0x2210 <RTC_updateRegisters>
  data = RTC_writeDate();
    258a:	0e 94 82 11 	call	0x2304	; 0x2304 <RTC_writeDate>
    258e:	c8 2f       	mov	r28, r24

  TX_NEWLINE;
    2590:	8d e0       	ldi	r24, 0x0D	; 13
    2592:	0e 94 10 15 	call	0x2a20	; 0x2a20 <transmitByte>
    2596:	8a e0       	ldi	r24, 0x0A	; 10
    2598:	0e 94 10 15 	call	0x2a20	; 0x2a20 <transmitByte>
  if(data == 0)
    259c:	c1 11       	cpse	r28, r1
    259e:	06 c0       	rjmp	.+12     	; 0x25ac <RTC_updateDate+0x150>
  {
     
  	 transmitString_F(PSTR("Date Updated sucessfully!")); 
    25a0:	82 e0       	ldi	r24, 0x02	; 2
    25a2:	94 e0       	ldi	r25, 0x04	; 4
    25a4:	0e 94 14 15 	call	0x2a28	; 0x2a28 <transmitString_F>
	 return 0;
    25a8:	80 e0       	ldi	r24, 0x00	; 0
    25aa:	0e c0       	rjmp	.+28     	; 0x25c8 <RTC_updateDate+0x16c>
  }	  
  else
  {
     transmitString_F(PSTR("Date Update Failed.."));
    25ac:	8d ee       	ldi	r24, 0xED	; 237
    25ae:	93 e0       	ldi	r25, 0x03	; 3
    25b0:	08 c0       	rjmp	.+16     	; 0x25c2 <RTC_updateDate+0x166>
     return 1;
  }

  DATE_ERROR:

  TX_NEWLINE;
    25b2:	8d e0       	ldi	r24, 0x0D	; 13
    25b4:	0e 94 10 15 	call	0x2a20	; 0x2a20 <transmitByte>
    25b8:	8a e0       	ldi	r24, 0x0A	; 10
    25ba:	0e 94 10 15 	call	0x2a20	; 0x2a20 <transmitByte>
  transmitString_F(PSTR("Invalid Entry..")); 
    25be:	8d ed       	ldi	r24, 0xDD	; 221
    25c0:	93 e0       	ldi	r25, 0x03	; 3
    25c2:	0e 94 14 15 	call	0x2a28	; 0x2a28 <transmitString_F>
  return 1;
    25c6:	81 e0       	ldi	r24, 0x01	; 1
}  
    25c8:	df 91       	pop	r29
    25ca:	cf 91       	pop	r28
    25cc:	08 95       	ret

000025ce <getDateTime_FAT>:
{
  
   unsigned char mth, dt, hr, min, sec, error; 
   unsigned int yr;

   error = RTC_read();
    25ce:	0e 94 0b 10 	call	0x2016	; 0x2016 <RTC_read>
   if(error) return 1;
    25d2:	81 11       	cpse	r24, r1
    25d4:	61 c0       	rjmp	.+194    	; 0x2698 <getDateTime_FAT+0xca>

   yr = (YEAR & 0xf0) >> 4;
    25d6:	80 91 86 00 	lds	r24, 0x0086
    25da:	68 2f       	mov	r22, r24
    25dc:	62 95       	swap	r22
    25de:	6f 70       	andi	r22, 0x0F	; 15
   yr = (yr * 10)+(YEAR & 0x0f);
    25e0:	8f 70       	andi	r24, 0x0F	; 15
    25e2:	90 e0       	ldi	r25, 0x00	; 0
    25e4:	44 96       	adiw	r24, 0x14	; 20
   yr = yr+2000;
   yr = yr - 1980;

   dateFAT = yr;

   mth = (MONTH & 0xf0) >> 4;
    25e6:	30 91 85 00 	lds	r19, 0x0085
    25ea:	53 2f       	mov	r21, r19
    25ec:	52 95       	swap	r21
    25ee:	5f 70       	andi	r21, 0x0F	; 15
   mth = (mth * 10)+(MONTH & 0x0f);

   dateFAT = (dateFAT << 4) | mth;

   dt = (DATE & 0xf0) >> 4;
    25f0:	20 91 84 00 	lds	r18, 0x0084
    25f4:	42 2f       	mov	r20, r18
    25f6:	42 95       	swap	r20
    25f8:	4f 70       	andi	r20, 0x0F	; 15
   if(error) return 1;

   yr = (YEAR & 0xf0) >> 4;
   yr = (yr * 10)+(YEAR & 0x0f);
   yr = yr+2000;
   yr = yr - 1980;
    25fa:	7a e0       	ldi	r23, 0x0A	; 10
    25fc:	67 9f       	mul	r22, r23
    25fe:	80 0d       	add	r24, r0
    2600:	91 1d       	adc	r25, r1
    2602:	11 24       	eor	r1, r1
   dateFAT = yr;

   mth = (MONTH & 0xf0) >> 4;
   mth = (mth * 10)+(MONTH & 0x0f);

   dateFAT = (dateFAT << 4) | mth;
    2604:	64 e0       	ldi	r22, 0x04	; 4
    2606:	88 0f       	add	r24, r24
    2608:	99 1f       	adc	r25, r25
    260a:	6a 95       	dec	r22
    260c:	e1 f7       	brne	.-8      	; 0x2606 <getDateTime_FAT+0x38>
   yr = yr - 1980;

   dateFAT = yr;

   mth = (MONTH & 0xf0) >> 4;
   mth = (mth * 10)+(MONTH & 0x0f);
    260e:	3f 70       	andi	r19, 0x0F	; 15
    2610:	6a e0       	ldi	r22, 0x0A	; 10
    2612:	56 9f       	mul	r21, r22
    2614:	30 0d       	add	r19, r0
    2616:	11 24       	eor	r1, r1

   dateFAT = (dateFAT << 4) | mth;
    2618:	83 2b       	or	r24, r19

   dt = (DATE & 0xf0) >> 4;
   dt = (dt * 10)+(DATE & 0x0f);

   dateFAT = (dateFAT << 5) | dt;
    261a:	75 e0       	ldi	r23, 0x05	; 5
    261c:	88 0f       	add	r24, r24
    261e:	99 1f       	adc	r25, r25
    2620:	7a 95       	dec	r23
    2622:	e1 f7       	brne	.-8      	; 0x261c <getDateTime_FAT+0x4e>
   mth = (mth * 10)+(MONTH & 0x0f);

   dateFAT = (dateFAT << 4) | mth;

   dt = (DATE & 0xf0) >> 4;
   dt = (dt * 10)+(DATE & 0x0f);
    2624:	2f 70       	andi	r18, 0x0F	; 15
    2626:	7a e0       	ldi	r23, 0x0A	; 10
    2628:	47 9f       	mul	r20, r23
    262a:	20 0d       	add	r18, r0
    262c:	11 24       	eor	r1, r1

   dateFAT = (dateFAT << 5) | dt;
    262e:	82 2b       	or	r24, r18
    2630:	90 93 8c 00 	sts	0x008C, r25
    2634:	80 93 8b 00 	sts	0x008B, r24


   hr = (HOURS & 0xf0) >> 4;
    2638:	80 91 82 00 	lds	r24, 0x0082
    263c:	98 2f       	mov	r25, r24
    263e:	92 95       	swap	r25
    2640:	9f 70       	andi	r25, 0x0F	; 15
   hr = (hr * 10)+(HOURS & 0x0f);

   timeFAT = hr;

   min = (MINUTES & 0xf0) >> 4;
    2642:	30 91 81 00 	lds	r19, 0x0081
    2646:	43 2f       	mov	r20, r19
    2648:	42 95       	swap	r20
    264a:	4f 70       	andi	r20, 0x0F	; 15
   min = (min * 10)+(MINUTES & 0x0f);

   timeFAT = (timeFAT << 6) | min;

   sec = (SECONDS & 0xf0) >> 4;
    264c:	20 91 80 00 	lds	r18, 0x0080
    2650:	52 2f       	mov	r21, r18
    2652:	52 95       	swap	r21
    2654:	5f 70       	andi	r21, 0x0F	; 15
   sec = (sec * 10)+(SECONDS & 0x0f);
    2656:	2f 70       	andi	r18, 0x0F	; 15
    2658:	6a e0       	ldi	r22, 0x0A	; 10
    265a:	56 9f       	mul	r21, r22
    265c:	20 0d       	add	r18, r0
    265e:	11 24       	eor	r1, r1

   dateFAT = (dateFAT << 5) | dt;


   hr = (HOURS & 0xf0) >> 4;
   hr = (hr * 10)+(HOURS & 0x0f);
    2660:	8f 70       	andi	r24, 0x0F	; 15
    2662:	7a e0       	ldi	r23, 0x0A	; 10
    2664:	97 9f       	mul	r25, r23
    2666:	80 0d       	add	r24, r0
    2668:	11 24       	eor	r1, r1
   timeFAT = hr;

   min = (MINUTES & 0xf0) >> 4;
   min = (min * 10)+(MINUTES & 0x0f);

   timeFAT = (timeFAT << 6) | min;
    266a:	50 e4       	ldi	r21, 0x40	; 64
    266c:	85 9f       	mul	r24, r21
    266e:	c0 01       	movw	r24, r0
    2670:	11 24       	eor	r1, r1
   hr = (hr * 10)+(HOURS & 0x0f);

   timeFAT = hr;

   min = (MINUTES & 0xf0) >> 4;
   min = (min * 10)+(MINUTES & 0x0f);
    2672:	3f 70       	andi	r19, 0x0F	; 15
    2674:	6a e0       	ldi	r22, 0x0A	; 10
    2676:	46 9f       	mul	r20, r22
    2678:	30 0d       	add	r19, r0
    267a:	11 24       	eor	r1, r1

   timeFAT = (timeFAT << 6) | min;
    267c:	83 2b       	or	r24, r19

   sec = (SECONDS & 0xf0) >> 4;
   sec = (sec * 10)+(SECONDS & 0x0f);
   sec = sec / 2;    //FAT32 fromat accepts dates with 2sec resolution (e.g. value 5 => 10sec)

   timeFAT = (timeFAT << 5) | sec;
    267e:	e5 e0       	ldi	r30, 0x05	; 5
    2680:	88 0f       	add	r24, r24
    2682:	99 1f       	adc	r25, r25
    2684:	ea 95       	dec	r30
    2686:	e1 f7       	brne	.-8      	; 0x2680 <getDateTime_FAT+0xb2>

   timeFAT = (timeFAT << 6) | min;

   sec = (SECONDS & 0xf0) >> 4;
   sec = (sec * 10)+(SECONDS & 0x0f);
   sec = sec / 2;    //FAT32 fromat accepts dates with 2sec resolution (e.g. value 5 => 10sec)
    2688:	26 95       	lsr	r18

   timeFAT = (timeFAT << 5) | sec;
    268a:	82 2b       	or	r24, r18
    268c:	90 93 a7 00 	sts	0x00A7, r25
    2690:	80 93 a6 00 	sts	0x00A6, r24

   
   return 0;
    2694:	80 e0       	ldi	r24, 0x00	; 0
    2696:	08 95       	ret
  
   unsigned char mth, dt, hr, min, sec, error; 
   unsigned int yr;

   error = RTC_read();
   if(error) return 1;
    2698:	81 e0       	ldi	r24, 0x01	; 1

   timeFAT = (timeFAT << 5) | sec;

   
   return 0;
}
    269a:	08 95       	ret

0000269c <SD_sendCommand>:
    269c:	df 92       	push	r13
    269e:	ef 92       	push	r14
    26a0:	ff 92       	push	r15
    26a2:	0f 93       	push	r16
    26a4:	1f 93       	push	r17
    26a6:	d8 2e       	mov	r13, r24
    26a8:	7a 01       	movw	r14, r20
    26aa:	8b 01       	movw	r16, r22
    26ac:	80 91 b9 02 	lds	r24, 0x02B9
    26b0:	88 23       	and	r24, r24
    26b2:	b9 f4       	brne	.+46     	; 0x26e2 <SD_sendCommand+0x46>
    26b4:	8d 2d       	mov	r24, r13
    26b6:	81 51       	subi	r24, 0x11	; 17
    26b8:	82 30       	cpi	r24, 0x02	; 2
    26ba:	60 f0       	brcs	.+24     	; 0x26d4 <SD_sendCommand+0x38>
    26bc:	88 e1       	ldi	r24, 0x18	; 24
    26be:	d8 16       	cp	r13, r24
    26c0:	49 f0       	breq	.+18     	; 0x26d4 <SD_sendCommand+0x38>
    26c2:	89 e1       	ldi	r24, 0x19	; 25
    26c4:	d8 16       	cp	r13, r24
    26c6:	31 f0       	breq	.+12     	; 0x26d4 <SD_sendCommand+0x38>
    26c8:	80 e2       	ldi	r24, 0x20	; 32
    26ca:	d8 16       	cp	r13, r24
    26cc:	19 f0       	breq	.+6      	; 0x26d4 <SD_sendCommand+0x38>
    26ce:	81 e2       	ldi	r24, 0x21	; 33
    26d0:	d8 16       	cp	r13, r24
    26d2:	39 f4       	brne	.+14     	; 0x26e2 <SD_sendCommand+0x46>
    26d4:	39 e0       	ldi	r19, 0x09	; 9
    26d6:	ee 0c       	add	r14, r14
    26d8:	ff 1c       	adc	r15, r15
    26da:	00 1f       	adc	r16, r16
    26dc:	11 1f       	adc	r17, r17
    26de:	3a 95       	dec	r19
    26e0:	d1 f7       	brne	.-12     	; 0x26d6 <SD_sendCommand+0x3a>
    26e2:	c4 98       	cbi	0x18, 4	; 24
    26e4:	8d 2d       	mov	r24, r13
    26e6:	80 64       	ori	r24, 0x40	; 64
    26e8:	0e 94 f6 14 	call	0x29ec	; 0x29ec <SPI_transmit>
    26ec:	81 2f       	mov	r24, r17
    26ee:	99 27       	eor	r25, r25
    26f0:	aa 27       	eor	r26, r26
    26f2:	bb 27       	eor	r27, r27
    26f4:	0e 94 f6 14 	call	0x29ec	; 0x29ec <SPI_transmit>
    26f8:	c8 01       	movw	r24, r16
    26fa:	aa 27       	eor	r26, r26
    26fc:	bb 27       	eor	r27, r27
    26fe:	0e 94 f6 14 	call	0x29ec	; 0x29ec <SPI_transmit>
    2702:	bb 27       	eor	r27, r27
    2704:	a1 2f       	mov	r26, r17
    2706:	90 2f       	mov	r25, r16
    2708:	8f 2d       	mov	r24, r15
    270a:	0e 94 f6 14 	call	0x29ec	; 0x29ec <SPI_transmit>
    270e:	8e 2d       	mov	r24, r14
    2710:	0e 94 f6 14 	call	0x29ec	; 0x29ec <SPI_transmit>
    2714:	88 e0       	ldi	r24, 0x08	; 8
    2716:	d8 16       	cp	r13, r24
    2718:	11 f4       	brne	.+4      	; 0x271e <SD_sendCommand+0x82>
    271a:	87 e8       	ldi	r24, 0x87	; 135
    271c:	01 c0       	rjmp	.+2      	; 0x2720 <SD_sendCommand+0x84>
    271e:	85 e9       	ldi	r24, 0x95	; 149
    2720:	0e 94 f6 14 	call	0x29ec	; 0x29ec <SPI_transmit>
    2724:	10 e0       	ldi	r17, 0x00	; 0
    2726:	02 c0       	rjmp	.+4      	; 0x272c <SD_sendCommand+0x90>
    2728:	11 50       	subi	r17, 0x01	; 1
    272a:	d1 f0       	breq	.+52     	; 0x2760 <SD_sendCommand+0xc4>
    272c:	0e 94 fb 14 	call	0x29f6	; 0x29f6 <SPI_receive>
    2730:	08 2f       	mov	r16, r24
    2732:	8f 3f       	cpi	r24, 0xFF	; 255
    2734:	c9 f3       	breq	.-14     	; 0x2728 <SD_sendCommand+0x8c>
    2736:	88 23       	and	r24, r24
    2738:	99 f4       	brne	.+38     	; 0x2760 <SD_sendCommand+0xc4>
    273a:	8a e3       	ldi	r24, 0x3A	; 58
    273c:	d8 16       	cp	r13, r24
    273e:	81 f4       	brne	.+32     	; 0x2760 <SD_sendCommand+0xc4>
    2740:	0e 94 fb 14 	call	0x29f6	; 0x29f6 <SPI_receive>
    2744:	86 ff       	sbrs	r24, 6
    2746:	04 c0       	rjmp	.+8      	; 0x2750 <SD_sendCommand+0xb4>
    2748:	81 e0       	ldi	r24, 0x01	; 1
    274a:	80 93 b9 02 	sts	0x02B9, r24
    274e:	02 c0       	rjmp	.+4      	; 0x2754 <SD_sendCommand+0xb8>
    2750:	10 92 b9 02 	sts	0x02B9, r1
    2754:	0e 94 fb 14 	call	0x29f6	; 0x29f6 <SPI_receive>
    2758:	0e 94 fb 14 	call	0x29f6	; 0x29f6 <SPI_receive>
    275c:	0e 94 fb 14 	call	0x29f6	; 0x29f6 <SPI_receive>
    2760:	0e 94 fb 14 	call	0x29f6	; 0x29f6 <SPI_receive>
    2764:	c4 9a       	sbi	0x18, 4	; 24
    2766:	80 2f       	mov	r24, r16
    2768:	1f 91       	pop	r17
    276a:	0f 91       	pop	r16
    276c:	ff 90       	pop	r15
    276e:	ef 90       	pop	r14
    2770:	df 90       	pop	r13
    2772:	08 95       	ret

00002774 <SD_erase>:
    2774:	af 92       	push	r10
    2776:	bf 92       	push	r11
    2778:	cf 92       	push	r12
    277a:	df 92       	push	r13
    277c:	ef 92       	push	r14
    277e:	ff 92       	push	r15
    2780:	0f 93       	push	r16
    2782:	1f 93       	push	r17
    2784:	7b 01       	movw	r14, r22
    2786:	8c 01       	movw	r16, r24
    2788:	59 01       	movw	r10, r18
    278a:	6a 01       	movw	r12, r20
    278c:	80 e2       	ldi	r24, 0x20	; 32
    278e:	b8 01       	movw	r22, r16
    2790:	a7 01       	movw	r20, r14
    2792:	0e 94 4e 13 	call	0x269c	; 0x269c <SD_sendCommand>
    2796:	88 23       	and	r24, r24
    2798:	b9 f4       	brne	.+46     	; 0x27c8 <SD_erase+0x54>
    279a:	08 94       	sec
    279c:	e1 08       	sbc	r14, r1
    279e:	f1 08       	sbc	r15, r1
    27a0:	01 09       	sbc	r16, r1
    27a2:	11 09       	sbc	r17, r1
    27a4:	ea 0c       	add	r14, r10
    27a6:	fb 1c       	adc	r15, r11
    27a8:	0c 1d       	adc	r16, r12
    27aa:	1d 1d       	adc	r17, r13
    27ac:	81 e2       	ldi	r24, 0x21	; 33
    27ae:	b8 01       	movw	r22, r16
    27b0:	a7 01       	movw	r20, r14
    27b2:	0e 94 4e 13 	call	0x269c	; 0x269c <SD_sendCommand>
    27b6:	88 23       	and	r24, r24
    27b8:	39 f4       	brne	.+14     	; 0x27c8 <SD_erase+0x54>
    27ba:	86 e2       	ldi	r24, 0x26	; 38
    27bc:	40 e0       	ldi	r20, 0x00	; 0
    27be:	50 e0       	ldi	r21, 0x00	; 0
    27c0:	60 e0       	ldi	r22, 0x00	; 0
    27c2:	70 e0       	ldi	r23, 0x00	; 0
    27c4:	0e 94 4e 13 	call	0x269c	; 0x269c <SD_sendCommand>
    27c8:	1f 91       	pop	r17
    27ca:	0f 91       	pop	r16
    27cc:	ff 90       	pop	r15
    27ce:	ef 90       	pop	r14
    27d0:	df 90       	pop	r13
    27d2:	cf 90       	pop	r12
    27d4:	bf 90       	pop	r11
    27d6:	af 90       	pop	r10
    27d8:	08 95       	ret

000027da <SD_writeSingleBlock>:
    27da:	cf 93       	push	r28
    27dc:	df 93       	push	r29
    27de:	ab 01       	movw	r20, r22
    27e0:	bc 01       	movw	r22, r24
    27e2:	88 e1       	ldi	r24, 0x18	; 24
    27e4:	0e 94 4e 13 	call	0x269c	; 0x269c <SD_sendCommand>
    27e8:	88 23       	and	r24, r24
    27ea:	11 f0       	breq	.+4      	; 0x27f0 <SD_writeSingleBlock+0x16>
    27ec:	98 2f       	mov	r25, r24
    27ee:	3f c0       	rjmp	.+126    	; 0x286e <SD_writeSingleBlock+0x94>
    27f0:	c4 98       	cbi	0x18, 4	; 24
    27f2:	8e ef       	ldi	r24, 0xFE	; 254
    27f4:	0e 94 f6 14 	call	0x29ec	; 0x29ec <SPI_transmit>
    27f8:	c0 e0       	ldi	r28, 0x00	; 0
    27fa:	d0 e0       	ldi	r29, 0x00	; 0
    27fc:	fe 01       	movw	r30, r28
    27fe:	ed 54       	subi	r30, 0x4D	; 77
    2800:	ff 4f       	sbci	r31, 0xFF	; 255
    2802:	80 81       	ld	r24, Z
    2804:	0e 94 f6 14 	call	0x29ec	; 0x29ec <SPI_transmit>
    2808:	21 96       	adiw	r28, 0x01	; 1
    280a:	82 e0       	ldi	r24, 0x02	; 2
    280c:	c0 30       	cpi	r28, 0x00	; 0
    280e:	d8 07       	cpc	r29, r24
    2810:	a9 f7       	brne	.-22     	; 0x27fc <SD_writeSingleBlock+0x22>
    2812:	8f ef       	ldi	r24, 0xFF	; 255
    2814:	0e 94 f6 14 	call	0x29ec	; 0x29ec <SPI_transmit>
    2818:	8f ef       	ldi	r24, 0xFF	; 255
    281a:	0e 94 f6 14 	call	0x29ec	; 0x29ec <SPI_transmit>
    281e:	0e 94 fb 14 	call	0x29f6	; 0x29f6 <SPI_receive>
    2822:	98 2f       	mov	r25, r24
    2824:	8f 71       	andi	r24, 0x1F	; 31
    2826:	85 30       	cpi	r24, 0x05	; 5
    2828:	41 f0       	breq	.+16     	; 0x283a <SD_writeSingleBlock+0x60>
    282a:	c4 9a       	sbi	0x18, 4	; 24
    282c:	20 c0       	rjmp	.+64     	; 0x286e <SD_writeSingleBlock+0x94>
    282e:	8f ef       	ldi	r24, 0xFF	; 255
    2830:	cf 3f       	cpi	r28, 0xFF	; 255
    2832:	d8 07       	cpc	r29, r24
    2834:	91 f0       	breq	.+36     	; 0x285a <SD_writeSingleBlock+0x80>
    2836:	21 96       	adiw	r28, 0x01	; 1
    2838:	02 c0       	rjmp	.+4      	; 0x283e <SD_writeSingleBlock+0x64>
    283a:	c0 e0       	ldi	r28, 0x00	; 0
    283c:	d0 e0       	ldi	r29, 0x00	; 0
    283e:	0e 94 fb 14 	call	0x29f6	; 0x29f6 <SPI_receive>
    2842:	88 23       	and	r24, r24
    2844:	a1 f3       	breq	.-24     	; 0x282e <SD_writeSingleBlock+0x54>
    2846:	c4 9a       	sbi	0x18, 4	; 24
    2848:	8f ef       	ldi	r24, 0xFF	; 255
    284a:	0e 94 f6 14 	call	0x29ec	; 0x29ec <SPI_transmit>
    284e:	c4 98       	cbi	0x18, 4	; 24
    2850:	08 c0       	rjmp	.+16     	; 0x2862 <SD_writeSingleBlock+0x88>
    2852:	8f ef       	ldi	r24, 0xFF	; 255
    2854:	cf 3f       	cpi	r28, 0xFF	; 255
    2856:	d8 07       	cpc	r29, r24
    2858:	19 f4       	brne	.+6      	; 0x2860 <SD_writeSingleBlock+0x86>
    285a:	c4 9a       	sbi	0x18, 4	; 24
    285c:	91 e0       	ldi	r25, 0x01	; 1
    285e:	07 c0       	rjmp	.+14     	; 0x286e <SD_writeSingleBlock+0x94>
    2860:	21 96       	adiw	r28, 0x01	; 1
    2862:	0e 94 fb 14 	call	0x29f6	; 0x29f6 <SPI_receive>
    2866:	88 23       	and	r24, r24
    2868:	a1 f3       	breq	.-24     	; 0x2852 <SD_writeSingleBlock+0x78>
    286a:	c4 9a       	sbi	0x18, 4	; 24
    286c:	90 e0       	ldi	r25, 0x00	; 0
    286e:	89 2f       	mov	r24, r25
    2870:	df 91       	pop	r29
    2872:	cf 91       	pop	r28
    2874:	08 95       	ret

00002876 <SD_readSingleBlock>:
    2876:	1f 93       	push	r17
    2878:	cf 93       	push	r28
    287a:	df 93       	push	r29
    287c:	ab 01       	movw	r20, r22
    287e:	bc 01       	movw	r22, r24
    2880:	81 e1       	ldi	r24, 0x11	; 17
    2882:	0e 94 4e 13 	call	0x269c	; 0x269c <SD_sendCommand>
    2886:	18 2f       	mov	r17, r24
    2888:	88 23       	and	r24, r24
    288a:	09 f5       	brne	.+66     	; 0x28ce <SD_readSingleBlock+0x58>
    288c:	c4 98       	cbi	0x18, 4	; 24
    288e:	c0 e0       	ldi	r28, 0x00	; 0
    2890:	d0 e0       	ldi	r29, 0x00	; 0
    2892:	05 c0       	rjmp	.+10     	; 0x289e <SD_readSingleBlock+0x28>
    2894:	21 97       	sbiw	r28, 0x01	; 1
    2896:	19 f4       	brne	.+6      	; 0x289e <SD_readSingleBlock+0x28>
    2898:	c4 9a       	sbi	0x18, 4	; 24
    289a:	11 e0       	ldi	r17, 0x01	; 1
    289c:	18 c0       	rjmp	.+48     	; 0x28ce <SD_readSingleBlock+0x58>
    289e:	0e 94 fb 14 	call	0x29f6	; 0x29f6 <SPI_receive>
    28a2:	8e 3f       	cpi	r24, 0xFE	; 254
    28a4:	b9 f7       	brne	.-18     	; 0x2894 <SD_readSingleBlock+0x1e>
    28a6:	c0 e0       	ldi	r28, 0x00	; 0
    28a8:	d0 e0       	ldi	r29, 0x00	; 0
    28aa:	0e 94 fb 14 	call	0x29f6	; 0x29f6 <SPI_receive>
    28ae:	fe 01       	movw	r30, r28
    28b0:	ed 54       	subi	r30, 0x4D	; 77
    28b2:	ff 4f       	sbci	r31, 0xFF	; 255
    28b4:	80 83       	st	Z, r24
    28b6:	21 96       	adiw	r28, 0x01	; 1
    28b8:	82 e0       	ldi	r24, 0x02	; 2
    28ba:	c0 30       	cpi	r28, 0x00	; 0
    28bc:	d8 07       	cpc	r29, r24
    28be:	a9 f7       	brne	.-22     	; 0x28aa <SD_readSingleBlock+0x34>
    28c0:	0e 94 fb 14 	call	0x29f6	; 0x29f6 <SPI_receive>
    28c4:	0e 94 fb 14 	call	0x29f6	; 0x29f6 <SPI_receive>
    28c8:	0e 94 fb 14 	call	0x29f6	; 0x29f6 <SPI_receive>
    28cc:	c4 9a       	sbi	0x18, 4	; 24
    28ce:	81 2f       	mov	r24, r17
    28d0:	df 91       	pop	r29
    28d2:	cf 91       	pop	r28
    28d4:	1f 91       	pop	r17
    28d6:	08 95       	ret

000028d8 <SD_init>:
    28d8:	1f 93       	push	r17
    28da:	cf 93       	push	r28
    28dc:	df 93       	push	r29
    28de:	10 e0       	ldi	r17, 0x00	; 0
    28e0:	8f ef       	ldi	r24, 0xFF	; 255
    28e2:	0e 94 f6 14 	call	0x29ec	; 0x29ec <SPI_transmit>
    28e6:	1f 5f       	subi	r17, 0xFF	; 255
    28e8:	1a 30       	cpi	r17, 0x0A	; 10
    28ea:	d1 f7       	brne	.-12     	; 0x28e0 <SD_init+0x8>
    28ec:	c4 98       	cbi	0x18, 4	; 24
    28ee:	c0 e0       	ldi	r28, 0x00	; 0
    28f0:	d0 e0       	ldi	r29, 0x00	; 0
    28f2:	80 e0       	ldi	r24, 0x00	; 0
    28f4:	40 e0       	ldi	r20, 0x00	; 0
    28f6:	50 e0       	ldi	r21, 0x00	; 0
    28f8:	60 e0       	ldi	r22, 0x00	; 0
    28fa:	70 e0       	ldi	r23, 0x00	; 0
    28fc:	0e 94 4e 13 	call	0x269c	; 0x269c <SD_sendCommand>
    2900:	21 96       	adiw	r28, 0x01	; 1
    2902:	c1 32       	cpi	r28, 0x21	; 33
    2904:	d1 05       	cpc	r29, r1
    2906:	11 f4       	brne	.+4      	; 0x290c <SD_init+0x34>
    2908:	81 e0       	ldi	r24, 0x01	; 1
    290a:	68 c0       	rjmp	.+208    	; 0x29dc <SD_init+0x104>
    290c:	81 30       	cpi	r24, 0x01	; 1
    290e:	89 f7       	brne	.-30     	; 0x28f2 <SD_init+0x1a>
    2910:	c4 9a       	sbi	0x18, 4	; 24
    2912:	8f ef       	ldi	r24, 0xFF	; 255
    2914:	0e 94 f6 14 	call	0x29ec	; 0x29ec <SPI_transmit>
    2918:	8f ef       	ldi	r24, 0xFF	; 255
    291a:	0e 94 f6 14 	call	0x29ec	; 0x29ec <SPI_transmit>
    291e:	c0 e0       	ldi	r28, 0x00	; 0
    2920:	d0 e0       	ldi	r29, 0x00	; 0
    2922:	88 e0       	ldi	r24, 0x08	; 8
    2924:	4a ea       	ldi	r20, 0xAA	; 170
    2926:	51 e0       	ldi	r21, 0x01	; 1
    2928:	60 e0       	ldi	r22, 0x00	; 0
    292a:	70 e0       	ldi	r23, 0x00	; 0
    292c:	0e 94 4e 13 	call	0x269c	; 0x269c <SD_sendCommand>
    2930:	21 96       	adiw	r28, 0x01	; 1
    2932:	cf 3f       	cpi	r28, 0xFF	; 255
    2934:	d1 05       	cpc	r29, r1
    2936:	59 f4       	brne	.+22     	; 0x294e <SD_init+0x76>
    2938:	8d e0       	ldi	r24, 0x0D	; 13
    293a:	0e 94 10 15 	call	0x2a20	; 0x2a20 <transmitByte>
    293e:	8a e0       	ldi	r24, 0x0A	; 10
    2940:	0e 94 10 15 	call	0x2a20	; 0x2a20 <transmitByte>
    2944:	81 e0       	ldi	r24, 0x01	; 1
    2946:	80 93 31 03 	sts	0x0331, r24
    294a:	11 e0       	ldi	r17, 0x01	; 1
    294c:	03 c0       	rjmp	.+6      	; 0x2954 <SD_init+0x7c>
    294e:	81 30       	cpi	r24, 0x01	; 1
    2950:	41 f7       	brne	.-48     	; 0x2922 <SD_init+0x4a>
    2952:	12 e0       	ldi	r17, 0x02	; 2
    2954:	c0 e0       	ldi	r28, 0x00	; 0
    2956:	d0 e0       	ldi	r29, 0x00	; 0
    2958:	87 e3       	ldi	r24, 0x37	; 55
    295a:	40 e0       	ldi	r20, 0x00	; 0
    295c:	50 e0       	ldi	r21, 0x00	; 0
    295e:	60 e0       	ldi	r22, 0x00	; 0
    2960:	70 e0       	ldi	r23, 0x00	; 0
    2962:	0e 94 4e 13 	call	0x269c	; 0x269c <SD_sendCommand>
    2966:	89 e2       	ldi	r24, 0x29	; 41
    2968:	40 e0       	ldi	r20, 0x00	; 0
    296a:	50 e0       	ldi	r21, 0x00	; 0
    296c:	60 e0       	ldi	r22, 0x00	; 0
    296e:	70 e4       	ldi	r23, 0x40	; 64
    2970:	0e 94 4e 13 	call	0x269c	; 0x269c <SD_sendCommand>
    2974:	21 96       	adiw	r28, 0x01	; 1
    2976:	cf 3f       	cpi	r28, 0xFF	; 255
    2978:	d1 05       	cpc	r29, r1
    297a:	41 f4       	brne	.+16     	; 0x298c <SD_init+0xb4>
    297c:	8d e0       	ldi	r24, 0x0D	; 13
    297e:	0e 94 10 15 	call	0x2a20	; 0x2a20 <transmitByte>
    2982:	8a e0       	ldi	r24, 0x0A	; 10
    2984:	0e 94 10 15 	call	0x2a20	; 0x2a20 <transmitByte>
    2988:	82 e0       	ldi	r24, 0x02	; 2
    298a:	28 c0       	rjmp	.+80     	; 0x29dc <SD_init+0x104>
    298c:	88 23       	and	r24, r24
    298e:	21 f7       	brne	.-56     	; 0x2958 <SD_init+0x80>
    2990:	10 92 b9 02 	sts	0x02B9, r1
    2994:	12 30       	cpi	r17, 0x02	; 2
    2996:	11 f5       	brne	.+68     	; 0x29dc <SD_init+0x104>
    2998:	c0 e0       	ldi	r28, 0x00	; 0
    299a:	d0 e0       	ldi	r29, 0x00	; 0
    299c:	8a e3       	ldi	r24, 0x3A	; 58
    299e:	40 e0       	ldi	r20, 0x00	; 0
    29a0:	50 e0       	ldi	r21, 0x00	; 0
    29a2:	60 e0       	ldi	r22, 0x00	; 0
    29a4:	70 e0       	ldi	r23, 0x00	; 0
    29a6:	0e 94 4e 13 	call	0x269c	; 0x269c <SD_sendCommand>
    29aa:	21 96       	adiw	r28, 0x01	; 1
    29ac:	cf 3f       	cpi	r28, 0xFF	; 255
    29ae:	d1 05       	cpc	r29, r1
    29b0:	49 f4       	brne	.+18     	; 0x29c4 <SD_init+0xec>
    29b2:	8d e0       	ldi	r24, 0x0D	; 13
    29b4:	0e 94 10 15 	call	0x2a20	; 0x2a20 <transmitByte>
    29b8:	8a e0       	ldi	r24, 0x0A	; 10
    29ba:	0e 94 10 15 	call	0x2a20	; 0x2a20 <transmitByte>
    29be:	10 92 31 03 	sts	0x0331, r1
    29c2:	02 c0       	rjmp	.+4      	; 0x29c8 <SD_init+0xf0>
    29c4:	88 23       	and	r24, r24
    29c6:	51 f7       	brne	.-44     	; 0x299c <SD_init+0xc4>
    29c8:	80 91 b9 02 	lds	r24, 0x02B9
    29cc:	81 30       	cpi	r24, 0x01	; 1
    29ce:	11 f4       	brne	.+4      	; 0x29d4 <SD_init+0xfc>
    29d0:	82 e0       	ldi	r24, 0x02	; 2
    29d2:	01 c0       	rjmp	.+2      	; 0x29d6 <SD_init+0xfe>
    29d4:	83 e0       	ldi	r24, 0x03	; 3
    29d6:	80 93 31 03 	sts	0x0331, r24
    29da:	80 e0       	ldi	r24, 0x00	; 0
    29dc:	df 91       	pop	r29
    29de:	cf 91       	pop	r28
    29e0:	1f 91       	pop	r17
    29e2:	08 95       	ret

000029e4 <spi_init>:
    29e4:	82 e5       	ldi	r24, 0x52	; 82
    29e6:	8d b9       	out	0x0d, r24	; 13
    29e8:	1e b8       	out	0x0e, r1	; 14
    29ea:	08 95       	ret

000029ec <SPI_transmit>:
    29ec:	8f b9       	out	0x0f, r24	; 15
    29ee:	77 9b       	sbis	0x0e, 7	; 14
    29f0:	fe cf       	rjmp	.-4      	; 0x29ee <SPI_transmit+0x2>
    29f2:	8f b1       	in	r24, 0x0f	; 15
    29f4:	08 95       	ret

000029f6 <SPI_receive>:
    29f6:	8f ef       	ldi	r24, 0xFF	; 255
    29f8:	8f b9       	out	0x0f, r24	; 15
    29fa:	77 9b       	sbis	0x0e, 7	; 14
    29fc:	fe cf       	rjmp	.-4      	; 0x29fa <SPI_receive+0x4>
    29fe:	8f b1       	in	r24, 0x0f	; 15
    2a00:	08 95       	ret

00002a02 <uart0_init>:
    2a02:	1a b8       	out	0x0a, r1	; 10
    2a04:	1b b8       	out	0x0b, r1	; 11
    2a06:	86 e8       	ldi	r24, 0x86	; 134
    2a08:	80 bd       	out	0x20, r24	; 32
    2a0a:	89 e1       	ldi	r24, 0x19	; 25
    2a0c:	89 b9       	out	0x09, r24	; 9
    2a0e:	10 bc       	out	0x20, r1	; 32
    2a10:	88 e1       	ldi	r24, 0x18	; 24
    2a12:	8a b9       	out	0x0a, r24	; 10
    2a14:	08 95       	ret

00002a16 <receiveByte>:
    2a16:	5f 9b       	sbis	0x0b, 7	; 11
    2a18:	fe cf       	rjmp	.-4      	; 0x2a16 <receiveByte>
    2a1a:	8b b1       	in	r24, 0x0b	; 11
    2a1c:	8c b1       	in	r24, 0x0c	; 12
    2a1e:	08 95       	ret

00002a20 <transmitByte>:
    2a20:	5d 9b       	sbis	0x0b, 5	; 11
    2a22:	fe cf       	rjmp	.-4      	; 0x2a20 <transmitByte>
    2a24:	8c b9       	out	0x0c, r24	; 12
    2a26:	08 95       	ret

00002a28 <transmitString_F>:
    2a28:	fc 01       	movw	r30, r24
    2a2a:	04 c0       	rjmp	.+8      	; 0x2a34 <transmitString_F+0xc>
    2a2c:	5d 9b       	sbis	0x0b, 5	; 11
    2a2e:	fe cf       	rjmp	.-4      	; 0x2a2c <transmitString_F+0x4>
    2a30:	31 96       	adiw	r30, 0x01	; 1
    2a32:	8c b9       	out	0x0c, r24	; 12
    2a34:	84 91       	lpm	r24, Z
    2a36:	88 23       	and	r24, r24
    2a38:	c9 f7       	brne	.-14     	; 0x2a2c <transmitString_F+0x4>
    2a3a:	08 95       	ret

00002a3c <transmitString>:
    2a3c:	fc 01       	movw	r30, r24
    2a3e:	04 c0       	rjmp	.+8      	; 0x2a48 <transmitString+0xc>
    2a40:	5d 9b       	sbis	0x0b, 5	; 11
    2a42:	fe cf       	rjmp	.-4      	; 0x2a40 <transmitString+0x4>
    2a44:	31 96       	adiw	r30, 0x01	; 1
    2a46:	8c b9       	out	0x0c, r24	; 12
    2a48:	80 81       	ld	r24, Z
    2a4a:	88 23       	and	r24, r24
    2a4c:	c9 f7       	brne	.-14     	; 0x2a40 <transmitString+0x4>
    2a4e:	08 95       	ret

00002a50 <transmitHex>:
    2a50:	df 93       	push	r29
    2a52:	cf 93       	push	r28
    2a54:	cd b7       	in	r28, 0x3d	; 61
    2a56:	de b7       	in	r29, 0x3e	; 62
    2a58:	2b 97       	sbiw	r28, 0x0b	; 11
    2a5a:	0f b6       	in	r0, 0x3f	; 63
    2a5c:	f8 94       	cli
    2a5e:	de bf       	out	0x3e, r29	; 62
    2a60:	0f be       	out	0x3f, r0	; 63
    2a62:	cd bf       	out	0x3d, r28	; 61
    2a64:	81 30       	cpi	r24, 0x01	; 1
    2a66:	11 f4       	brne	.+4      	; 0x2a6c <transmitHex+0x1c>
    2a68:	94 e0       	ldi	r25, 0x04	; 4
    2a6a:	05 c0       	rjmp	.+10     	; 0x2a76 <transmitHex+0x26>
    2a6c:	82 30       	cpi	r24, 0x02	; 2
    2a6e:	11 f4       	brne	.+4      	; 0x2a74 <transmitHex+0x24>
    2a70:	98 e0       	ldi	r25, 0x08	; 8
    2a72:	01 c0       	rjmp	.+2      	; 0x2a76 <transmitHex+0x26>
    2a74:	92 e0       	ldi	r25, 0x02	; 2
    2a76:	de 01       	movw	r26, r28
    2a78:	11 96       	adiw	r26, 0x01	; 1
    2a7a:	e4 e7       	ldi	r30, 0x74	; 116
    2a7c:	f0 e0       	ldi	r31, 0x00	; 0
    2a7e:	8b e0       	ldi	r24, 0x0B	; 11
    2a80:	01 90       	ld	r0, Z+
    2a82:	0d 92       	st	X+, r0
    2a84:	81 50       	subi	r24, 0x01	; 1
    2a86:	e1 f7       	brne	.-8      	; 0x2a80 <transmitHex+0x30>
    2a88:	9e 01       	movw	r18, r28
    2a8a:	2e 5f       	subi	r18, 0xFE	; 254
    2a8c:	3f 4f       	sbci	r19, 0xFF	; 255
    2a8e:	84 2f       	mov	r24, r20
    2a90:	8f 70       	andi	r24, 0x0F	; 15
    2a92:	e9 2f       	mov	r30, r25
    2a94:	f0 e0       	ldi	r31, 0x00	; 0
    2a96:	8a 30       	cpi	r24, 0x0A	; 10
    2a98:	20 f4       	brcc	.+8      	; 0x2aa2 <transmitHex+0x52>
    2a9a:	e2 0f       	add	r30, r18
    2a9c:	f3 1f       	adc	r31, r19
    2a9e:	80 5d       	subi	r24, 0xD0	; 208
    2aa0:	03 c0       	rjmp	.+6      	; 0x2aa8 <transmitHex+0x58>
    2aa2:	e2 0f       	add	r30, r18
    2aa4:	f3 1f       	adc	r31, r19
    2aa6:	89 5c       	subi	r24, 0xC9	; 201
    2aa8:	80 83       	st	Z, r24
    2aaa:	91 50       	subi	r25, 0x01	; 1
    2aac:	41 f0       	breq	.+16     	; 0x2abe <transmitHex+0x6e>
    2aae:	84 e0       	ldi	r24, 0x04	; 4
    2ab0:	76 95       	lsr	r23
    2ab2:	67 95       	ror	r22
    2ab4:	57 95       	ror	r21
    2ab6:	47 95       	ror	r20
    2ab8:	8a 95       	dec	r24
    2aba:	d1 f7       	brne	.-12     	; 0x2ab0 <transmitHex+0x60>
    2abc:	e8 cf       	rjmp	.-48     	; 0x2a8e <transmitHex+0x3e>
    2abe:	ce 01       	movw	r24, r28
    2ac0:	01 96       	adiw	r24, 0x01	; 1
    2ac2:	0e 94 1e 15 	call	0x2a3c	; 0x2a3c <transmitString>
    2ac6:	2b 96       	adiw	r28, 0x0b	; 11
    2ac8:	0f b6       	in	r0, 0x3f	; 63
    2aca:	f8 94       	cli
    2acc:	de bf       	out	0x3e, r29	; 62
    2ace:	0f be       	out	0x3f, r0	; 63
    2ad0:	cd bf       	out	0x3d, r28	; 61
    2ad2:	cf 91       	pop	r28
    2ad4:	df 91       	pop	r29
    2ad6:	08 95       	ret

00002ad8 <__fixunssfsi>:
    2ad8:	70 d0       	rcall	.+224    	; 0x2bba <__fp_splitA>
    2ada:	88 f0       	brcs	.+34     	; 0x2afe <__fixunssfsi+0x26>
    2adc:	9f 57       	subi	r25, 0x7F	; 127
    2ade:	90 f0       	brcs	.+36     	; 0x2b04 <__fixunssfsi+0x2c>
    2ae0:	b9 2f       	mov	r27, r25
    2ae2:	99 27       	eor	r25, r25
    2ae4:	b7 51       	subi	r27, 0x17	; 23
    2ae6:	a0 f0       	brcs	.+40     	; 0x2b10 <__fixunssfsi+0x38>
    2ae8:	d1 f0       	breq	.+52     	; 0x2b1e <__fixunssfsi+0x46>
    2aea:	66 0f       	add	r22, r22
    2aec:	77 1f       	adc	r23, r23
    2aee:	88 1f       	adc	r24, r24
    2af0:	99 1f       	adc	r25, r25
    2af2:	1a f0       	brmi	.+6      	; 0x2afa <__fixunssfsi+0x22>
    2af4:	ba 95       	dec	r27
    2af6:	c9 f7       	brne	.-14     	; 0x2aea <__fixunssfsi+0x12>
    2af8:	12 c0       	rjmp	.+36     	; 0x2b1e <__fixunssfsi+0x46>
    2afa:	b1 30       	cpi	r27, 0x01	; 1
    2afc:	81 f0       	breq	.+32     	; 0x2b1e <__fixunssfsi+0x46>
    2afe:	77 d0       	rcall	.+238    	; 0x2bee <__fp_zero>
    2b00:	b1 e0       	ldi	r27, 0x01	; 1
    2b02:	08 95       	ret
    2b04:	74 c0       	rjmp	.+232    	; 0x2bee <__fp_zero>
    2b06:	67 2f       	mov	r22, r23
    2b08:	78 2f       	mov	r23, r24
    2b0a:	88 27       	eor	r24, r24
    2b0c:	b8 5f       	subi	r27, 0xF8	; 248
    2b0e:	39 f0       	breq	.+14     	; 0x2b1e <__fixunssfsi+0x46>
    2b10:	b9 3f       	cpi	r27, 0xF9	; 249
    2b12:	cc f3       	brlt	.-14     	; 0x2b06 <__fixunssfsi+0x2e>
    2b14:	86 95       	lsr	r24
    2b16:	77 95       	ror	r23
    2b18:	67 95       	ror	r22
    2b1a:	b3 95       	inc	r27
    2b1c:	d9 f7       	brne	.-10     	; 0x2b14 <__fixunssfsi+0x3c>
    2b1e:	3e f4       	brtc	.+14     	; 0x2b2e <__fixunssfsi+0x56>
    2b20:	90 95       	com	r25
    2b22:	80 95       	com	r24
    2b24:	70 95       	com	r23
    2b26:	61 95       	neg	r22
    2b28:	7f 4f       	sbci	r23, 0xFF	; 255
    2b2a:	8f 4f       	sbci	r24, 0xFF	; 255
    2b2c:	9f 4f       	sbci	r25, 0xFF	; 255
    2b2e:	08 95       	ret

00002b30 <__floatunsisf>:
    2b30:	e8 94       	clt
    2b32:	09 c0       	rjmp	.+18     	; 0x2b46 <__floatsisf+0x12>

00002b34 <__floatsisf>:
    2b34:	97 fb       	bst	r25, 7
    2b36:	3e f4       	brtc	.+14     	; 0x2b46 <__floatsisf+0x12>
    2b38:	90 95       	com	r25
    2b3a:	80 95       	com	r24
    2b3c:	70 95       	com	r23
    2b3e:	61 95       	neg	r22
    2b40:	7f 4f       	sbci	r23, 0xFF	; 255
    2b42:	8f 4f       	sbci	r24, 0xFF	; 255
    2b44:	9f 4f       	sbci	r25, 0xFF	; 255
    2b46:	99 23       	and	r25, r25
    2b48:	a9 f0       	breq	.+42     	; 0x2b74 <__floatsisf+0x40>
    2b4a:	f9 2f       	mov	r31, r25
    2b4c:	96 e9       	ldi	r25, 0x96	; 150
    2b4e:	bb 27       	eor	r27, r27
    2b50:	93 95       	inc	r25
    2b52:	f6 95       	lsr	r31
    2b54:	87 95       	ror	r24
    2b56:	77 95       	ror	r23
    2b58:	67 95       	ror	r22
    2b5a:	b7 95       	ror	r27
    2b5c:	f1 11       	cpse	r31, r1
    2b5e:	f8 cf       	rjmp	.-16     	; 0x2b50 <__floatsisf+0x1c>
    2b60:	fa f4       	brpl	.+62     	; 0x2ba0 <__floatsisf+0x6c>
    2b62:	bb 0f       	add	r27, r27
    2b64:	11 f4       	brne	.+4      	; 0x2b6a <__floatsisf+0x36>
    2b66:	60 ff       	sbrs	r22, 0
    2b68:	1b c0       	rjmp	.+54     	; 0x2ba0 <__floatsisf+0x6c>
    2b6a:	6f 5f       	subi	r22, 0xFF	; 255
    2b6c:	7f 4f       	sbci	r23, 0xFF	; 255
    2b6e:	8f 4f       	sbci	r24, 0xFF	; 255
    2b70:	9f 4f       	sbci	r25, 0xFF	; 255
    2b72:	16 c0       	rjmp	.+44     	; 0x2ba0 <__floatsisf+0x6c>
    2b74:	88 23       	and	r24, r24
    2b76:	11 f0       	breq	.+4      	; 0x2b7c <__floatsisf+0x48>
    2b78:	96 e9       	ldi	r25, 0x96	; 150
    2b7a:	11 c0       	rjmp	.+34     	; 0x2b9e <__floatsisf+0x6a>
    2b7c:	77 23       	and	r23, r23
    2b7e:	21 f0       	breq	.+8      	; 0x2b88 <__floatsisf+0x54>
    2b80:	9e e8       	ldi	r25, 0x8E	; 142
    2b82:	87 2f       	mov	r24, r23
    2b84:	76 2f       	mov	r23, r22
    2b86:	05 c0       	rjmp	.+10     	; 0x2b92 <__floatsisf+0x5e>
    2b88:	66 23       	and	r22, r22
    2b8a:	71 f0       	breq	.+28     	; 0x2ba8 <__floatsisf+0x74>
    2b8c:	96 e8       	ldi	r25, 0x86	; 134
    2b8e:	86 2f       	mov	r24, r22
    2b90:	70 e0       	ldi	r23, 0x00	; 0
    2b92:	60 e0       	ldi	r22, 0x00	; 0
    2b94:	2a f0       	brmi	.+10     	; 0x2ba0 <__floatsisf+0x6c>
    2b96:	9a 95       	dec	r25
    2b98:	66 0f       	add	r22, r22
    2b9a:	77 1f       	adc	r23, r23
    2b9c:	88 1f       	adc	r24, r24
    2b9e:	da f7       	brpl	.-10     	; 0x2b96 <__floatsisf+0x62>
    2ba0:	88 0f       	add	r24, r24
    2ba2:	96 95       	lsr	r25
    2ba4:	87 95       	ror	r24
    2ba6:	97 f9       	bld	r25, 7
    2ba8:	08 95       	ret

00002baa <__fp_split3>:
    2baa:	57 fd       	sbrc	r21, 7
    2bac:	90 58       	subi	r25, 0x80	; 128
    2bae:	44 0f       	add	r20, r20
    2bb0:	55 1f       	adc	r21, r21
    2bb2:	59 f0       	breq	.+22     	; 0x2bca <__fp_splitA+0x10>
    2bb4:	5f 3f       	cpi	r21, 0xFF	; 255
    2bb6:	71 f0       	breq	.+28     	; 0x2bd4 <__fp_splitA+0x1a>
    2bb8:	47 95       	ror	r20

00002bba <__fp_splitA>:
    2bba:	88 0f       	add	r24, r24
    2bbc:	97 fb       	bst	r25, 7
    2bbe:	99 1f       	adc	r25, r25
    2bc0:	61 f0       	breq	.+24     	; 0x2bda <__fp_splitA+0x20>
    2bc2:	9f 3f       	cpi	r25, 0xFF	; 255
    2bc4:	79 f0       	breq	.+30     	; 0x2be4 <__fp_splitA+0x2a>
    2bc6:	87 95       	ror	r24
    2bc8:	08 95       	ret
    2bca:	12 16       	cp	r1, r18
    2bcc:	13 06       	cpc	r1, r19
    2bce:	14 06       	cpc	r1, r20
    2bd0:	55 1f       	adc	r21, r21
    2bd2:	f2 cf       	rjmp	.-28     	; 0x2bb8 <__fp_split3+0xe>
    2bd4:	46 95       	lsr	r20
    2bd6:	f1 df       	rcall	.-30     	; 0x2bba <__fp_splitA>
    2bd8:	08 c0       	rjmp	.+16     	; 0x2bea <__fp_splitA+0x30>
    2bda:	16 16       	cp	r1, r22
    2bdc:	17 06       	cpc	r1, r23
    2bde:	18 06       	cpc	r1, r24
    2be0:	99 1f       	adc	r25, r25
    2be2:	f1 cf       	rjmp	.-30     	; 0x2bc6 <__fp_splitA+0xc>
    2be4:	86 95       	lsr	r24
    2be6:	71 05       	cpc	r23, r1
    2be8:	61 05       	cpc	r22, r1
    2bea:	08 94       	sec
    2bec:	08 95       	ret

00002bee <__fp_zero>:
    2bee:	e8 94       	clt

00002bf0 <__fp_szero>:
    2bf0:	bb 27       	eor	r27, r27
    2bf2:	66 27       	eor	r22, r22
    2bf4:	77 27       	eor	r23, r23
    2bf6:	cb 01       	movw	r24, r22
    2bf8:	97 f9       	bld	r25, 7
    2bfa:	08 95       	ret

00002bfc <__mulsf3>:
    2bfc:	0b d0       	rcall	.+22     	; 0x2c14 <__mulsf3x>
    2bfe:	78 c0       	rjmp	.+240    	; 0x2cf0 <__fp_round>
    2c00:	69 d0       	rcall	.+210    	; 0x2cd4 <__fp_pscA>
    2c02:	28 f0       	brcs	.+10     	; 0x2c0e <__mulsf3+0x12>
    2c04:	6e d0       	rcall	.+220    	; 0x2ce2 <__fp_pscB>
    2c06:	18 f0       	brcs	.+6      	; 0x2c0e <__mulsf3+0x12>
    2c08:	95 23       	and	r25, r21
    2c0a:	09 f0       	breq	.+2      	; 0x2c0e <__mulsf3+0x12>
    2c0c:	5a c0       	rjmp	.+180    	; 0x2cc2 <__fp_inf>
    2c0e:	5f c0       	rjmp	.+190    	; 0x2cce <__fp_nan>
    2c10:	11 24       	eor	r1, r1
    2c12:	ee cf       	rjmp	.-36     	; 0x2bf0 <__fp_szero>

00002c14 <__mulsf3x>:
    2c14:	ca df       	rcall	.-108    	; 0x2baa <__fp_split3>
    2c16:	a0 f3       	brcs	.-24     	; 0x2c00 <__mulsf3+0x4>

00002c18 <__mulsf3_pse>:
    2c18:	95 9f       	mul	r25, r21
    2c1a:	d1 f3       	breq	.-12     	; 0x2c10 <__mulsf3+0x14>
    2c1c:	95 0f       	add	r25, r21
    2c1e:	50 e0       	ldi	r21, 0x00	; 0
    2c20:	55 1f       	adc	r21, r21
    2c22:	62 9f       	mul	r22, r18
    2c24:	f0 01       	movw	r30, r0
    2c26:	72 9f       	mul	r23, r18
    2c28:	bb 27       	eor	r27, r27
    2c2a:	f0 0d       	add	r31, r0
    2c2c:	b1 1d       	adc	r27, r1
    2c2e:	63 9f       	mul	r22, r19
    2c30:	aa 27       	eor	r26, r26
    2c32:	f0 0d       	add	r31, r0
    2c34:	b1 1d       	adc	r27, r1
    2c36:	aa 1f       	adc	r26, r26
    2c38:	64 9f       	mul	r22, r20
    2c3a:	66 27       	eor	r22, r22
    2c3c:	b0 0d       	add	r27, r0
    2c3e:	a1 1d       	adc	r26, r1
    2c40:	66 1f       	adc	r22, r22
    2c42:	82 9f       	mul	r24, r18
    2c44:	22 27       	eor	r18, r18
    2c46:	b0 0d       	add	r27, r0
    2c48:	a1 1d       	adc	r26, r1
    2c4a:	62 1f       	adc	r22, r18
    2c4c:	73 9f       	mul	r23, r19
    2c4e:	b0 0d       	add	r27, r0
    2c50:	a1 1d       	adc	r26, r1
    2c52:	62 1f       	adc	r22, r18
    2c54:	83 9f       	mul	r24, r19
    2c56:	a0 0d       	add	r26, r0
    2c58:	61 1d       	adc	r22, r1
    2c5a:	22 1f       	adc	r18, r18
    2c5c:	74 9f       	mul	r23, r20
    2c5e:	33 27       	eor	r19, r19
    2c60:	a0 0d       	add	r26, r0
    2c62:	61 1d       	adc	r22, r1
    2c64:	23 1f       	adc	r18, r19
    2c66:	84 9f       	mul	r24, r20
    2c68:	60 0d       	add	r22, r0
    2c6a:	21 1d       	adc	r18, r1
    2c6c:	82 2f       	mov	r24, r18
    2c6e:	76 2f       	mov	r23, r22
    2c70:	6a 2f       	mov	r22, r26
    2c72:	11 24       	eor	r1, r1
    2c74:	9f 57       	subi	r25, 0x7F	; 127
    2c76:	50 40       	sbci	r21, 0x00	; 0
    2c78:	8a f0       	brmi	.+34     	; 0x2c9c <__mulsf3_pse+0x84>
    2c7a:	e1 f0       	breq	.+56     	; 0x2cb4 <__mulsf3_pse+0x9c>
    2c7c:	88 23       	and	r24, r24
    2c7e:	4a f0       	brmi	.+18     	; 0x2c92 <__mulsf3_pse+0x7a>
    2c80:	ee 0f       	add	r30, r30
    2c82:	ff 1f       	adc	r31, r31
    2c84:	bb 1f       	adc	r27, r27
    2c86:	66 1f       	adc	r22, r22
    2c88:	77 1f       	adc	r23, r23
    2c8a:	88 1f       	adc	r24, r24
    2c8c:	91 50       	subi	r25, 0x01	; 1
    2c8e:	50 40       	sbci	r21, 0x00	; 0
    2c90:	a9 f7       	brne	.-22     	; 0x2c7c <__mulsf3_pse+0x64>
    2c92:	9e 3f       	cpi	r25, 0xFE	; 254
    2c94:	51 05       	cpc	r21, r1
    2c96:	70 f0       	brcs	.+28     	; 0x2cb4 <__mulsf3_pse+0x9c>
    2c98:	14 c0       	rjmp	.+40     	; 0x2cc2 <__fp_inf>
    2c9a:	aa cf       	rjmp	.-172    	; 0x2bf0 <__fp_szero>
    2c9c:	5f 3f       	cpi	r21, 0xFF	; 255
    2c9e:	ec f3       	brlt	.-6      	; 0x2c9a <__mulsf3_pse+0x82>
    2ca0:	98 3e       	cpi	r25, 0xE8	; 232
    2ca2:	dc f3       	brlt	.-10     	; 0x2c9a <__mulsf3_pse+0x82>
    2ca4:	86 95       	lsr	r24
    2ca6:	77 95       	ror	r23
    2ca8:	67 95       	ror	r22
    2caa:	b7 95       	ror	r27
    2cac:	f7 95       	ror	r31
    2cae:	e7 95       	ror	r30
    2cb0:	9f 5f       	subi	r25, 0xFF	; 255
    2cb2:	c1 f7       	brne	.-16     	; 0x2ca4 <__mulsf3_pse+0x8c>
    2cb4:	fe 2b       	or	r31, r30
    2cb6:	88 0f       	add	r24, r24
    2cb8:	91 1d       	adc	r25, r1
    2cba:	96 95       	lsr	r25
    2cbc:	87 95       	ror	r24
    2cbe:	97 f9       	bld	r25, 7
    2cc0:	08 95       	ret

00002cc2 <__fp_inf>:
    2cc2:	97 f9       	bld	r25, 7
    2cc4:	9f 67       	ori	r25, 0x7F	; 127
    2cc6:	80 e8       	ldi	r24, 0x80	; 128
    2cc8:	70 e0       	ldi	r23, 0x00	; 0
    2cca:	60 e0       	ldi	r22, 0x00	; 0
    2ccc:	08 95       	ret

00002cce <__fp_nan>:
    2cce:	9f ef       	ldi	r25, 0xFF	; 255
    2cd0:	80 ec       	ldi	r24, 0xC0	; 192
    2cd2:	08 95       	ret

00002cd4 <__fp_pscA>:
    2cd4:	00 24       	eor	r0, r0
    2cd6:	0a 94       	dec	r0
    2cd8:	16 16       	cp	r1, r22
    2cda:	17 06       	cpc	r1, r23
    2cdc:	18 06       	cpc	r1, r24
    2cde:	09 06       	cpc	r0, r25
    2ce0:	08 95       	ret

00002ce2 <__fp_pscB>:
    2ce2:	00 24       	eor	r0, r0
    2ce4:	0a 94       	dec	r0
    2ce6:	12 16       	cp	r1, r18
    2ce8:	13 06       	cpc	r1, r19
    2cea:	14 06       	cpc	r1, r20
    2cec:	05 06       	cpc	r0, r21
    2cee:	08 95       	ret

00002cf0 <__fp_round>:
    2cf0:	09 2e       	mov	r0, r25
    2cf2:	03 94       	inc	r0
    2cf4:	00 0c       	add	r0, r0
    2cf6:	11 f4       	brne	.+4      	; 0x2cfc <__fp_round+0xc>
    2cf8:	88 23       	and	r24, r24
    2cfa:	52 f0       	brmi	.+20     	; 0x2d10 <__fp_round+0x20>
    2cfc:	bb 0f       	add	r27, r27
    2cfe:	40 f4       	brcc	.+16     	; 0x2d10 <__fp_round+0x20>
    2d00:	bf 2b       	or	r27, r31
    2d02:	11 f4       	brne	.+4      	; 0x2d08 <__fp_round+0x18>
    2d04:	60 ff       	sbrs	r22, 0
    2d06:	04 c0       	rjmp	.+8      	; 0x2d10 <__fp_round+0x20>
    2d08:	6f 5f       	subi	r22, 0xFF	; 255
    2d0a:	7f 4f       	sbci	r23, 0xFF	; 255
    2d0c:	8f 4f       	sbci	r24, 0xFF	; 255
    2d0e:	9f 4f       	sbci	r25, 0xFF	; 255
    2d10:	08 95       	ret

00002d12 <__mulsi3>:
    2d12:	db 01       	movw	r26, r22
    2d14:	8f 93       	push	r24
    2d16:	9f 93       	push	r25
    2d18:	0e 94 d5 16 	call	0x2daa	; 0x2daa <__muluhisi3>
    2d1c:	bf 91       	pop	r27
    2d1e:	af 91       	pop	r26
    2d20:	a2 9f       	mul	r26, r18
    2d22:	80 0d       	add	r24, r0
    2d24:	91 1d       	adc	r25, r1
    2d26:	a3 9f       	mul	r26, r19
    2d28:	90 0d       	add	r25, r0
    2d2a:	b2 9f       	mul	r27, r18
    2d2c:	90 0d       	add	r25, r0
    2d2e:	11 24       	eor	r1, r1
    2d30:	08 95       	ret

00002d32 <__udivmodhi4>:
    2d32:	aa 1b       	sub	r26, r26
    2d34:	bb 1b       	sub	r27, r27
    2d36:	51 e1       	ldi	r21, 0x11	; 17
    2d38:	07 c0       	rjmp	.+14     	; 0x2d48 <__udivmodhi4_ep>

00002d3a <__udivmodhi4_loop>:
    2d3a:	aa 1f       	adc	r26, r26
    2d3c:	bb 1f       	adc	r27, r27
    2d3e:	a6 17       	cp	r26, r22
    2d40:	b7 07       	cpc	r27, r23
    2d42:	10 f0       	brcs	.+4      	; 0x2d48 <__udivmodhi4_ep>
    2d44:	a6 1b       	sub	r26, r22
    2d46:	b7 0b       	sbc	r27, r23

00002d48 <__udivmodhi4_ep>:
    2d48:	88 1f       	adc	r24, r24
    2d4a:	99 1f       	adc	r25, r25
    2d4c:	5a 95       	dec	r21
    2d4e:	a9 f7       	brne	.-22     	; 0x2d3a <__udivmodhi4_loop>
    2d50:	80 95       	com	r24
    2d52:	90 95       	com	r25
    2d54:	bc 01       	movw	r22, r24
    2d56:	cd 01       	movw	r24, r26
    2d58:	08 95       	ret

00002d5a <__udivmodsi4>:
    2d5a:	a1 e2       	ldi	r26, 0x21	; 33
    2d5c:	1a 2e       	mov	r1, r26
    2d5e:	aa 1b       	sub	r26, r26
    2d60:	bb 1b       	sub	r27, r27
    2d62:	fd 01       	movw	r30, r26
    2d64:	0d c0       	rjmp	.+26     	; 0x2d80 <__udivmodsi4_ep>

00002d66 <__udivmodsi4_loop>:
    2d66:	aa 1f       	adc	r26, r26
    2d68:	bb 1f       	adc	r27, r27
    2d6a:	ee 1f       	adc	r30, r30
    2d6c:	ff 1f       	adc	r31, r31
    2d6e:	a2 17       	cp	r26, r18
    2d70:	b3 07       	cpc	r27, r19
    2d72:	e4 07       	cpc	r30, r20
    2d74:	f5 07       	cpc	r31, r21
    2d76:	20 f0       	brcs	.+8      	; 0x2d80 <__udivmodsi4_ep>
    2d78:	a2 1b       	sub	r26, r18
    2d7a:	b3 0b       	sbc	r27, r19
    2d7c:	e4 0b       	sbc	r30, r20
    2d7e:	f5 0b       	sbc	r31, r21

00002d80 <__udivmodsi4_ep>:
    2d80:	66 1f       	adc	r22, r22
    2d82:	77 1f       	adc	r23, r23
    2d84:	88 1f       	adc	r24, r24
    2d86:	99 1f       	adc	r25, r25
    2d88:	1a 94       	dec	r1
    2d8a:	69 f7       	brne	.-38     	; 0x2d66 <__udivmodsi4_loop>
    2d8c:	60 95       	com	r22
    2d8e:	70 95       	com	r23
    2d90:	80 95       	com	r24
    2d92:	90 95       	com	r25
    2d94:	9b 01       	movw	r18, r22
    2d96:	ac 01       	movw	r20, r24
    2d98:	bd 01       	movw	r22, r26
    2d9a:	cf 01       	movw	r24, r30
    2d9c:	08 95       	ret

00002d9e <__tablejump2__>:
    2d9e:	ee 0f       	add	r30, r30
    2da0:	ff 1f       	adc	r31, r31

00002da2 <__tablejump__>:
    2da2:	05 90       	lpm	r0, Z+
    2da4:	f4 91       	lpm	r31, Z
    2da6:	e0 2d       	mov	r30, r0
    2da8:	09 94       	ijmp

00002daa <__muluhisi3>:
    2daa:	0e 94 e0 16 	call	0x2dc0	; 0x2dc0 <__umulhisi3>
    2dae:	a5 9f       	mul	r26, r21
    2db0:	90 0d       	add	r25, r0
    2db2:	b4 9f       	mul	r27, r20
    2db4:	90 0d       	add	r25, r0
    2db6:	a4 9f       	mul	r26, r20
    2db8:	80 0d       	add	r24, r0
    2dba:	91 1d       	adc	r25, r1
    2dbc:	11 24       	eor	r1, r1
    2dbe:	08 95       	ret

00002dc0 <__umulhisi3>:
    2dc0:	a2 9f       	mul	r26, r18
    2dc2:	b0 01       	movw	r22, r0
    2dc4:	b3 9f       	mul	r27, r19
    2dc6:	c0 01       	movw	r24, r0
    2dc8:	a3 9f       	mul	r26, r19
    2dca:	70 0d       	add	r23, r0
    2dcc:	81 1d       	adc	r24, r1
    2dce:	11 24       	eor	r1, r1
    2dd0:	91 1d       	adc	r25, r1
    2dd2:	b2 9f       	mul	r27, r18
    2dd4:	70 0d       	add	r23, r0
    2dd6:	81 1d       	adc	r24, r1
    2dd8:	11 24       	eor	r1, r1
    2dda:	91 1d       	adc	r25, r1
    2ddc:	08 95       	ret

00002dde <_exit>:
    2dde:	f8 94       	cli

00002de0 <__stop_program>:
    2de0:	ff cf       	rjmp	.-2      	; 0x2de0 <__stop_program>
