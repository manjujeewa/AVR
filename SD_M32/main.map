Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_mulsi3.o)
                              FAT32.o (__mulsi3)
/usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_udivmodsi4.o)
                              FAT32.o (__udivmodsi4)
/usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o (exit)
/usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_tablejump.o)
                              RTC_routines.o (__tablejump2__)
/usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
                              FAT32.o (__do_copy_data)
/usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
                              main.o (__do_clear_bss)
/usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_muluhisi3.o)
                              /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_mulsi3.o) (__muluhisi3)
/usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_umulhisi3.o)
                              /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_muluhisi3.o) (__umulhisi3)

Allocating common symbols
Common symbol       size              file

rtc_register        0x7               main.o
appendFileLocation  0x4               main.o
dateFAT             0x2               main.o
firstDataSector     0x4               main.o
fileSize            0x4               main.o
bytesPerSector      0x2               main.o
totalClusters       0x4               main.o
rootCluster         0x4               main.o
timeFAT             0x2               main.o
startBlock          0x4               main.o
buffer              0x200             main.o
sectorPerCluster    0x2               main.o
unusedSectors       0x4               main.o
SDHC_flag           0x1               main.o
totalBlocks         0x4               main.o
reservedSectorCount
                    0x2               main.o
time                0xa               RTC_routines.o
appendStartCluster  0x4               main.o
cardType            0x1               main.o
day                 0x1               RTC_routines.o
date                0xc               RTC_routines.o
freeClusterCountUpdated
                    0x1               main.o
appendFileSector    0x4               main.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o
LOAD main.o
LOAD FAT32.o
LOAD i2c_routines.o
LOAD RTC_routines.o
LOAD SD_routines.o
LOAD SPI_routines.o
LOAD UART_routines.o
LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libm.a
START GROUP
LOAD /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a
LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libm.a
LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000     0x3122
 *(.vectors)
 .vectors       0x0000000000000000       0x54 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 .progmem.gcc_sw_table
                0x0000000000000054        0xe RTC_routines.o
 *(.progmem*)
 .progmem.data  0x0000000000000062      0x385 main.o
 .progmem.data  0x00000000000003e7      0x16b FAT32.o
 .progmem.data  0x0000000000000552      0x139 RTC_routines.o
                0x000000000000068c                . = ALIGN (0x2)
 *fill*         0x000000000000068b        0x1 
                0x000000000000068c                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x000000000000068c        0x0 linker stubs
 *(.trampolines*)
                0x000000000000068c                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x000000000000068c                __ctors_start = .
 *(.ctors)
                0x000000000000068c                __ctors_end = .
                0x000000000000068c                __dtors_start = .
 *(.dtors)
                0x000000000000068c                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x000000000000068c        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o
                0x000000000000068c                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x000000000000068c        0xc /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000698       0x16 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
                0x0000000000000698                __do_copy_data
 .init4         0x00000000000006ae       0x10 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
                0x00000000000006ae                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000000000006be        0x8 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o
 *(.init9)
 *(.text)
 .text          0x00000000000006c6        0x4 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o
                0x00000000000006c6                __vector_1
                0x00000000000006c6                __vector_12
                0x00000000000006c6                __bad_interrupt
                0x00000000000006c6                __vector_6
                0x00000000000006c6                __vector_3
                0x00000000000006c6                __vector_11
                0x00000000000006c6                __vector_13
                0x00000000000006c6                __vector_17
                0x00000000000006c6                __vector_19
                0x00000000000006c6                __vector_7
                0x00000000000006c6                __vector_5
                0x00000000000006c6                __vector_4
                0x00000000000006c6                __vector_9
                0x00000000000006c6                __vector_2
                0x00000000000006c6                __vector_15
                0x00000000000006c6                __vector_8
                0x00000000000006c6                __vector_14
                0x00000000000006c6                __vector_10
                0x00000000000006c6                __vector_16
                0x00000000000006c6                __vector_18
                0x00000000000006c6                __vector_20
 .text          0x00000000000006ca       0x32 main.o
                0x00000000000006ca                port_init
                0x00000000000006e2                init_devices
 .text          0x00000000000006fc     0x1780 FAT32.o
                0x00000000000006fc                getFirstSector
                0x0000000000000746                displayMemory
                0x0000000000000814                convertFileName
                0x0000000000000924                searchNextFreeCluster
                0x0000000000000a38                getSetFreeCluster
                0x0000000000000b46                freeMemoryUpdate
                0x0000000000000c08                memoryStatistics
                0x0000000000000e68                getBootSectorData
                0x0000000000001034                getSetNextCluster
                0x000000000000112e                findFiles
                0x0000000000001508                deleteFile
                0x0000000000001524                readFile
                0x00000000000016c6                writeFile
 .text          0x0000000000001e7c       0xc2 i2c_routines.o
                0x0000000000001e7c                twi_init
                0x0000000000001e86                i2c_start
                0x0000000000001ea0                i2c_repeatStart
                0x0000000000001eba                i2c_sendAddress
                0x0000000000001ee8                i2c_sendData
                0x0000000000001f04                i2c_receiveData_ACK
                0x0000000000001f1e                i2c_receiveData_NACK
                0x0000000000001f38                i2c_stop
 .text          0x0000000000001f3e      0x6b6 RTC_routines.o
                0x0000000000001f3e                RTC_setStartAddress
                0x0000000000001f6a                RTC_read
                0x0000000000001fd4                RTC_getTime
                0x0000000000002044                RTC_getDate
                0x00000000000020bc                RTC_displayTime
                0x00000000000020e8                RTC_displayDay
                0x0000000000002138                RTC_displayDate
                0x0000000000002168                RTC_updateRegisters
                0x0000000000002212                RTC_writeTime
                0x000000000000225c                RTC_writeDate
                0x00000000000022a6                RTC_updateTime
                0x00000000000023b4                RTC_updateDate
                0x0000000000002526                getDateTime_FAT
 .text          0x00000000000025f4      0x348 SD_routines.o
                0x00000000000025f4                SD_sendCommand
                0x00000000000026cc                SD_erase
                0x0000000000002732                SD_writeSingleBlock
                0x00000000000027ce                SD_readSingleBlock
                0x0000000000002830                SD_init
 .text          0x000000000000293c       0x1e SPI_routines.o
                0x000000000000293c                spi_init
                0x0000000000002944                SPI_transmit
                0x000000000000294e                SPI_receive
 .text          0x000000000000295a       0xd6 UART_routines.o
                0x000000000000295a                uart0_init
                0x000000000000296e                receiveByte
                0x0000000000002978                transmitByte
                0x0000000000002980                transmitString_F
                0x0000000000002994                transmitString
                0x00000000000029a8                transmitHex
 .text          0x0000000000002a30        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_mulsi3.o)
 .text          0x0000000000002a30        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_udivmodsi4.o)
 .text          0x0000000000002a30        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text          0x0000000000002a30        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_tablejump.o)
 .text          0x0000000000002a30        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text          0x0000000000002a30        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text          0x0000000000002a30        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_muluhisi3.o)
 .text          0x0000000000002a30        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_umulhisi3.o)
                0x0000000000002a30                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x0000000000002a30      0x64a main.o
                0x0000000000002a30                main
 .text.libgcc.mul
                0x000000000000307a       0x20 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_mulsi3.o)
                0x000000000000307a                __mulsi3
 .text.libgcc.div
                0x000000000000309a        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_mulsi3.o)
 .text.libgcc   0x000000000000309a        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_mulsi3.o)
 .text.libgcc.prologue
                0x000000000000309a        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_mulsi3.o)
 .text.libgcc.builtins
                0x000000000000309a        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_mulsi3.o)
 .text.libgcc.fmul
                0x000000000000309a        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_mulsi3.o)
 .text.libgcc.fixed
                0x000000000000309a        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_mulsi3.o)
 .text.libgcc.mul
                0x000000000000309a        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_udivmodsi4.o)
 .text.libgcc.div
                0x000000000000309a       0x44 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_udivmodsi4.o)
                0x000000000000309a                __udivmodsi4
 .text.libgcc   0x00000000000030de        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_udivmodsi4.o)
 .text.libgcc.prologue
                0x00000000000030de        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_udivmodsi4.o)
 .text.libgcc.builtins
                0x00000000000030de        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_udivmodsi4.o)
 .text.libgcc.fmul
                0x00000000000030de        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_udivmodsi4.o)
 .text.libgcc.fixed
                0x00000000000030de        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_udivmodsi4.o)
 .text.libgcc.mul
                0x00000000000030de        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.div
                0x00000000000030de        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x00000000000030de        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x00000000000030de        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x00000000000030de        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x00000000000030de        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x00000000000030de        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x00000000000030de        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_tablejump.o)
 .text.libgcc.div
                0x00000000000030de        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_tablejump.o)
 .text.libgcc   0x00000000000030de        0xc /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_tablejump.o)
                0x00000000000030de                __tablejump2__
                0x00000000000030e2                __tablejump__
 .text.libgcc.prologue
                0x00000000000030ea        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_tablejump.o)
 .text.libgcc.builtins
                0x00000000000030ea        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_tablejump.o)
 .text.libgcc.fmul
                0x00000000000030ea        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_tablejump.o)
 .text.libgcc.fixed
                0x00000000000030ea        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_tablejump.o)
 .text.libgcc.mul
                0x00000000000030ea        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x00000000000030ea        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc   0x00000000000030ea        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x00000000000030ea        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x00000000000030ea        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x00000000000030ea        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x00000000000030ea        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x00000000000030ea        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x00000000000030ea        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc   0x00000000000030ea        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x00000000000030ea        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x00000000000030ea        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x00000000000030ea        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x00000000000030ea        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.mul
                0x00000000000030ea       0x16 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_muluhisi3.o)
                0x00000000000030ea                __muluhisi3
 .text.libgcc.div
                0x0000000000003100        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_muluhisi3.o)
 .text.libgcc   0x0000000000003100        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_muluhisi3.o)
 .text.libgcc.prologue
                0x0000000000003100        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_muluhisi3.o)
 .text.libgcc.builtins
                0x0000000000003100        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_muluhisi3.o)
 .text.libgcc.fmul
                0x0000000000003100        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_muluhisi3.o)
 .text.libgcc.fixed
                0x0000000000003100        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_muluhisi3.o)
 .text.libgcc.mul
                0x0000000000003100       0x1e /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_umulhisi3.o)
                0x0000000000003100                __umulhisi3
 .text.libgcc.div
                0x000000000000311e        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_umulhisi3.o)
 .text.libgcc   0x000000000000311e        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_umulhisi3.o)
 .text.libgcc.prologue
                0x000000000000311e        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_umulhisi3.o)
 .text.libgcc.builtins
                0x000000000000311e        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_umulhisi3.o)
 .text.libgcc.fmul
                0x000000000000311e        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_umulhisi3.o)
 .text.libgcc.fixed
                0x000000000000311e        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_umulhisi3.o)
                0x000000000000311e                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x000000000000311e        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
                0x000000000000311e                exit
                0x000000000000311e                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x000000000000311e        0x4 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 *(.fini0)
                0x0000000000003122                _etext = .

.data           0x0000000000800060       0x20 load address 0x0000000000003122
                0x0000000000800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o
 .data          0x0000000000800060        0x0 main.o
 .data          0x0000000000800060       0x14 FAT32.o
 .data          0x0000000000800074        0x0 i2c_routines.o
 .data          0x0000000000800074        0x0 RTC_routines.o
 .data          0x0000000000800074        0x0 SD_routines.o
 .data          0x0000000000800074        0x0 SPI_routines.o
 .data          0x0000000000800074        0xb UART_routines.o
 .data          0x000000000080007f        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_mulsi3.o)
 .data          0x000000000080007f        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_udivmodsi4.o)
 .data          0x000000000080007f        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .data          0x000000000080007f        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_tablejump.o)
 .data          0x000000000080007f        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .data          0x000000000080007f        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .data          0x000000000080007f        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_muluhisi3.o)
 .data          0x000000000080007f        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_umulhisi3.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800080                . = ALIGN (0x2)
 *fill*         0x000000000080007f        0x1 
                0x0000000000800080                _edata = .
                0x0000000000800080                PROVIDE (__data_end, .)

.bss            0x0000000000800080      0x253
                0x0000000000800080                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800080        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o
 .bss           0x0000000000800080        0x0 main.o
 .bss           0x0000000000800080        0x0 FAT32.o
 .bss           0x0000000000800080        0x0 i2c_routines.o
 .bss           0x0000000000800080        0x0 RTC_routines.o
 .bss           0x0000000000800080        0x0 SD_routines.o
 .bss           0x0000000000800080        0x0 SPI_routines.o
 .bss           0x0000000000800080        0x0 UART_routines.o
 .bss           0x0000000000800080        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_mulsi3.o)
 .bss           0x0000000000800080        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_udivmodsi4.o)
 .bss           0x0000000000800080        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .bss           0x0000000000800080        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_tablejump.o)
 .bss           0x0000000000800080        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .bss           0x0000000000800080        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .bss           0x0000000000800080        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_muluhisi3.o)
 .bss           0x0000000000800080        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_umulhisi3.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x0000000000800080      0x23c main.o
                0x0000000000800080                rtc_register
                0x0000000000800087                appendFileLocation
                0x000000000080008b                dateFAT
                0x000000000080008d                firstDataSector
                0x0000000000800091                fileSize
                0x0000000000800095                bytesPerSector
                0x0000000000800097                totalClusters
                0x000000000080009b                rootCluster
                0x000000000080009f                timeFAT
                0x00000000008000a1                startBlock
                0x00000000008000a5                buffer
                0x00000000008002a5                sectorPerCluster
                0x00000000008002a7                unusedSectors
                0x00000000008002ab                SDHC_flag
                0x00000000008002ac                totalBlocks
                0x00000000008002b0                reservedSectorCount
                0x00000000008002b2                appendStartCluster
                0x00000000008002b6                cardType
                0x00000000008002b7                freeClusterCountUpdated
                0x00000000008002b8                appendFileSector
 COMMON         0x00000000008002bc       0x17 RTC_routines.o
                0x00000000008002bc                time
                0x00000000008002c6                day
                0x00000000008002c7                date
                0x00000000008002d3                PROVIDE (__bss_end, .)
                0x0000000000003122                __data_load_start = LOADADDR (.data)
                0x0000000000003142                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00000000008002d3        0x0
                0x00000000008002d3                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00000000008002d3                PROVIDE (__noinit_end, .)
                0x00000000008002d3                _end = .
                0x00000000008002d3                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab           0x0000000000000000      0x6cc
 *(.stab)
 .stab          0x0000000000000000      0x6cc /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o

.stabstr        0x0000000000000000       0x54
 *(.stabstr)
 .stabstr       0x0000000000000000       0x54 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 main.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000000       0x12 RTC_routines.o

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x0000000000000000       0xe8
 *(.debug_aranges)
 .debug_aranges
                0x0000000000000000       0x28 main.o
 .debug_aranges
                0x0000000000000028       0x20 FAT32.o
 .debug_aranges
                0x0000000000000048       0x20 i2c_routines.o
 .debug_aranges
                0x0000000000000068       0x20 RTC_routines.o
 .debug_aranges
                0x0000000000000088       0x20 SD_routines.o
 .debug_aranges
                0x00000000000000a8       0x20 SPI_routines.o
 .debug_aranges
                0x00000000000000c8       0x20 UART_routines.o

.debug_pubnames
                0x0000000000000000      0x47b
 *(.debug_pubnames)
 .debug_pubnames
                0x0000000000000000      0x26b FAT32.o
 .debug_pubnames
                0x000000000000026b       0xa4 i2c_routines.o
 .debug_pubnames
                0x000000000000030f       0xb2 SD_routines.o
 .debug_pubnames
                0x00000000000003c1       0x40 SPI_routines.o
 .debug_pubnames
                0x0000000000000401       0x7a UART_routines.o

.debug_info     0x0000000000000000     0x313e
 *(.debug_info)
 .debug_info    0x0000000000000000      0xf94 main.o
 .debug_info    0x0000000000000f94      0xfbc FAT32.o
 .debug_info    0x0000000000001f50      0x175 i2c_routines.o
 .debug_info    0x00000000000020c5      0xae0 RTC_routines.o
 .debug_info    0x0000000000002ba5      0x289 SD_routines.o
 .debug_info    0x0000000000002e2e       0xc6 SPI_routines.o
 .debug_info    0x0000000000002ef4      0x24a UART_routines.o
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x0000000000000000      0x952
 *(.debug_abbrev)
 .debug_abbrev  0x0000000000000000      0x211 main.o
 .debug_abbrev  0x0000000000000211      0x1fd FAT32.o
 .debug_abbrev  0x000000000000040e       0x8d i2c_routines.o
 .debug_abbrev  0x000000000000049b      0x213 RTC_routines.o
 .debug_abbrev  0x00000000000006ae       0xbf SD_routines.o
 .debug_abbrev  0x000000000000076d       0x8d SPI_routines.o
 .debug_abbrev  0x00000000000007fa      0x158 UART_routines.o

.debug_line     0x0000000000000000     0x1682
 *(.debug_line)
 .debug_line    0x0000000000000000      0x1ed main.o
 .debug_line    0x00000000000001ed      0xb19 FAT32.o
 .debug_line    0x0000000000000d06      0x1a8 i2c_routines.o
 .debug_line    0x0000000000000eae      0x19a RTC_routines.o
 .debug_line    0x0000000000001048      0x3a6 SD_routines.o
 .debug_line    0x00000000000013ee       0xc0 SPI_routines.o
 .debug_line    0x00000000000014ae      0x1d4 UART_routines.o

.debug_frame    0x0000000000000000      0x3fc
 *(.debug_frame)
 .debug_frame   0x0000000000000000       0x58 main.o
 .debug_frame   0x0000000000000058       0xe0 FAT32.o
 .debug_frame   0x0000000000000138       0x90 i2c_routines.o
 .debug_frame   0x00000000000001c8      0x124 RTC_routines.o
 .debug_frame   0x00000000000002ec       0x60 SD_routines.o
 .debug_frame   0x000000000000034c       0x40 SPI_routines.o
 .debug_frame   0x000000000000038c       0x70 UART_routines.o

.debug_str      0x0000000000000000      0xa6a
 *(.debug_str)
 .debug_str     0x0000000000000000      0x403 main.o
                                        0x450 (size before relaxing)
 .debug_str     0x0000000000000403      0x46a FAT32.o
                                        0x6e6 (size before relaxing)
 .debug_str     0x000000000000086d       0x87 i2c_routines.o
                                        0x121 (size before relaxing)
 .debug_str     0x00000000000008f4       0xc9 RTC_routines.o
                                        0x2c8 (size before relaxing)
 .debug_str     0x00000000000009bd       0x31 SD_routines.o
                                        0x133 (size before relaxing)
 .debug_str     0x00000000000009ee       0x28 SPI_routines.o
                                         0xc2 (size before relaxing)
 .debug_str     0x0000000000000a16       0x54 UART_routines.o
                                        0x146 (size before relaxing)

.debug_loc      0x0000000000000000     0x1df2
 *(.debug_loc)
 .debug_loc     0x0000000000000000      0x234 main.o
 .debug_loc     0x0000000000000234      0xfa6 FAT32.o
 .debug_loc     0x00000000000011da       0x90 i2c_routines.o
 .debug_loc     0x000000000000126a      0x747 RTC_routines.o
 .debug_loc     0x00000000000019b1      0x2e7 SD_routines.o
 .debug_loc     0x0000000000001c98       0x26 SPI_routines.o
 .debug_loc     0x0000000000001cbe      0x134 UART_routines.o

.debug_macinfo
 *(.debug_macinfo)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges   0x0000000000000000       0x48
 *(.debug_ranges)
 .debug_ranges  0x0000000000000000       0x18 main.o
 .debug_ranges  0x0000000000000018       0x30 UART_routines.o

.debug_macro
 *(.debug_macro)
OUTPUT(main.elf elf32-avr)
LOAD linker stubs

Cross Reference Table

Symbol                                            File
RTC_displayDate                                   RTC_routines.o
                                                  main.o
RTC_displayDay                                    RTC_routines.o
RTC_displayTime                                   RTC_routines.o
                                                  main.o
RTC_getDate                                       RTC_routines.o
RTC_getTime                                       RTC_routines.o
RTC_read                                          RTC_routines.o
RTC_setStartAddress                               RTC_routines.o
RTC_updateDate                                    RTC_routines.o
                                                  main.o
RTC_updateRegisters                               RTC_routines.o
RTC_updateTime                                    RTC_routines.o
                                                  main.o
RTC_writeDate                                     RTC_routines.o
RTC_writeTime                                     RTC_routines.o
SDHC_flag                                         SD_routines.o
                                                  FAT32.o
                                                  main.o
SD_erase                                          SD_routines.o
                                                  main.o
SD_init                                           SD_routines.o
                                                  main.o
SD_readSingleBlock                                SD_routines.o
                                                  FAT32.o
                                                  main.o
SD_sendCommand                                    SD_routines.o
SD_writeSingleBlock                               SD_routines.o
                                                  FAT32.o
                                                  main.o
SPI_receive                                       SPI_routines.o
                                                  SD_routines.o
SPI_transmit                                      SPI_routines.o
                                                  SD_routines.o
__bad_interrupt                                   /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o
__bss_end                                         /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
__bss_start                                       /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
__data_end                                        /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
__data_load_start                                 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
__data_start                                      /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
__do_clear_bss                                    /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
                                                  SD_routines.o
                                                  RTC_routines.o
                                                  FAT32.o
                                                  main.o
__do_copy_data                                    /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
                                                  UART_routines.o
                                                  FAT32.o
__heap_end                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o
__init                                            /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o
__mulsi3                                          /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_mulsi3.o)
                                                  FAT32.o
__muluhisi3                                       /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_muluhisi3.o)
                                                  /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_mulsi3.o)
__stack                                           /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o
__tablejump2__                                    /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_tablejump.o)
                                                  RTC_routines.o
__tablejump__                                     /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_tablejump.o)
__udivmodsi4                                      /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_udivmodsi4.o)
                                                  FAT32.o
__umulhisi3                                       /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_umulhisi3.o)
                                                  /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_muluhisi3.o)
__vector_1                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o
__vector_10                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o
__vector_11                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o
__vector_12                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o
__vector_13                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o
__vector_14                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o
__vector_15                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o
__vector_16                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o
__vector_17                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o
__vector_18                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o
__vector_19                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o
__vector_2                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o
__vector_20                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o
__vector_3                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o
__vector_4                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o
__vector_5                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o
__vector_6                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o
__vector_7                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o
__vector_8                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o
__vector_9                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o
__vector_default                                  /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o
__vectors                                         /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o
_exit                                             /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
appendFileLocation                                FAT32.o
                                                  main.o
appendFileSector                                  FAT32.o
                                                  main.o
appendStartCluster                                FAT32.o
                                                  main.o
buffer                                            SD_routines.o
                                                  FAT32.o
                                                  main.o
bytesPerSector                                    FAT32.o
                                                  main.o
cardType                                          SD_routines.o
                                                  FAT32.o
                                                  main.o
convertFileName                                   FAT32.o
date                                              RTC_routines.o
dateFAT                                           RTC_routines.o
                                                  FAT32.o
                                                  main.o
day                                               RTC_routines.o
deleteFile                                        FAT32.o
                                                  main.o
displayMemory                                     FAT32.o
exit                                              /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
                                                  /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o
fileSize                                          FAT32.o
                                                  main.o
findFiles                                         FAT32.o
                                                  main.o
firstDataSector                                   FAT32.o
                                                  main.o
freeClusterCountUpdated                           FAT32.o
                                                  main.o
freeMemoryUpdate                                  FAT32.o
getBootSectorData                                 FAT32.o
                                                  main.o
getDateTime_FAT                                   RTC_routines.o
                                                  FAT32.o
getFirstSector                                    FAT32.o
getSetFreeCluster                                 FAT32.o
getSetNextCluster                                 FAT32.o
i2c_receiveData_ACK                               i2c_routines.o
                                                  RTC_routines.o
i2c_receiveData_NACK                              i2c_routines.o
                                                  RTC_routines.o
i2c_repeatStart                                   i2c_routines.o
                                                  RTC_routines.o
i2c_sendAddress                                   i2c_routines.o
                                                  RTC_routines.o
i2c_sendData                                      i2c_routines.o
                                                  RTC_routines.o
i2c_start                                         i2c_routines.o
                                                  RTC_routines.o
i2c_stop                                          i2c_routines.o
                                                  RTC_routines.o
init_devices                                      main.o
main                                              main.o
                                                  /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o
memoryStatistics                                  FAT32.o
                                                  main.o
port_init                                         main.o
readFile                                          FAT32.o
                                                  main.o
receiveByte                                       UART_routines.o
                                                  RTC_routines.o
                                                  FAT32.o
                                                  main.o
reservedSectorCount                               FAT32.o
                                                  main.o
rootCluster                                       FAT32.o
                                                  main.o
rtc_register                                      RTC_routines.o
                                                  FAT32.o
                                                  main.o
searchNextFreeCluster                             FAT32.o
sectorPerCluster                                  FAT32.o
                                                  main.o
spi_init                                          SPI_routines.o
                                                  main.o
startBlock                                        SD_routines.o
                                                  FAT32.o
                                                  main.o
time                                              RTC_routines.o
timeFAT                                           RTC_routines.o
                                                  FAT32.o
                                                  main.o
totalBlocks                                       SD_routines.o
                                                  FAT32.o
                                                  main.o
totalClusters                                     FAT32.o
                                                  main.o
transmitByte                                      UART_routines.o
                                                  SD_routines.o
                                                  RTC_routines.o
                                                  FAT32.o
                                                  main.o
transmitHex                                       UART_routines.o
transmitString                                    UART_routines.o
                                                  RTC_routines.o
                                                  FAT32.o
transmitString_F                                  UART_routines.o
                                                  RTC_routines.o
                                                  FAT32.o
                                                  main.o
twi_init                                          i2c_routines.o
                                                  main.o
uart0_init                                        UART_routines.o
                                                  main.o
unusedSectors                                     FAT32.o
                                                  main.o
writeFile                                         FAT32.o
                                                  main.o
